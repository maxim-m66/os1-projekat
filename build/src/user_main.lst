GAS LISTING /tmp/ccr5uaQG.s 			page 1


   1              		.file	"user_main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 6368696C 		.string	"child"
   9      6400
  10 0006 0000     		.align	3
  11              	.LC1:
  12 0008 70617265 		.string	"parent"
  12      6E7400
  13              		.text
  14              		.align	2
  15              		.globl	_Z8userMainv
  17              	_Z8userMainv:
  18              	.LFB79:
  19              		.file 1 "src/user_main.cpp"
   1:src/user_main.cpp **** #include "../h/syscall_c.hpp"
   2:src/user_main.cpp **** #include "../h/c_console.hpp"
   3:src/user_main.cpp **** #include "../h/syscall_cpp.hpp"
   4:src/user_main.cpp **** #include "../h/c_thread.hpp"
   5:src/user_main.cpp **** #include "../h/iostream.hpp"
   6:src/user_main.cpp **** #include "../h/string.hpp"
   7:src/user_main.cpp **** 
   8:src/user_main.cpp **** using namespace stm;
   9:src/user_main.cpp **** 
  10:src/user_main.cpp **** class FibonacciThread : public Thread {
  11:src/user_main.cpp **** public:
  12:src/user_main.cpp ****     explicit FibonacciThread(char c) : Thread(), c(c) {}
  13:src/user_main.cpp **** 
  14:src/user_main.cpp ****     void run() override {
  15:src/user_main.cpp ****         for (int i = 0; i < 10; i++) {
  16:src/user_main.cpp ****             for (int i = 0; i < 10000000; i++);
  17:src/user_main.cpp ****             putc(c);
  18:src/user_main.cpp ****         }
  19:src/user_main.cpp ****         for (int i = 0; i < 10000000; i++);
  20:src/user_main.cpp ****         for (int i = 0; i < 10000000; i++);
  21:src/user_main.cpp ****         cout << fibonacci(static_cast<int>(c)) << endl;
  22:src/user_main.cpp ****     }
  23:src/user_main.cpp **** 
  24:src/user_main.cpp ****     int fibonacci(int i) {
  25:src/user_main.cpp ****         if (i < 0) return -1;
  26:src/user_main.cpp ****         return (i == 0 ? 0 : i + fibonacci(i - 1));
  27:src/user_main.cpp ****     }
  28:src/user_main.cpp **** private :
  29:src/user_main.cpp ****     char c;
  30:src/user_main.cpp **** };
  31:src/user_main.cpp **** 
  32:src/user_main.cpp **** class SleeperThread : public Thread {
  33:src/user_main.cpp **** public:
  34:src/user_main.cpp ****     explicit SleeperThread(int time) : time(time) {}
  35:src/user_main.cpp ****     void run() override {
  36:src/user_main.cpp ****         for (int i = 0; i < 100 / time; i++) {
  37:src/user_main.cpp ****             Thread::sleep(time);
GAS LISTING /tmp/ccr5uaQG.s 			page 2


  38:src/user_main.cpp ****             cout << "Hello thread " << time / 10 << "s!" <<  endl;
  39:src/user_main.cpp ****         }
  40:src/user_main.cpp ****     }
  41:src/user_main.cpp **** private:
  42:src/user_main.cpp ****     int time;
  43:src/user_main.cpp **** };
  44:src/user_main.cpp **** 
  45:src/user_main.cpp **** #define THRD 50
  46:src/user_main.cpp **** 
  47:src/user_main.cpp **** class Pthread : public PeriodicThread {
  48:src/user_main.cpp **** public:
  49:src/user_main.cpp ****     explicit Pthread(int period) : PeriodicThread(period) {}
  50:src/user_main.cpp ****     void periodicActivation() override {
  51:src/user_main.cpp ****         cout << "Hello from periodic thread!" << endl;
  52:src/user_main.cpp ****     }
  53:src/user_main.cpp **** };
  54:src/user_main.cpp **** 
  55:src/user_main.cpp **** int userMain() {
  20              		.loc 1 55 16
  21              		.cfi_startproc
  22 0000 130101FF 		addi	sp,sp,-16
  23              		.cfi_def_cfa_offset 16
  24 0004 23341100 		sd	ra,8(sp)
  25 0008 23308100 		sd	s0,0(sp)
  26              		.cfi_offset 1, -8
  27              		.cfi_offset 8, -16
  28 000c 13040101 		addi	s0,sp,16
  29              		.cfi_def_cfa 8, 0
  56:src/user_main.cpp ****     if(fork() == 0) {
  30              		.loc 1 56 5
  31              		.loc 1 56 12 is_stmt 0
  32 0010 97000000 		call	_Z4forkv@plt
  32      E7800000 
  33              	.LVL0:
  34              		.loc 1 56 5
  35 0018 63180502 		bnez	a0,.L2
  57:src/user_main.cpp ****         cout << "child" << endl;
  36              		.loc 1 57 9 is_stmt 1
  37              		.loc 1 57 17 is_stmt 0
  38 001c 97050000 		lla	a1,.LC0
  38      93850500 
  39 0024 17050000 		la	a0,_ZN3stm4coutE
  39      03350500 
  40 002c 97000000 		call	_ZNK3stm7istreamlsEPKc@plt
  40      E7800000 
  41              	.LVL1:
  42              		.loc 1 57 28
  43 0034 97050000 		la	a1,_ZN3stm4endlE
  43      83B50500 
  44 003c 97000000 		call	_ZNK3stm7istreamlsERKNS_7endlineE@plt
  44      E7800000 
  45              	.LVL2:
  46              	.L3:
  58:src/user_main.cpp ****     } else {
  59:src/user_main.cpp ****         cout << "parent" << endl;
  60:src/user_main.cpp ****     }
  61:src/user_main.cpp **** //    dramatic_print("Hello There!! Welcome to my Operating System.\n");
GAS LISTING /tmp/ccr5uaQG.s 			page 3


  62:src/user_main.cpp **** //    Thread *threads[THRD];
  63:src/user_main.cpp **** //    for (int i = 0; i < THRD; i++) {
  64:src/user_main.cpp **** //        threads[i] = new FibonacciThread('A' + i);
  65:src/user_main.cpp **** //        threads[i]->start();
  66:src/user_main.cpp **** //    }
  67:src/user_main.cpp **** //    for (auto & thread : threads) {
  68:src/user_main.cpp **** //        thread->join();
  69:src/user_main.cpp **** //    }
  70:src/user_main.cpp **** //    Thread *sleeper1 = new SleeperThread(10), *sleeper2 = new SleeperThread(20), *sleeper4 = new 
  71:src/user_main.cpp **** //    sleeper1->start();
  72:src/user_main.cpp **** //    sleeper2->start();
  73:src/user_main.cpp **** //    sleeper4->start();
  74:src/user_main.cpp **** //    sleeper1->join();
  75:src/user_main.cpp **** //    sleeper2->join();
  76:src/user_main.cpp **** //    sleeper4->join();
  77:src/user_main.cpp **** //    Pthread *pthread = new Pthread(10);
  78:src/user_main.cpp **** //    pthread->start();
  79:src/user_main.cpp **** //    time_sleep(100);
  80:src/user_main.cpp **** //    pthread->terminate();
  81:src/user_main.cpp **** //    pthread->join();
  82:src/user_main.cpp ****     while (true);
  47              		.loc 1 82 5 is_stmt 1 discriminator 1
  48              		.loc 1 82 5 discriminator 1
  49 0044 6F000000 		j	.L3
  50              	.L2:
  59:src/user_main.cpp ****     }
  51              		.loc 1 59 9
  59:src/user_main.cpp ****     }
  52              		.loc 1 59 17 is_stmt 0
  53 0048 97050000 		lla	a1,.LC1
  53      93850500 
  54 0050 17050000 		la	a0,_ZN3stm4coutE
  54      03350500 
  55 0058 97000000 		call	_ZNK3stm7istreamlsEPKc@plt
  55      E7800000 
  56              	.LVL3:
  59:src/user_main.cpp ****     }
  57              		.loc 1 59 29
  58 0060 97050000 		la	a1,_ZN3stm4endlE
  58      83B50500 
  59 0068 97000000 		call	_ZNK3stm7istreamlsERKNS_7endlineE@plt
  59      E7800000 
  60              	.LVL4:
  61 0070 6FF05FFD 		j	.L3
  62              		.cfi_endproc
  63              	.LFE79:
  65              	.Letext0:
  66              		.file 2 "src/../h/../lib/hw.h"
  67              		.file 3 "src/../h/iostream.hpp"
  68              		.file 4 "src/../h/string.hpp"
  69              		.file 5 "src/../h/syscall_c.hpp"
  70              		.file 6 "src/../h/circular_buffer.hpp"
GAS LISTING /tmp/ccr5uaQG.s 			page 4


DEFINED SYMBOLS
                            *ABS*:0000000000000000 user_main.cpp
     /tmp/ccr5uaQG.s:17     .text:0000000000000000 _Z8userMainv
     /tmp/ccr5uaQG.s:21     .text:0000000000000000 .L0 
     /tmp/ccr5uaQG.s:22     .text:0000000000000000 .L0 
     /tmp/ccr5uaQG.s:23     .text:0000000000000004 .L0 
     /tmp/ccr5uaQG.s:26     .text:000000000000000c .L0 
     /tmp/ccr5uaQG.s:27     .text:000000000000000c .L0 
     /tmp/ccr5uaQG.s:29     .text:0000000000000010 .L0 
     /tmp/ccr5uaQG.s:31     .text:0000000000000010 .L0 
     /tmp/ccr5uaQG.s:32     .text:0000000000000010 .L0 
     /tmp/ccr5uaQG.s:35     .text:0000000000000018 .L0 
     /tmp/ccr5uaQG.s:37     .text:000000000000001c .L0 
     /tmp/ccr5uaQG.s:38     .text:000000000000001c .L0 
     /tmp/ccr5uaQG.s:43     .text:0000000000000034 .L0 
     /tmp/ccr5uaQG.s:48     .text:0000000000000044 .L0 
     /tmp/ccr5uaQG.s:49     .text:0000000000000044 .L0 
     /tmp/ccr5uaQG.s:52     .text:0000000000000048 .L0 
     /tmp/ccr5uaQG.s:53     .text:0000000000000048 .L0 
     /tmp/ccr5uaQG.s:58     .text:0000000000000060 .L0 
     /tmp/ccr5uaQG.s:62     .text:0000000000000074 .L0 
     /tmp/ccr5uaQG.s:71     .text:0000000000000074 .L0 
     /tmp/ccr5uaQG.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccr5uaQG.s:38     .text:000000000000001c .L0 
     /tmp/ccr5uaQG.s:39     .text:0000000000000024 .L0 
     /tmp/ccr5uaQG.s:43     .text:0000000000000034 .L0 
     /tmp/ccr5uaQG.s:11     .rodata.str1.8:0000000000000008 .LC1
     /tmp/ccr5uaQG.s:53     .text:0000000000000048 .L0 
     /tmp/ccr5uaQG.s:54     .text:0000000000000050 .L0 
     /tmp/ccr5uaQG.s:58     .text:0000000000000060 .L0 
     /tmp/ccr5uaQG.s:50     .text:0000000000000048 .L2
     /tmp/ccr5uaQG.s:46     .text:0000000000000044 .L3
     /tmp/ccr5uaQG.s:798    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccr5uaQG.s:1518   .debug_str:00000000000003eb .LASF67
     /tmp/ccr5uaQG.s:1410   .debug_str:000000000000006f .LASF68
     /tmp/ccr5uaQG.s:1444   .debug_str:000000000000018f .LASF69
     /tmp/ccr5uaQG.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccr5uaQG.s:65     .text:0000000000000074 .Letext0
     /tmp/ccr5uaQG.s:1394   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccr5uaQG.s:1458   .debug_str:000000000000022a .LASF0
     /tmp/ccr5uaQG.s:1482   .debug_str:00000000000002f5 .LASF1
     /tmp/ccr5uaQG.s:1500   .debug_str:0000000000000380 .LASF2
     /tmp/ccr5uaQG.s:1504   .debug_str:0000000000000398 .LASF4
     /tmp/ccr5uaQG.s:1464   .debug_str:000000000000025b .LASF3
     /tmp/ccr5uaQG.s:1400   .debug_str:000000000000002c .LASF5
     /tmp/ccr5uaQG.s:1492   .debug_str:0000000000000332 .LASF6
     /tmp/ccr5uaQG.s:1474   .debug_str:00000000000002c3 .LASF7
     /tmp/ccr5uaQG.s:1442   .debug_str:000000000000017f .LASF8
     /tmp/ccr5uaQG.s:1450   .debug_str:00000000000001d3 .LASF9
     /tmp/ccr5uaQG.s:1414   .debug_str:0000000000000091 .LASF10
     /tmp/ccr5uaQG.s:1434   .debug_str:0000000000000142 .LASF11
     /tmp/ccr5uaQG.s:1424   .debug_str:00000000000000df .LASF12
     /tmp/ccr5uaQG.s:1412   .debug_str:0000000000000081 .LASF13
     /tmp/ccr5uaQG.s:1508   .debug_str:00000000000003b5 .LASF14
     /tmp/ccr5uaQG.s:1430   .debug_str:0000000000000119 .LASF15
     /tmp/ccr5uaQG.s:1506   .debug_str:000000000000039f .LASF16
     /tmp/ccr5uaQG.s:1486   .debug_str:000000000000031d .LASF17
GAS LISTING /tmp/ccr5uaQG.s 			page 5


     /tmp/ccr5uaQG.s:1440   .debug_str:0000000000000177 .LASF70
     /tmp/ccr5uaQG.s:1538   .debug_str:000000000000052d .LASF27
     /tmp/ccr5uaQG.s:1514   .debug_str:00000000000003cd .LASF18
     /tmp/ccr5uaQG.s:1468   .debug_str:0000000000000282 .LASF19
     /tmp/ccr5uaQG.s:1470   .debug_str:0000000000000297 .LASF20
     /tmp/ccr5uaQG.s:1416   .debug_str:00000000000000a0 .LASF21
     /tmp/ccr5uaQG.s:1484   .debug_str:0000000000000308 .LASF22
     /tmp/ccr5uaQG.s:1472   .debug_str:00000000000002ae .LASF23
     /tmp/ccr5uaQG.s:1478   .debug_str:00000000000002db .LASF24
     /tmp/ccr5uaQG.s:1408   .debug_str:0000000000000059 .LASF25
     /tmp/ccr5uaQG.s:1466   .debug_str:000000000000026d .LASF26
     /tmp/ccr5uaQG.s:1452   .debug_str:00000000000001e1 .LASF30
     /tmp/ccr5uaQG.s:1406   .debug_str:0000000000000052 .LASF28
     /tmp/ccr5uaQG.s:1446   .debug_str:00000000000001ad .LASF29
     /tmp/ccr5uaQG.s:1528   .debug_str:00000000000004df .LASF31
     /tmp/ccr5uaQG.s:1432   .debug_str:000000000000012f .LASF32
     /tmp/ccr5uaQG.s:1448   .debug_str:00000000000001c0 .LASF33
     /tmp/ccr5uaQG.s:1436   .debug_str:0000000000000151 .LASF34
     /tmp/ccr5uaQG.s:1438   .debug_str:0000000000000164 .LASF35
     /tmp/ccr5uaQG.s:1428   .debug_str:0000000000000102 .LASF36
     /tmp/ccr5uaQG.s:1522   .debug_str:00000000000004b7 .LASF37
     /tmp/ccr5uaQG.s:1502   .debug_str:000000000000038e .LASF38
     /tmp/ccr5uaQG.s:1530   .debug_str:00000000000004f4 .LASF39
     /tmp/ccr5uaQG.s:1462   .debug_str:0000000000000245 .LASF40
     /tmp/ccr5uaQG.s:1510   .debug_str:00000000000003c1 .LASF41
     /tmp/ccr5uaQG.s:1498   .debug_str:0000000000000367 .LASF42
     /tmp/ccr5uaQG.s:1532   .debug_str:000000000000050b .LASF43
     /tmp/ccr5uaQG.s:1516   .debug_str:00000000000003d8 .LASF44
     /tmp/ccr5uaQG.s:1546   .debug_str:000000000000056c .LASF45
     /tmp/ccr5uaQG.s:1490   .debug_str:0000000000000327 .LASF46
     /tmp/ccr5uaQG.s:1402   .debug_str:0000000000000033 .LASF47
     /tmp/ccr5uaQG.s:1404   .debug_str:000000000000004a .LASF48
     /tmp/ccr5uaQG.s:1426   .debug_str:00000000000000ef .LASF49
     /tmp/ccr5uaQG.s:1488   .debug_str:0000000000000322 .LASF50
     /tmp/ccr5uaQG.s:1454   .debug_str:0000000000000203 .LASF52
     /tmp/ccr5uaQG.s:1420   .debug_str:00000000000000cc .LASF51
     /tmp/ccr5uaQG.s:1494   .debug_str:0000000000000345 .LASF53
     /tmp/ccr5uaQG.s:1520   .debug_str:00000000000004af .LASF54
     /tmp/ccr5uaQG.s:1544   .debug_str:0000000000000553 .LASF55
     /tmp/ccr5uaQG.s:1540   .debug_str:0000000000000535 .LASF56
     /tmp/ccr5uaQG.s:1398   .debug_str:0000000000000005 .LASF57
     /tmp/ccr5uaQG.s:1418   .debug_str:00000000000000c1 .LASF71
     /tmp/ccr5uaQG.s:1480   .debug_str:00000000000002f0 .LASF58
     /tmp/ccr5uaQG.s:1542   .debug_str:0000000000000545 .LASF59
     /tmp/ccr5uaQG.s:1524   .debug_str:00000000000004cd .LASF60
     /tmp/ccr5uaQG.s:1476   .debug_str:00000000000002d6 .LASF61
     /tmp/ccr5uaQG.s:1536   .debug_str:000000000000051f .LASF63
     /tmp/ccr5uaQG.s:1526   .debug_str:00000000000004da .LASF62
     /tmp/ccr5uaQG.s:1460   .debug_str:0000000000000237 .LASF64
     /tmp/ccr5uaQG.s:1512   .debug_str:00000000000003c8 .LASF65
     /tmp/ccr5uaQG.s:1422   .debug_str:00000000000000d1 .LASF66
     /tmp/ccr5uaQG.s:1496   .debug_str:000000000000035e .LASF72
     /tmp/ccr5uaQG.s:1456   .debug_str:000000000000021d .LASF73
     /tmp/ccr5uaQG.s:18     .text:0000000000000000 .LFB79
     /tmp/ccr5uaQG.s:63     .text:0000000000000074 .LFE79
     /tmp/ccr5uaQG.s:33     .text:0000000000000018 .LVL0
     /tmp/ccr5uaQG.s:41     .text:0000000000000034 .LVL1
GAS LISTING /tmp/ccr5uaQG.s 			page 6


     /tmp/ccr5uaQG.s:45     .text:0000000000000044 .LVL2
     /tmp/ccr5uaQG.s:56     .text:0000000000000060 .LVL3
     /tmp/ccr5uaQG.s:60     .text:0000000000000070 .LVL4
     /tmp/ccr5uaQG.s:1534   .debug_str:0000000000000516 .LASF74
     /tmp/ccr5uaQG.s:1396   .debug_str:0000000000000000 .LASF75
     /tmp/ccr5uaQG.s:72     .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z4forkv
_ZN3stm4coutE
_ZNK3stm7istreamlsEPKc
_ZN3stm4endlE
_ZNK3stm7istreamlsERKNS_7endlineE
