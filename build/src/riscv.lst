GAS LISTING /tmp/cclWgKMm.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 0A00     		.string	"\n"
  10 0002 00000000 		.align	3
  10      0000
  11              	.LC1:
  12 0008 73657063 		.string	"sepc:   "
  12      3A202020 
  12      00
  13 0011 00000000 		.align	3
  13      000000
  14              	.LC2:
  15 0018 745F6964 		.string	"t_id:   "
  15      3A202020 
  15      00
  16              		.text
  17              		.align	2
  18              		.globl	_ZN5riscv15handleExceptionERKN3stm6stringE
  20              	_ZN5riscv15handleExceptionERKN3stm6stringE:
  21              	.LFB64:
  22              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../lib/hw.h"
   2:src/riscv.cpp **** #include "../h/c_thread.hpp"
   3:src/riscv.cpp **** #include "../h/c_semaphore.hpp"
   4:src/riscv.cpp **** #include "../h/riscv.hpp"
   5:src/riscv.cpp **** #include "../h/c_console.hpp"
   6:src/riscv.cpp **** #include "../h/c_sleep.hpp"
   7:src/riscv.cpp **** #include "../h/scheduler.hpp"
   8:src/riscv.cpp **** #include "../h/iostream.hpp"
   9:src/riscv.cpp **** 
  10:src/riscv.cpp **** riscv::syscall_f riscv::syscall_table[SYSCALL_COUNT] = {
  11:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(Allocator::_mem_alloc),
  12:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(Allocator::_mem_free),
  13:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(TCB::_thread_create),
  14:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(TCB::_thread_exit),
  15:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(TCB::_thread_dispatch),
  16:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(TCB::_thread_join),
  17:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(TCB::_thread_join_time),
  18:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(TCB::_fork),
  19:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(TCB::_kill),
  20:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(Sem::_sem_open),
  21:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(Sem::_sem_close),
  22:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(Sem::_sem_wait),
  23:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(Sem::_sem_signal),
  24:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(Sem::_sem_signal_all),
  25:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(Sem::_sem_signal_wait),
  26:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(Cradle::_time_sleep),
  27:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(Cradle::_thread_wake),
  28:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(IO::_getc),
  29:src/riscv.cpp ****         reinterpret_cast<riscv::syscall_f>(IO::_putc)
  30:src/riscv.cpp **** };
GAS LISTING /tmp/cclWgKMm.s 			page 2


  31:src/riscv.cpp **** 
  32:src/riscv.cpp **** void riscv::handleException(const stm::string &message) {
  23              		.loc 1 32 57
  24              		.cfi_startproc
  25              	.LVL0:
  26 0000 130101FD 		addi	sp,sp,-48
  27              		.cfi_def_cfa_offset 48
  28 0004 23341102 		sd	ra,40(sp)
  29 0008 23308102 		sd	s0,32(sp)
  30 000c 233C9100 		sd	s1,24(sp)
  31              		.cfi_offset 1, -8
  32              		.cfi_offset 8, -16
  33              		.cfi_offset 9, -24
  34 0010 13040103 		addi	s0,sp,48
  35              		.cfi_def_cfa 8, 0
  36 0014 93040500 		mv	s1,a0
  33:src/riscv.cpp ****     stm::cout << "\n" << message << "\n";
  37              		.loc 1 33 5
  38              		.loc 1 33 18 is_stmt 0
  39 0018 97050000 		lla	a1,.LC0
  39      93850500 
  40 0020 17050000 		la	a0,_ZN3stm4coutE
  40      03350500 
  41              	.LVL1:
  42 0028 97000000 		call	_ZNK3stm7istreamlsEPKc@plt
  42      E7800000 
  43              	.LVL2:
  44              		.loc 1 33 26
  45 0030 93850400 		mv	a1,s1
  46 0034 97000000 		call	_ZNK3stm7istreamlsERKNS_6stringE@plt
  46      E7800000 
  47              	.LVL3:
  48              		.loc 1 33 37
  49 003c 97050000 		lla	a1,.LC0
  49      93850500 
  50 0044 97000000 		call	_ZNK3stm7istreamlsEPKc@plt
  50      E7800000 
  51              	.LVL4:
  34:src/riscv.cpp ****     stm::cout << "sepc:   ";
  52              		.loc 1 34 5 is_stmt 1
  53              		.loc 1 34 18 is_stmt 0
  54 004c 97050000 		lla	a1,.LC1
  54      93850500 
  55 0054 17050000 		la	a0,_ZN3stm4coutE
  55      03350500 
  56 005c 97000000 		call	_ZNK3stm7istreamlsEPKc@plt
  56      E7800000 
  57              	.LVL5:
  35:src/riscv.cpp ****     print_h(r_sepc());
  58              		.loc 1 35 5 is_stmt 1
  59              	.LBB86:
  60              	.LBB87:
  61              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_RISCV_HPP
   2:src/../h/riscv.hpp **** #define PROJECT_BASE_RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
GAS LISTING /tmp/cclWgKMm.s 			page 3


   5:src/../h/riscv.hpp **** #include "string.hpp"
   6:src/../h/riscv.hpp **** 
   7:src/../h/riscv.hpp **** extern "C" void supervisorTrap();
   8:src/../h/riscv.hpp **** 
   9:src/../h/riscv.hpp **** class riscv {
  10:src/../h/riscv.hpp **** public:
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp ****     static void handleSupervisorTrap(uint64, uint64, uint64, uint64, uint64);
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     static void handleTimerTrap();
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     static void handleReadTrap();
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp ****     static void handleWriteTrap();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     static void handleConsoleTrap();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     static void handleException(const stm::string &message);
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     static void popSppSpie();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     static int setjump();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     static void longjump();
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     static uint64 r_sp();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // read register scause
  33:src/../h/riscv.hpp ****     static uint64 r_scause();
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // write register scause
  36:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // read register sepc
  39:src/../h/riscv.hpp ****     static uint64 r_sepc();
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     // write register sepc
  42:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  43:src/../h/riscv.hpp **** 
  44:src/../h/riscv.hpp ****     // read register stvec
  45:src/../h/riscv.hpp ****     static uint64 r_stvec();
  46:src/../h/riscv.hpp **** 
  47:src/../h/riscv.hpp ****     // write register stvec
  48:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     // read register stval
  51:src/../h/riscv.hpp ****     static uint64 r_stval();
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     // write register stval
  54:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     enum BitMaskSip {
  57:src/../h/riscv.hpp ****         SIP_SSIE = (1 << 1),
  58:src/../h/riscv.hpp ****         SIP_STIE = (1 << 5),
  59:src/../h/riscv.hpp ****         SIP_SEIE = (1 << 9),
  60:src/../h/riscv.hpp ****     };
  61:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cclWgKMm.s 			page 4


  62:src/../h/riscv.hpp ****     // mask set register sip
  63:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  64:src/../h/riscv.hpp **** 
  65:src/../h/riscv.hpp ****     // mask clear register sip
  66:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  67:src/../h/riscv.hpp **** 
  68:src/../h/riscv.hpp ****     // read register sip
  69:src/../h/riscv.hpp ****     static uint64 r_sip();
  70:src/../h/riscv.hpp **** 
  71:src/../h/riscv.hpp ****     // write register sip
  72:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  73:src/../h/riscv.hpp **** 
  74:src/../h/riscv.hpp ****     enum BitMaskSstatus {
  75:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  76:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  77:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  78:src/../h/riscv.hpp ****     };
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     // mask set register sstatus
  81:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     // mask clear register sstatus
  84:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     // read register sstatus
  87:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp ****     // write register sstatus
  90:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp ****     static uint64 r_sscratch();
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp **** private:
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp ****     enum Scause {
  97:src/../h/riscv.hpp ****         ILLEGAL_INSTRUCTION = 2,
  98:src/../h/riscv.hpp ****     };
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     typedef uint64 (*syscall_f)(uint64, uint64, uint64, uint64);
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp ****     static syscall_f syscall_table[SYSCALL_COUNT];
 103:src/../h/riscv.hpp **** };
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline uint64 riscv::r_sscratch() {
 106:src/../h/riscv.hpp ****     uint64 volatile sscratch;
 107:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(sscratch));
 108:src/../h/riscv.hpp ****     return sscratch;
 109:src/../h/riscv.hpp **** }
 110:src/../h/riscv.hpp **** 
 111:src/../h/riscv.hpp **** inline uint64 riscv::r_scause() {
 112:src/../h/riscv.hpp ****     uint64 volatile scause;
 113:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 114:src/../h/riscv.hpp ****     return scause;
 115:src/../h/riscv.hpp **** }
 116:src/../h/riscv.hpp **** 
 117:src/../h/riscv.hpp **** inline void riscv::w_scause(uint64 scause) {
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
GAS LISTING /tmp/cclWgKMm.s 			page 5


 119:src/../h/riscv.hpp **** }
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp **** inline uint64 riscv::r_sepc() {
 122:src/../h/riscv.hpp ****     uint64 volatile sepc;
  62              		.loc 2 122 5
 123:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  63              		.loc 2 123 5
  64              		.loc 2 123 64 is_stmt 0
  65              	#APP
  66              	# 123 "src/../h/riscv.hpp" 1
 124              	    return sepc;
  67              		csrr a5, sepc
  68              	# 0 "" 2
  69              	#NO_APP
  70 0068 233CF4FC 		sd	a5,-40(s0)
  71              		.loc 2 124 5 is_stmt 1
  72              		.loc 2 124 12 is_stmt 0
  73 006c 033584FD 		ld	a0,-40(s0)
  74              	.LBE87:
  75              	.LBE86:
  76              		.loc 1 35 12
  77 0070 97000000 		call	_Z7print_hm@plt
  77      E7800000 
  78              	.LVL6:
  36:src/riscv.cpp ****     stm::cout << "\n";
  79              		.loc 1 36 5 is_stmt 1
  80              		.loc 1 36 18 is_stmt 0
  81 0078 97050000 		lla	a1,.LC0
  81      93850500 
  82 0080 17050000 		la	a0,_ZN3stm4coutE
  82      03350500 
  83 0088 97000000 		call	_ZNK3stm7istreamlsEPKc@plt
  83      E7800000 
  84              	.LVL7:
  37:src/riscv.cpp ****     stm::cout << "t_id:   " << TCB::running->get_t_id() << "\n";
  85              		.loc 1 37 5 is_stmt 1
  86              		.loc 1 37 18 is_stmt 0
  87 0090 97050000 		lla	a1,.LC2
  87      93850500 
  88 0098 17050000 		la	a0,_ZN3stm4coutE
  88      03350500 
  89 00a0 97000000 		call	_ZNK3stm7istreamlsEPKc@plt
  89      E7800000 
  90              	.LVL8:
  91              		.loc 1 37 55
  92 00a8 97070000 		la	a5,_ZN3TCB7runningE
  92      83B70700 
  93 00b0 83B70700 		ld	a5,0(a5)
  94              	.LVL9:
  95              	.LBB88:
  96              	.LBB89:
  97              		.file 3 "src/../h/c_thread.hpp"
   1:src/../h/c_thread.hpp **** #ifndef PROJECT_BASE_C_THREAD_HPP
   2:src/../h/c_thread.hpp **** #define PROJECT_BASE_C_THREAD_HPP
   3:src/../h/c_thread.hpp **** 
   4:src/../h/c_thread.hpp **** #include "syscall_c.hpp"
   5:src/../h/c_thread.hpp **** #include "../lib/hw.h"
GAS LISTING /tmp/cclWgKMm.s 			page 6


   6:src/../h/c_thread.hpp **** #include "circular_buffer.hpp"
   7:src/../h/c_thread.hpp **** 
   8:src/../h/c_thread.hpp **** using run_t = void (*)(void *);
   9:src/../h/c_thread.hpp **** 
  10:src/../h/c_thread.hpp **** struct Context {
  11:src/../h/c_thread.hpp ****     uint64 ra;
  12:src/../h/c_thread.hpp ****     uint64 sp;
  13:src/../h/c_thread.hpp ****     uint64 sstatus;
  14:src/../h/c_thread.hpp ****     uint64 sepc;
  15:src/../h/c_thread.hpp **** };
  16:src/../h/c_thread.hpp **** 
  17:src/../h/c_thread.hpp **** enum Status {
  18:src/../h/c_thread.hpp ****     RUNNABLE, BLOCKED, SLEEPING, JOINED, FINISHED
  19:src/../h/c_thread.hpp **** };
  20:src/../h/c_thread.hpp **** 
  21:src/../h/c_thread.hpp **** class TCB final {
  22:src/../h/c_thread.hpp **** public:
  23:src/../h/c_thread.hpp ****     static int _thread_create(thread_t *, void(*)(void *), void *, char *);
  24:src/../h/c_thread.hpp **** 
  25:src/../h/c_thread.hpp ****     static void _thread_exit();
  26:src/../h/c_thread.hpp **** 
  27:src/../h/c_thread.hpp ****     static void _thread_dispatch();
  28:src/../h/c_thread.hpp **** 
  29:src/../h/c_thread.hpp ****     static void _thread_join(thread_t);
  30:src/../h/c_thread.hpp **** 
  31:src/../h/c_thread.hpp ****     static void _thread_join_time(thread_t, time_t);
  32:src/../h/c_thread.hpp **** 
  33:src/../h/c_thread.hpp ****     static int _fork();
  34:src/../h/c_thread.hpp **** 
  35:src/../h/c_thread.hpp ****     static int _kill(TCB *);
  36:src/../h/c_thread.hpp **** 
  37:src/../h/c_thread.hpp ****     static void thread_start();
  38:src/../h/c_thread.hpp **** 
  39:src/../h/c_thread.hpp ****     static void fork_wrapper();
  40:src/../h/c_thread.hpp **** 
  41:src/../h/c_thread.hpp ****     static void context_switch(Context *, Context *);
  42:src/../h/c_thread.hpp **** 
  43:src/../h/c_thread.hpp ****     static void context_inherit(Context *);
  44:src/../h/c_thread.hpp **** 
  45:src/../h/c_thread.hpp ****     static TCB *destroy_thread(TCB *);
  46:src/../h/c_thread.hpp **** 
  47:src/../h/c_thread.hpp ****     static void duplicate(TCB *, TCB *);
  48:src/../h/c_thread.hpp **** 
  49:src/../h/c_thread.hpp ****     TCB(run_t, void *, void *, Context);
  50:src/../h/c_thread.hpp **** 
  51:src/../h/c_thread.hpp ****     TCB(TCB &);
  52:src/../h/c_thread.hpp **** 
  53:src/../h/c_thread.hpp ****     bool is_runnable() const { return this->status == RUNNABLE; }
  54:src/../h/c_thread.hpp **** 
  55:src/../h/c_thread.hpp ****     bool is_blocked() const { return this->status == BLOCKED; }
  56:src/../h/c_thread.hpp **** 
  57:src/../h/c_thread.hpp ****     bool is_sleeping() const { return this->status == SLEEPING; }
  58:src/../h/c_thread.hpp **** 
  59:src/../h/c_thread.hpp ****     bool is_joined() const { return this->status == JOINED; }
  60:src/../h/c_thread.hpp **** 
  61:src/../h/c_thread.hpp ****     bool is_finished() const { return this->status == FINISHED; }
  62:src/../h/c_thread.hpp **** 
GAS LISTING /tmp/cclWgKMm.s 			page 7


  63:src/../h/c_thread.hpp ****     void run() { this->status = RUNNABLE; }
  64:src/../h/c_thread.hpp **** 
  65:src/../h/c_thread.hpp ****     void block() { this->status = BLOCKED; }
  66:src/../h/c_thread.hpp **** 
  67:src/../h/c_thread.hpp ****     void sleep() { this->status = SLEEPING; }
  68:src/../h/c_thread.hpp **** 
  69:src/../h/c_thread.hpp ****     void enjoin() { this->status = JOINED; }
  70:src/../h/c_thread.hpp **** 
  71:src/../h/c_thread.hpp ****     void finish() { this->status = FINISHED; }
  72:src/../h/c_thread.hpp **** 
  73:src/../h/c_thread.hpp ****     bool was_preempted() const { return this->preempted; }
  74:src/../h/c_thread.hpp **** 
  75:src/../h/c_thread.hpp ****     void set_preempted() { this->preempted = true; }
  76:src/../h/c_thread.hpp **** 
  77:src/../h/c_thread.hpp ****     void reset_preempted() { this->preempted = false; }
  78:src/../h/c_thread.hpp **** 
  79:src/../h/c_thread.hpp ****     time_t get_time_slice() const { return this->time_slice; }
  80:src/../h/c_thread.hpp **** 
  81:src/../h/c_thread.hpp ****     void set_time_slice(time_t time) { this->time_slice = time; }
  82:src/../h/c_thread.hpp **** 
  83:src/../h/c_thread.hpp ****     int get_t_id() { return this->t_id; }
  98              		.loc 3 83 22 is_stmt 1
  99              	.LBE89:
 100              	.LBE88:
 101              		.loc 1 37 55 is_stmt 0
 102 00b4 83A58700 		lw	a1,8(a5)
 103 00b8 97000000 		call	_ZNK3stm7istreamlsEi@plt
 103      E7800000 
 104              	.LVL10:
 105              		.loc 1 37 60
 106 00c0 97050000 		lla	a1,.LC0
 106      93850500 
 107 00c8 97000000 		call	_ZNK3stm7istreamlsEPKc@plt
 107      E7800000 
 108              	.LVL11:
  38:src/riscv.cpp ****     TCB::_thread_exit();
 109              		.loc 1 38 5 is_stmt 1
 110              		.loc 1 38 22 is_stmt 0
 111 00d0 97000000 		call	_ZN3TCB12_thread_exitEv@plt
 111      E7800000 
 112              	.LVL12:
  39:src/riscv.cpp **** }
 113              		.loc 1 39 1
 114 00d8 83308102 		ld	ra,40(sp)
 115              		.cfi_restore 1
 116 00dc 03340102 		ld	s0,32(sp)
 117              		.cfi_restore 8
 118              		.cfi_def_cfa 2, 48
 119 00e0 83348101 		ld	s1,24(sp)
 120              		.cfi_restore 9
 121              	.LVL13:
 122 00e4 13010103 		addi	sp,sp,48
 123              		.cfi_def_cfa_offset 0
 124 00e8 67800000 		jr	ra
 125              		.cfi_endproc
 126              	.LFE64:
 128              		.section	.rodata.str1.8
GAS LISTING /tmp/cclWgKMm.s 			page 8


 129 0021 00000000 		.align	3
 129      000000
 130              	.LC3:
 131 0028 496C6C65 		.string	"Illegal instruction"
 131      67616C20 
 131      696E7374 
 131      72756374 
 131      696F6E00 
 132              		.text
 133              		.align	2
 134              		.globl	_ZN5riscv20handleSupervisorTrapEmmmmm
 136              	_ZN5riscv20handleSupervisorTrapEmmmmm:
 137              	.LFB65:
  40:src/riscv.cpp **** 
  41:src/riscv.cpp **** void riscv::handleSupervisorTrap(uint64 code, uint64 arg1, uint64 arg2, uint64 arg3, uint64 arg4) {
 138              		.loc 1 41 99 is_stmt 1
 139              		.cfi_startproc
 140              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 141              		.cfi_lsda 0x1b,.LLSDA65
 142              	.LVL14:
 143 00ec 130101F8 		addi	sp,sp,-128
 144              		.cfi_def_cfa_offset 128
 145 00f0 233C1106 		sd	ra,120(sp)
 146 00f4 23388106 		sd	s0,112(sp)
 147 00f8 23349106 		sd	s1,104(sp)
 148              		.cfi_offset 1, -8
 149              		.cfi_offset 8, -16
 150              		.cfi_offset 9, -24
 151 00fc 13040108 		addi	s0,sp,128
 152              		.cfi_def_cfa 8, 0
 153 0100 93070500 		mv	a5,a0
 154 0104 13850500 		mv	a0,a1
 155              	.LVL15:
 156 0108 93050600 		mv	a1,a2
 157              	.LVL16:
 158 010c 13860600 		mv	a2,a3
 159              	.LVL17:
 160 0110 93060700 		mv	a3,a4
 161              	.LVL18:
  42:src/riscv.cpp ****     uint64 volatile sstatus = r_sstatus();
 162              		.loc 1 42 5
 163              	.LBB90:
 164              	.LBB91:
 125:src/../h/riscv.hpp **** }
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp **** inline void riscv::w_sepc(uint64 sepc) {
 128:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 129:src/../h/riscv.hpp **** }
 130:src/../h/riscv.hpp **** 
 131:src/../h/riscv.hpp **** inline uint64 riscv::r_stvec() {
 132:src/../h/riscv.hpp ****     uint64 volatile stvec;
 133:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 134:src/../h/riscv.hpp ****     return stvec;
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void riscv::w_stvec(uint64 stvec) {
 138:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
GAS LISTING /tmp/cclWgKMm.s 			page 9


 139:src/../h/riscv.hpp **** }
 140:src/../h/riscv.hpp **** 
 141:src/../h/riscv.hpp **** inline uint64 riscv::r_stval() {
 142:src/../h/riscv.hpp ****     uint64 volatile stval;
 143:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 144:src/../h/riscv.hpp ****     return stval;
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline void riscv::w_stval(uint64 stval) {
 148:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline void riscv::ms_sip(uint64 mask) {
 152:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 153:src/../h/riscv.hpp **** }
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline void riscv::mc_sip(uint64 mask) {
 156:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 157:src/../h/riscv.hpp **** }
 158:src/../h/riscv.hpp **** 
 159:src/../h/riscv.hpp **** inline uint64 riscv::r_sip() {
 160:src/../h/riscv.hpp ****     uint64 volatile sip;
 161:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 162:src/../h/riscv.hpp ****     return sip;
 163:src/../h/riscv.hpp **** }
 164:src/../h/riscv.hpp **** 
 165:src/../h/riscv.hpp **** inline void riscv::w_sip(uint64 sip) {
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 167:src/../h/riscv.hpp **** }
 168:src/../h/riscv.hpp **** 
 169:src/../h/riscv.hpp **** inline void riscv::ms_sstatus(uint64 mask) {
 170:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 171:src/../h/riscv.hpp **** }
 172:src/../h/riscv.hpp **** 
 173:src/../h/riscv.hpp **** inline void riscv::mc_sstatus(uint64 mask) {
 174:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 175:src/../h/riscv.hpp **** }
 176:src/../h/riscv.hpp **** 
 177:src/../h/riscv.hpp **** inline uint64 riscv::r_sstatus() {
 178:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 165              		.loc 2 178 5
 179:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 166              		.loc 2 179 5
 167              		.loc 2 179 76 is_stmt 0
 168              	#APP
 169              	# 179 "src/../h/riscv.hpp" 1
 180              	    return sstatus;
 170              		csrr a4, sstatus
 171              	# 0 "" 2
 172              	.LVL19:
 173              	#NO_APP
 174 0118 233CE4F8 		sd	a4,-104(s0)
 175              		.loc 2 180 5 is_stmt 1
 176              		.loc 2 180 12 is_stmt 0
 177 011c 033784F9 		ld	a4,-104(s0)
 178              	.LBE91:
 179              	.LBE90:
GAS LISTING /tmp/cclWgKMm.s 			page 10


 180              		.loc 1 42 41
 181 0120 233CE4FC 		sd	a4,-40(s0)
  43:src/riscv.cpp ****     uint64 volatile sepc = r_sepc();
 182              		.loc 1 43 5 is_stmt 1
 183              	.LBB92:
 184              	.LBB93:
 122:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 185              		.loc 2 122 5
 123:src/../h/riscv.hpp ****     return sepc;
 186              		.loc 2 123 5
 123:src/../h/riscv.hpp ****     return sepc;
 187              		.loc 2 123 64 is_stmt 0
 188              	#APP
 189              	# 123 "src/../h/riscv.hpp" 1
 190              		csrr a4, sepc
 191              	# 0 "" 2
 192              	#NO_APP
 193 0128 2338E4F8 		sd	a4,-112(s0)
 124:src/../h/riscv.hpp **** }
 194              		.loc 2 124 5 is_stmt 1
 124:src/../h/riscv.hpp **** }
 195              		.loc 2 124 12 is_stmt 0
 196 012c 033704F9 		ld	a4,-112(s0)
 197              	.LBE93:
 198              	.LBE92:
 199              		.loc 1 43 35
 200 0130 2338E4FC 		sd	a4,-48(s0)
  44:src/riscv.cpp ****     if (r_scause() == ILLEGAL_INSTRUCTION) {
 201              		.loc 1 44 5 is_stmt 1
 202              	.LBB94:
 203              	.LBB95:
 112:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 204              		.loc 2 112 5
 113:src/../h/riscv.hpp ****     return scause;
 205              		.loc 2 113 5
 113:src/../h/riscv.hpp ****     return scause;
 206              		.loc 2 113 72 is_stmt 0
 207              	#APP
 208              	# 113 "src/../h/riscv.hpp" 1
 209              		csrr a4, scause
 210              	# 0 "" 2
 211              	#NO_APP
 212 0138 2334E4F8 		sd	a4,-120(s0)
 114:src/../h/riscv.hpp **** }
 213              		.loc 2 114 5 is_stmt 1
 114:src/../h/riscv.hpp **** }
 214              		.loc 2 114 12 is_stmt 0
 215 013c 033884F8 		ld	a6,-120(s0)
 216              	.LBE95:
 217              	.LBE94:
 218              		.loc 1 44 5
 219 0140 13072000 		li	a4,2
 220 0144 6302E804 		beq	a6,a4,.L12
  45:src/riscv.cpp ****         handleException("Illegal instruction");
  46:src/riscv.cpp ****     } else {
  47:src/riscv.cpp ****         syscall_table[code](arg1, arg2, arg3, arg4);
 221              		.loc 1 47 9 is_stmt 1
GAS LISTING /tmp/cclWgKMm.s 			page 11


 222              		.loc 1 47 27 is_stmt 0
 223 0148 93973700 		slli	a5,a5,3
 224              	.LVL20:
 225 014c 17070000 		lla	a4,.LANCHOR0
 225      13070700 
 226 0154 B307F700 		add	a5,a4,a5
 227 0158 83B70700 		ld	a5,0(a5)
 228              	.LEHB0:
 229              		.loc 1 47 28
 230 015c E7800700 		jalr	a5
 231              	.LVL21:
 232              	.L6:
  48:src/riscv.cpp **** //        if (setjump()) {
  49:src/riscv.cpp **** //            print("here");
  50:src/riscv.cpp **** //            longjump();
  51:src/riscv.cpp **** //        }
  52:src/riscv.cpp ****     }
  53:src/riscv.cpp ****     w_sepc(sepc + 4);
 233              		.loc 1 53 5 is_stmt 1
 234              		.loc 1 53 12 is_stmt 0
 235 0160 833704FD 		ld	a5,-48(s0)
 236              		.loc 1 53 11
 237 0164 93874700 		addi	a5,a5,4
 238              	.LVL22:
 239              	.LBB96:
 240              	.LBB97:
 128:src/../h/riscv.hpp **** }
 241              		.loc 2 128 5 is_stmt 1
 128:src/../h/riscv.hpp **** }
 242              		.loc 2 128 65 is_stmt 0
 243              	#APP
 244              	# 128 "src/../h/riscv.hpp" 1
 245              		csrw sepc, a5
 246              	# 0 "" 2
 247              	.LVL23:
 248              	#NO_APP
 249              	.LBE97:
 250              	.LBE96:
  54:src/riscv.cpp ****     w_sstatus(sstatus);
 251              		.loc 1 54 5 is_stmt 1
 252              		.loc 1 54 14 is_stmt 0
 253 016c 833784FD 		ld	a5,-40(s0)
 254              	.LVL24:
 255              	.LBB98:
 256              	.LBB99:
 181:src/../h/riscv.hpp **** }
 182:src/../h/riscv.hpp **** 
 183:src/../h/riscv.hpp **** inline void riscv::w_sstatus(uint64 sstatus) {
 184:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 257              		.loc 2 184 5 is_stmt 1
 258              		.loc 2 184 77 is_stmt 0
 259              	#APP
 260              	# 184 "src/../h/riscv.hpp" 1
 185              	}
 261              		csrw sstatus, a5
 262              	# 0 "" 2
 263              	.LVL25:
GAS LISTING /tmp/cclWgKMm.s 			page 12


 264              	#NO_APP
 265              	.LBE99:
 266              	.LBE98:
  55:src/riscv.cpp **** }
 267              		.loc 1 55 1
 268 0174 83308107 		ld	ra,120(sp)
 269              		.cfi_remember_state
 270              		.cfi_restore 1
 271 0178 03340107 		ld	s0,112(sp)
 272              		.cfi_restore 8
 273              		.cfi_def_cfa 2, 128
 274 017c 83348106 		ld	s1,104(sp)
 275              		.cfi_restore 9
 276 0180 13010108 		addi	sp,sp,128
 277              		.cfi_def_cfa_offset 0
 278 0184 67800000 		jr	ra
 279              	.LVL26:
 280              	.L12:
 281              		.cfi_restore_state
  45:src/riscv.cpp ****     } else {
 282              		.loc 1 45 9 is_stmt 1
  45:src/riscv.cpp ****     } else {
 283              		.loc 1 45 24 is_stmt 0
 284 0188 97050000 		lla	a1,.LC3
 284      93850500 
 285              	.LVL27:
 286 0190 930404FA 		addi	s1,s0,-96
 287 0194 13850400 		mv	a0,s1
 288              	.LVL28:
 289 0198 97000000 		call	_ZN3stm6stringC1EPKc@plt
 289      E7800000 
 290              	.LVL29:
 291              	.LEHE0:
 292 01a0 13850400 		mv	a0,s1
 293              	.LEHB1:
 294 01a4 97000000 		call	_ZN5riscv15handleExceptionERKN3stm6stringE
 294      E7800000 
 295              	.LVL30:
 296              	.LEHE1:
 297              		.file 4 "src/../h/string.hpp"
   1:src/../h/string.hpp **** #ifndef PROJECT_BASE_STRING_HPP
   2:src/../h/string.hpp **** #define PROJECT_BASE_STRING_HPP
   3:src/../h/string.hpp **** 
   4:src/../h/string.hpp **** 
   5:src/../h/string.hpp **** #include "../lib/hw.h"
   6:src/../h/string.hpp **** 
   7:src/../h/string.hpp **** namespace stm {
   8:src/../h/string.hpp **** 
   9:src/../h/string.hpp ****     int strlen(const char *string);
  10:src/../h/string.hpp **** 
  11:src/../h/string.hpp ****     char *strcpy(const char *src, char *dst);
  12:src/../h/string.hpp **** 
  13:src/../h/string.hpp ****     void strncpy(char *src, char *dst, int max_len);
  14:src/../h/string.hpp **** 
  15:src/../h/string.hpp ****     char *strcat(const char *base, const char *tail);
  16:src/../h/string.hpp **** 
  17:src/../h/string.hpp ****     int strcmp(const char *str1, const char *str2);
GAS LISTING /tmp/cclWgKMm.s 			page 13


  18:src/../h/string.hpp **** 
  19:src/../h/string.hpp ****     char *ntos(long long number, char *buffer, int radix);
  20:src/../h/string.hpp **** 
  21:src/../h/string.hpp ****     char *utos(uint64 number, char *buffer, int radix);
  22:src/../h/string.hpp **** 
  23:src/../h/string.hpp ****     class string;
  24:src/../h/string.hpp **** 
  25:src/../h/string.hpp ****     string &operator+(const string &string1, const string &string2);
  26:src/../h/string.hpp **** 
  27:src/../h/string.hpp ****     bool operator==(const string &string1, const string &string2);
  28:src/../h/string.hpp **** 
  29:src/../h/string.hpp ****     bool operator<(const string &string1, const string &string2);
  30:src/../h/string.hpp **** 
  31:src/../h/string.hpp ****     bool operator!=(const string &string1, const string &string2);
  32:src/../h/string.hpp **** 
  33:src/../h/string.hpp ****     bool operator>(const string &string1, const string &string2);
  34:src/../h/string.hpp **** 
  35:src/../h/string.hpp ****     bool operator<=(const string &string1, const string &string2);
  36:src/../h/string.hpp **** 
  37:src/../h/string.hpp ****     bool operator>=(const string &string1, const string &string2);
  38:src/../h/string.hpp **** 
  39:src/../h/string.hpp ****     class string final {
  40:src/../h/string.hpp ****     public:
  41:src/../h/string.hpp ****         string() = default;
  42:src/../h/string.hpp **** 
  43:src/../h/string.hpp ****         string(const char *);
  44:src/../h/string.hpp **** 
  45:src/../h/string.hpp ****         string(char);
  46:src/../h/string.hpp **** 
  47:src/../h/string.hpp ****         explicit string(long long);
  48:src/../h/string.hpp **** 
  49:src/../h/string.hpp ****         explicit string(int);
  50:src/../h/string.hpp **** 
  51:src/../h/string.hpp ****         explicit string(uint64);
  52:src/../h/string.hpp **** 
  53:src/../h/string.hpp ****         string(const string &string) { this->copy(string); }
  54:src/../h/string.hpp **** 
  55:src/../h/string.hpp ****         string(string &&string) { this->move(string); }
  56:src/../h/string.hpp **** 
  57:src/../h/string.hpp ****         string &operator=(const string &);
  58:src/../h/string.hpp **** 
  59:src/../h/string.hpp ****         string &operator=(string &&) noexcept;
  60:src/../h/string.hpp **** 
  61:src/../h/string.hpp ****         int length() const { return this->size; }
  62:src/../h/string.hpp **** 
  63:src/../h/string.hpp ****         char &operator[](int i) {
  64:src/../h/string.hpp ****             return this->actual_string[i];
  65:src/../h/string.hpp ****         }
  66:src/../h/string.hpp **** 
  67:src/../h/string.hpp ****         const char &operator[](int i) const{
  68:src/../h/string.hpp ****             return this->actual_string[i];
  69:src/../h/string.hpp ****         }
  70:src/../h/string.hpp **** 
  71:src/../h/string.hpp ****         friend string &operator+(const string &string1, const string &string2);
  72:src/../h/string.hpp **** 
  73:src/../h/string.hpp ****         string &operator+=(const string &string);
  74:src/../h/string.hpp **** 
GAS LISTING /tmp/cclWgKMm.s 			page 14


  75:src/../h/string.hpp ****         friend bool operator==(const string &string1, const string &string2);
  76:src/../h/string.hpp **** 
  77:src/../h/string.hpp ****         friend bool operator<(const string &string1, const string &string2);
  78:src/../h/string.hpp **** 
  79:src/../h/string.hpp ****         friend bool operator!=(const string &string1, const string &string2) { return !(string1 == 
  80:src/../h/string.hpp **** 
  81:src/../h/string.hpp ****         friend bool operator>(const string &string1, const string &string2) {
  82:src/../h/string.hpp ****             return string1 != string2 && !(string1 < string2);
  83:src/../h/string.hpp ****         }
  84:src/../h/string.hpp **** 
  85:src/../h/string.hpp ****         friend bool operator<=(const string &string1, const string &string2) { return !(string1 > s
  86:src/../h/string.hpp **** 
  87:src/../h/string.hpp ****         friend bool operator>=(const string &string1, const string &string2) { return !(string1 < s
  88:src/../h/string.hpp **** 
  89:src/../h/string.hpp ****         ~string() { this->unexist(); }
 298              		.loc 4 89 21 is_stmt 1
 299              	.LBB100:
 300              	.LBB101:
 301              	.LBB102:
  90:src/../h/string.hpp **** 
  91:src/../h/string.hpp ****     private:
  92:src/../h/string.hpp ****         void copy(const string &);
  93:src/../h/string.hpp **** 
  94:src/../h/string.hpp ****         void move(string &);
  95:src/../h/string.hpp **** 
  96:src/../h/string.hpp ****         void unexist() { delete[] this->actual_string; }
 302              		.loc 4 96 26
 303              		.loc 4 96 41 is_stmt 0
 304 01ac 033584FA 		ld	a0,-88(s0)
 305              		.loc 4 96 54
 306 01b0 E30805FA 		beqz	a0,.L6
 307              		.loc 4 96 41
 308 01b4 97000000 		call	_ZdaPv@plt
 308      E7800000 
 309              	.LVL31:
 310 01bc 6FF05FFA 		j	.L6
 311              	.L9:
 312 01c0 93040500 		mv	s1,a0
 313              	.LVL32:
 314              	.LBE102:
 315              	.LBE101:
 316              	.LBE100:
  89:src/../h/string.hpp **** 
 317              		.loc 4 89 21 is_stmt 1
 318              	.LBB103:
 319              	.LBB104:
 320              	.LBB105:
 321              		.loc 4 96 26
 322              		.loc 4 96 41 is_stmt 0
 323 01c4 033584FA 		ld	a0,-88(s0)
 324              		.loc 4 96 54
 325 01c8 63060500 		beqz	a0,.L8
 326              		.loc 4 96 41
 327 01cc 97000000 		call	_ZdaPv@plt
 327      E7800000 
 328              	.LVL33:
 329              	.L8:
GAS LISTING /tmp/cclWgKMm.s 			page 15


 330 01d4 13850400 		mv	a0,s1
 331              	.LEHB2:
 332 01d8 97000000 		call	_Unwind_Resume@plt
 332      E7800000 
 333              	.LVL34:
 334              	.LEHE2:
 335              	.LBE105:
 336              	.LBE104:
 337              	.LBE103:
 338              		.cfi_endproc
 339              	.LFE65:
 340              		.globl	__gxx_personality_v0
 341              		.section	.gcc_except_table,"a",@progbits
 342              	.LLSDA65:
 343 0000 FF       		.byte	0xff
 344 0001 FF       		.byte	0xff
 345 0002 03       		.byte	0x3
 346 0003 27       		.byte	0x27
 347 0004 00000000 		.4byte	.LEHB0-.LFB65
 348 0008 00000000 		.4byte	.LEHE0-.LEHB0
 349 000c 00000000 		.4byte	0
 350 0010 00       		.byte	0
 351 0011 00000000 		.4byte	.LEHB1-.LFB65
 352 0015 00000000 		.4byte	.LEHE1-.LEHB1
 353 0019 00000000 		.4byte	.L9-.LFB65
 354 001d 00       		.byte	0
 355 001e 00000000 		.4byte	.LEHB2-.LFB65
 356 0022 00000000 		.4byte	.LEHE2-.LEHB2
 357 0026 00000000 		.4byte	0
 358 002a 00       		.byte	0
 359              		.text
 361              		.align	2
 362              		.globl	_ZN5riscv15handleTimerTrapEv
 364              	_ZN5riscv15handleTimerTrapEv:
 365              	.LFB66:
  56:src/riscv.cpp **** 
  57:src/riscv.cpp **** void riscv::handleTimerTrap() {
 366              		.loc 1 57 31 is_stmt 1
 367              		.cfi_startproc
 368 01e0 130101FD 		addi	sp,sp,-48
 369              		.cfi_def_cfa_offset 48
 370 01e4 23341102 		sd	ra,40(sp)
 371 01e8 23308102 		sd	s0,32(sp)
 372              		.cfi_offset 1, -8
 373              		.cfi_offset 8, -16
 374 01ec 13040103 		addi	s0,sp,48
 375              		.cfi_def_cfa 8, 0
  58:src/riscv.cpp ****     uint64 volatile sstatus = r_sstatus();
 376              		.loc 1 58 5
 377              	.LBB106:
 378              	.LBB107:
 178:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 379              		.loc 2 178 5
 179:src/../h/riscv.hpp ****     return sstatus;
 380              		.loc 2 179 5
 179:src/../h/riscv.hpp ****     return sstatus;
 381              		.loc 2 179 76 is_stmt 0
GAS LISTING /tmp/cclWgKMm.s 			page 16


 382              	#APP
 383              	# 179 "src/../h/riscv.hpp" 1
 384              		csrr a5, sstatus
 385              	# 0 "" 2
 386              	#NO_APP
 387 01f4 233CF4FC 		sd	a5,-40(s0)
 180:src/../h/riscv.hpp **** }
 388              		.loc 2 180 5 is_stmt 1
 180:src/../h/riscv.hpp **** }
 389              		.loc 2 180 12 is_stmt 0
 390 01f8 833784FD 		ld	a5,-40(s0)
 391              	.LBE107:
 392              	.LBE106:
 393              		.loc 1 58 41
 394 01fc 2334F4FE 		sd	a5,-24(s0)
  59:src/riscv.cpp ****     uint64 volatile sepc = r_sepc();
 395              		.loc 1 59 5 is_stmt 1
 396              	.LBB108:
 397              	.LBB109:
 122:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 398              		.loc 2 122 5
 123:src/../h/riscv.hpp ****     return sepc;
 399              		.loc 2 123 5
 123:src/../h/riscv.hpp ****     return sepc;
 400              		.loc 2 123 64 is_stmt 0
 401              	#APP
 402              	# 123 "src/../h/riscv.hpp" 1
 403              		csrr a5, sepc
 404              	# 0 "" 2
 405              	#NO_APP
 406 0204 2338F4FC 		sd	a5,-48(s0)
 124:src/../h/riscv.hpp **** }
 407              		.loc 2 124 5 is_stmt 1
 124:src/../h/riscv.hpp **** }
 408              		.loc 2 124 12 is_stmt 0
 409 0208 833704FD 		ld	a5,-48(s0)
 410              	.LBE109:
 411              	.LBE108:
 412              		.loc 1 59 35
 413 020c 2330F4FE 		sd	a5,-32(s0)
 414              	.L15:
  60:src/riscv.cpp ****     while ((*((char *) CONSOLE_STATUS) & CONSOLE_TX_STATUS_BIT) && !IO::Output.is_empty()) {
 415              		.loc 1 60 5 is_stmt 1
 416              		.loc 1 60 65
 417              		.loc 1 60 13 is_stmt 0
 418 0210 97070000 		la	a5,CONSOLE_STATUS
 418      83B70700 
 419 0218 83B70700 		ld	a5,0(a5)
 420 021c 83C70700 		lbu	a5,0(a5)
 421              		.loc 1 60 65
 422 0220 93F70702 		andi	a5,a5,32
 423 0224 638C0702 		beqz	a5,.L14
 424              	.LVL35:
 425              		.file 5 "src/../h/c_console.hpp"
   1:src/../h/c_console.hpp **** #ifndef PROJECT_BASE_C_CONSOLE_HPP
   2:src/../h/c_console.hpp **** #define PROJECT_BASE_C_CONSOLE_HPP
   3:src/../h/c_console.hpp **** 
GAS LISTING /tmp/cclWgKMm.s 			page 17


   4:src/../h/c_console.hpp **** #include "circular_buffer.hpp"
   5:src/../h/c_console.hpp **** #include "riscv.hpp"
   6:src/../h/c_console.hpp **** 
   7:src/../h/c_console.hpp **** class Sem;
   8:src/../h/c_console.hpp **** 
   9:src/../h/c_console.hpp **** class IOBuffer final {
  10:src/../h/c_console.hpp **** public:
  11:src/../h/c_console.hpp ****     void init();
  12:src/../h/c_console.hpp **** 
  13:src/../h/c_console.hpp ****     void put(char c);
  14:src/../h/c_console.hpp **** 
  15:src/../h/c_console.hpp ****     char get();
  16:src/../h/c_console.hpp **** 
  17:src/../h/c_console.hpp ****     bool is_empty() const { return this->buffer.is_empty(); }
 426              		.loc 5 17 29 is_stmt 1
 427              	.LBB110:
 428              	.LBB111:
 429              	.LBB112:
 430              		.file 6 "src/../h/circular_buffer.hpp"
   1:src/../h/circular_buffer.hpp **** #ifndef PROJECT_BASE_CIRCULAR_BUFFER_HPP
   2:src/../h/circular_buffer.hpp **** #define PROJECT_BASE_CIRCULAR_BUFFER_HPP
   3:src/../h/circular_buffer.hpp **** 
   4:src/../h/circular_buffer.hpp **** #include "syscall_c.hpp"
   5:src/../h/circular_buffer.hpp **** #include "c_memory.hpp"
   6:src/../h/circular_buffer.hpp **** 
   7:src/../h/circular_buffer.hpp **** namespace stm {
   8:src/../h/circular_buffer.hpp ****     template<typename T>
   9:src/../h/circular_buffer.hpp ****     class CircularBuffer {
  10:src/../h/circular_buffer.hpp ****     public:
  11:src/../h/circular_buffer.hpp **** 
  12:src/../h/circular_buffer.hpp ****         void init();
  13:src/../h/circular_buffer.hpp **** 
  14:src/../h/circular_buffer.hpp ****         void put(T);
  15:src/../h/circular_buffer.hpp **** 
  16:src/../h/circular_buffer.hpp ****         T get();
  17:src/../h/circular_buffer.hpp **** 
  18:src/../h/circular_buffer.hpp ****         T &peek();
  19:src/../h/circular_buffer.hpp **** 
  20:src/../h/circular_buffer.hpp ****         inline bool is_empty() const { return this->size == 0; }
 431              		.loc 6 20 53 is_stmt 0
 432 0228 97070000 		la	a5,_ZN2IO6OutputE
 432      83B70700 
 433 0230 83A70701 		lw	a5,16(a5)
 434              	.LVL36:
 435              	.LBE112:
 436              	.LBE111:
 437              	.LBE110:
 438              		.loc 1 60 65
 439 0234 63840702 		beqz	a5,.L14
 440              	.LBB113:
  61:src/riscv.cpp ****         char c = IO::Output.get();
 441              		.loc 1 61 9 is_stmt 1
 442              		.loc 1 61 32 is_stmt 0
 443 0238 17050000 		la	a0,_ZN2IO6OutputE
 443      03350500 
 444 0240 97000000 		call	_ZN8IOBuffer3getEv@plt
 444      E7800000 
GAS LISTING /tmp/cclWgKMm.s 			page 18


 445              	.LVL37:
  62:src/riscv.cpp ****         *(volatile char *) CONSOLE_TX_DATA = c;
 446              		.loc 1 62 9 is_stmt 1
 447 0248 97070000 		la	a5,CONSOLE_TX_DATA
 447      83B70700 
 448 0250 83B70700 		ld	a5,0(a5)
 449              		.loc 1 62 44 is_stmt 0
 450 0254 2380A700 		sb	a0,0(a5)
 451              	.LBE113:
  60:src/riscv.cpp ****         char c = IO::Output.get();
 452              		.loc 1 60 5
 453 0258 6FF09FFB 		j	.L15
 454              	.LVL38:
 455              	.L14:
  63:src/riscv.cpp ****     }
  64:src/riscv.cpp ****     mc_sip(SIP_SSIE);
 456              		.loc 1 64 5 is_stmt 1 discriminator 4
 457              	.LBB114:
 458              	.LBB115:
 156:src/../h/riscv.hpp **** }
 459              		.loc 2 156 5 discriminator 4
 156:src/../h/riscv.hpp **** }
 460              		.loc 2 156 64 is_stmt 0 discriminator 4
 461 025c 93072000 		li	a5,2
 462              	#APP
 463              	# 156 "src/../h/riscv.hpp" 1
 464              		csrc sip, a5
 465              	# 0 "" 2
 466              	.LVL39:
 467              	#NO_APP
 468              	.LBE115:
 469              	.LBE114:
  65:src/riscv.cpp ****     Cradle::update();
 470              		.loc 1 65 5 is_stmt 1 discriminator 4
 471              		.loc 1 65 19 is_stmt 0 discriminator 4
 472 0264 97000000 		call	_ZN6Cradle6updateEv@plt
 472      E7800000 
 473              	.LVL40:
  66:src/riscv.cpp ****     TCB::timer_counter++;
 474              		.loc 1 66 5 is_stmt 1 discriminator 4
 475              		.loc 1 66 23 is_stmt 0 discriminator 4
 476 026c 17070000 		la	a4,_ZN3TCB13timer_counterE
 476      03370700 
 477 0274 83370700 		ld	a5,0(a4)
 478 0278 93871700 		addi	a5,a5,1
 479 027c 2330F700 		sd	a5,0(a4)
  67:src/riscv.cpp ****     if ((time_t) TCB::timer_counter >= TCB::running->get_time_slice() && !Scheduler::is_empty()) {
 480              		.loc 1 67 5 is_stmt 1 discriminator 4
 481              		.loc 1 67 68 is_stmt 0 discriminator 4
 482 0280 17070000 		la	a4,_ZN3TCB7runningE
 482      03370700 
 483 0288 03370700 		ld	a4,0(a4)
 484              	.LVL41:
 485              	.LBB116:
 486              	.LBB117:
  79:src/../h/c_thread.hpp **** 
 487              		.loc 3 79 37 is_stmt 1 discriminator 4
GAS LISTING /tmp/cclWgKMm.s 			page 19


  79:src/../h/c_thread.hpp **** 
 488              		.loc 3 79 50 is_stmt 0 discriminator 4
 489 028c 83368705 		ld	a3,88(a4)
 490              	.LVL42:
 491              	.LBE117:
 492              	.LBE116:
 493              		.loc 1 67 71 discriminator 4
 494 0290 63E8D704 		bltu	a5,a3,.L16
 495              	.LBB118:
 496              	.LBB119:
 497              		.file 7 "src/../h/scheduler.hpp"
   1:src/../h/scheduler.hpp **** #ifndef PROJECT_BASE_SCHEDULER_HPP
   2:src/../h/scheduler.hpp **** #define PROJECT_BASE_SCHEDULER_HPP
   3:src/../h/scheduler.hpp **** 
   4:src/../h/scheduler.hpp **** #include "circular_buffer.hpp"
   5:src/../h/scheduler.hpp **** #include "syscall_c.hpp"
   6:src/../h/scheduler.hpp **** 
   7:src/../h/scheduler.hpp **** class Scheduler final {
   8:src/../h/scheduler.hpp **** public:
   9:src/../h/scheduler.hpp **** 
  10:src/../h/scheduler.hpp ****     static void init() { high_priority.init(); mid_priority.init(); low_priority.init(); }
  11:src/../h/scheduler.hpp **** 
  12:src/../h/scheduler.hpp ****     static void put(TCB *thread);
  13:src/../h/scheduler.hpp **** 
  14:src/../h/scheduler.hpp ****     static TCB *get();
  15:src/../h/scheduler.hpp **** 
  16:src/../h/scheduler.hpp ****     static inline bool is_empty() {
  17:src/../h/scheduler.hpp ****         return high_priority.is_empty() && mid_priority.is_empty() && low_priority.is_empty();
 498              		.loc 7 17 9 is_stmt 1
 499              	.LVL43:
 500              	.LBB120:
 501              	.LBB121:
 502              		.loc 6 20 53 is_stmt 0
 503 0294 97070000 		la	a5,_ZN9Scheduler13high_priorityE
 503      83B70700 
 504 029c 83A70701 		lw	a5,16(a5)
 505              	.LVL44:
 506              	.LBE121:
 507              	.LBE120:
 508              		.loc 7 17 68
 509 02a0 63920702 		bnez	a5,.L17
 510              	.LVL45:
 511              	.LBB122:
 512              	.LBB123:
 513              		.loc 6 20 53
 514 02a4 97070000 		la	a5,_ZN9Scheduler12mid_priorityE
 514      83B70700 
 515 02ac 83A70701 		lw	a5,16(a5)
 516              	.LVL46:
 517              	.LBE123:
 518              	.LBE122:
 519              		.loc 7 17 41
 520 02b0 639A0700 		bnez	a5,.L17
 521              	.LVL47:
 522              	.LBB124:
 523              	.LBB125:
 524              		.loc 6 20 53
GAS LISTING /tmp/cclWgKMm.s 			page 20


 525 02b4 97070000 		la	a5,_ZN9Scheduler12low_priorityE
 525      83B70700 
 526 02bc 83A70701 		lw	a5,16(a5)
 527              	.LVL48:
 528              	.LBE125:
 529              	.LBE124:
 530              		.loc 7 17 68
 531 02c0 63800702 		beqz	a5,.L16
 532              	.L17:
 533              	.LBE119:
 534              	.LBE118:
  68:src/riscv.cpp ****         TCB::timer_counter = 0;
 535              		.loc 1 68 9 is_stmt 1
 536              		.loc 1 68 28 is_stmt 0
 537 02c4 97070000 		la	a5,_ZN3TCB13timer_counterE
 537      83B70700 
 538 02cc 23B00700 		sd	zero,0(a5)
  69:src/riscv.cpp ****         TCB::running->set_preempted();
 539              		.loc 1 69 9 is_stmt 1
 540              	.LVL49:
 541              	.LBB126:
 542              	.LBB127:
  75:src/../h/c_thread.hpp **** 
 543              		.loc 3 75 28
  75:src/../h/c_thread.hpp **** 
 544              		.loc 3 75 44 is_stmt 0
 545 02d0 93071000 		li	a5,1
 546 02d4 2300F706 		sb	a5,96(a4)
 547              	.LVL50:
 548              	.LBE127:
 549              	.LBE126:
  70:src/riscv.cpp ****         TCB::_thread_dispatch();
 550              		.loc 1 70 9 is_stmt 1
 551              		.loc 1 70 30 is_stmt 0
 552 02d8 97000000 		call	_ZN3TCB16_thread_dispatchEv@plt
 552      E7800000 
 553              	.LVL51:
 554              	.L16:
  71:src/riscv.cpp ****     }
  72:src/riscv.cpp ****     w_sepc(sepc);
 555              		.loc 1 72 5 is_stmt 1
 556              		.loc 1 72 11 is_stmt 0
 557 02e0 833704FE 		ld	a5,-32(s0)
 558              	.LVL52:
 559              	.LBB128:
 560              	.LBB129:
 128:src/../h/riscv.hpp **** }
 561              		.loc 2 128 5 is_stmt 1
 128:src/../h/riscv.hpp **** }
 562              		.loc 2 128 65 is_stmt 0
 563              	#APP
 564              	# 128 "src/../h/riscv.hpp" 1
 565              		csrw sepc, a5
 566              	# 0 "" 2
 567              	.LVL53:
 568              	#NO_APP
 569              	.LBE129:
GAS LISTING /tmp/cclWgKMm.s 			page 21


 570              	.LBE128:
  73:src/riscv.cpp ****     w_sstatus(sstatus);
 571              		.loc 1 73 5 is_stmt 1
 572              		.loc 1 73 14 is_stmt 0
 573 02e8 833784FE 		ld	a5,-24(s0)
 574              	.LVL54:
 575              	.LBB130:
 576              	.LBB131:
 184:src/../h/riscv.hpp **** }
 577              		.loc 2 184 5 is_stmt 1
 184:src/../h/riscv.hpp **** }
 578              		.loc 2 184 77 is_stmt 0
 579              	#APP
 580              	# 184 "src/../h/riscv.hpp" 1
 581              		csrw sstatus, a5
 582              	# 0 "" 2
 583              	.LVL55:
 584              	#NO_APP
 585              	.LBE131:
 586              	.LBE130:
  74:src/riscv.cpp **** }
 587              		.loc 1 74 1
 588 02f0 83308102 		ld	ra,40(sp)
 589              		.cfi_restore 1
 590 02f4 03340102 		ld	s0,32(sp)
 591              		.cfi_restore 8
 592              		.cfi_def_cfa 2, 48
 593 02f8 13010103 		addi	sp,sp,48
 594              		.cfi_def_cfa_offset 0
 595 02fc 67800000 		jr	ra
 596              		.cfi_endproc
 597              	.LFE66:
 599              		.align	2
 600              		.globl	_ZN5riscv17handleConsoleTrapEv
 602              	_ZN5riscv17handleConsoleTrapEv:
 603              	.LFB67:
  75:src/riscv.cpp **** 
  76:src/riscv.cpp **** void riscv::handleConsoleTrap() {
 604              		.loc 1 76 33 is_stmt 1
 605              		.cfi_startproc
 606 0300 130101FE 		addi	sp,sp,-32
 607              		.cfi_def_cfa_offset 32
 608 0304 233C1100 		sd	ra,24(sp)
 609 0308 23388100 		sd	s0,16(sp)
 610              		.cfi_offset 1, -8
 611              		.cfi_offset 8, -16
 612 030c 13040102 		addi	s0,sp,32
 613              		.cfi_def_cfa 8, 0
  77:src/riscv.cpp ****     if (plic_claim() == CONSOLE_IRQ) {
 614              		.loc 1 77 5
 615              	.LBB132:
 616              		.loc 1 77 19 is_stmt 0
 617 0310 97000000 		call	plic_claim@plt
 617      E7800000 
 618              	.LVL56:
 619              		.loc 1 77 5
 620 0318 9307A000 		li	a5,10
GAS LISTING /tmp/cclWgKMm.s 			page 22


 621 031c 630AF500 		beq	a0,a5,.L23
 622              	.L19:
 623              	.LBE132:
  78:src/riscv.cpp ****         if ((*((char *) CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)) {
  79:src/riscv.cpp ****             volatile char c = *(char *) CONSOLE_RX_DATA;
  80:src/riscv.cpp ****             IO::Input.put(c);
  81:src/riscv.cpp ****         }
  82:src/riscv.cpp ****         plic_complete(CONSOLE_IRQ);
  83:src/riscv.cpp ****     }
  84:src/riscv.cpp **** }
 624              		.loc 1 84 1
 625 0320 83308101 		ld	ra,24(sp)
 626              		.cfi_remember_state
 627              		.cfi_restore 1
 628 0324 03340101 		ld	s0,16(sp)
 629              		.cfi_restore 8
 630              		.cfi_def_cfa 2, 32
 631 0328 13010102 		addi	sp,sp,32
 632              		.cfi_def_cfa_offset 0
 633 032c 67800000 		jr	ra
 634              	.L23:
 635              		.cfi_restore_state
 636              	.LBB138:
 637              	.LBB133:
  78:src/riscv.cpp ****         if ((*((char *) CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)) {
 638              		.loc 1 78 9 is_stmt 1
 639              	.LBB134:
  78:src/riscv.cpp ****         if ((*((char *) CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)) {
 640              		.loc 1 78 14 is_stmt 0
 641 0330 97070000 		la	a5,CONSOLE_STATUS
 641      83B70700 
 642 0338 83B70700 		ld	a5,0(a5)
 643 033c 83C70700 		lbu	a5,0(a5)
  78:src/riscv.cpp ****         if ((*((char *) CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)) {
 644              		.loc 1 78 9
 645 0340 93F71700 		andi	a5,a5,1
 646 0344 639A0700 		bnez	a5,.L24
 647              	.L21:
 648              	.LBE134:
  82:src/riscv.cpp ****     }
 649              		.loc 1 82 9 is_stmt 1
  82:src/riscv.cpp ****     }
 650              		.loc 1 82 22 is_stmt 0
 651 0348 1305A000 		li	a0,10
 652 034c 97000000 		call	plic_complete@plt
 652      E7800000 
 653              	.LVL57:
 654              	.LBE133:
 655              	.LBE138:
 656              		.loc 1 84 1
 657 0354 6FF0DFFC 		j	.L19
 658              	.L24:
 659              	.LBB139:
 660              	.LBB137:
 661              	.LBB136:
 662              	.LBB135:
  79:src/riscv.cpp ****             IO::Input.put(c);
GAS LISTING /tmp/cclWgKMm.s 			page 23


 663              		.loc 1 79 13 is_stmt 1
  79:src/riscv.cpp ****             IO::Input.put(c);
 664              		.loc 1 79 31 is_stmt 0
 665 0358 97070000 		la	a5,CONSOLE_RX_DATA
 665      83B70700 
 666 0360 83B70700 		ld	a5,0(a5)
 667 0364 83C70700 		lbu	a5,0(a5)
  79:src/riscv.cpp ****             IO::Input.put(c);
 668              		.loc 1 79 27
 669 0368 A307F4FE 		sb	a5,-17(s0)
  80:src/riscv.cpp ****         }
 670              		.loc 1 80 13 is_stmt 1
  80:src/riscv.cpp ****         }
 671              		.loc 1 80 26 is_stmt 0
 672 036c 8345F4FE 		lbu	a1,-17(s0)
 673 0370 93F5F50F 		andi	a1,a1,0xff
 674 0374 17050000 		la	a0,_ZN2IO5InputE
 674      03350500 
 675 037c 97000000 		call	_ZN8IOBuffer3putEc@plt
 675      E7800000 
 676              	.LVL58:
 677              	.LBE135:
 678 0384 6FF05FFC 		j	.L21
 679              	.LBE136:
 680              	.LBE137:
 681              	.LBE139:
 682              		.cfi_endproc
 683              	.LFE67:
 685              		.align	2
 686              		.globl	_ZN5riscv10popSppSpieEv
 688              	_ZN5riscv10popSppSpieEv:
 689              	.LFB68:
  85:src/riscv.cpp **** 
  86:src/riscv.cpp **** void riscv::popSppSpie() {
 690              		.loc 1 86 26 is_stmt 1
 691              		.cfi_startproc
 692 0388 130101FF 		addi	sp,sp,-16
 693              		.cfi_def_cfa_offset 16
 694 038c 23348100 		sd	s0,8(sp)
 695              		.cfi_offset 8, -8
 696 0390 13040101 		addi	s0,sp,16
 697              		.cfi_def_cfa 8, 0
  87:src/riscv.cpp ****     riscv::mc_sstatus(riscv::SSTATUS_SPP);
 698              		.loc 1 87 5
 699              	.LVL59:
 700              	.LBB140:
 701              	.LBB141:
 174:src/../h/riscv.hpp **** }
 702              		.loc 2 174 5
 174:src/../h/riscv.hpp **** }
 703              		.loc 2 174 68 is_stmt 0
 704 0394 93070010 		li	a5,256
 705              	#APP
 706              	# 174 "src/../h/riscv.hpp" 1
 707              		csrc sstatus, a5
 708              	# 0 "" 2
 709              	.LVL60:
GAS LISTING /tmp/cclWgKMm.s 			page 24


 710              	#NO_APP
 711              	.LBE141:
 712              	.LBE140:
  88:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
 713              		.loc 1 88 5 is_stmt 1
 714              		.loc 1 88 38 is_stmt 0
 715              	#APP
 716              	# 88 "src/riscv.cpp" 1
  89              	    __asm__ volatile("sret");
 717              		csrw sepc, ra
 718              	# 0 "" 2
 719              		.loc 1 89 5 is_stmt 1
 720              		.loc 1 89 29 is_stmt 0
 721              	# 89 "src/riscv.cpp" 1
  90              	}
 722              		sret
 723              	# 0 "" 2
 724              		.loc 1 90 1
 725              	#NO_APP
 726 03a4 03348100 		ld	s0,8(sp)
 727              		.cfi_restore 8
 728              		.cfi_def_cfa 2, 16
 729 03a8 13010101 		addi	sp,sp,16
 730              		.cfi_def_cfa_offset 0
 731 03ac 67800000 		jr	ra
 732              		.cfi_endproc
 733              	.LFE68:
 735              		.section	.rodata.str1.8
 736 003c 00000000 		.align	3
 737              	.LC4:
 738 0040 496C6C65 		.string	"Illegal read address"
 738      67616C20 
 738      72656164 
 738      20616464 
 738      72657373 
 739              		.text
 740              		.align	2
 741              		.globl	_ZN5riscv14handleReadTrapEv
 743              	_ZN5riscv14handleReadTrapEv:
 744              	.LFB69:
  91:src/riscv.cpp **** 
  92:src/riscv.cpp **** void riscv::handleReadTrap() {
 745              		.loc 1 92 30 is_stmt 1
 746              		.cfi_startproc
 747              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 748              		.cfi_lsda 0x1b,.LLSDA69
 749 03b0 130101FB 		addi	sp,sp,-80
 750              		.cfi_def_cfa_offset 80
 751 03b4 23341104 		sd	ra,72(sp)
 752 03b8 23308104 		sd	s0,64(sp)
 753 03bc 233C9102 		sd	s1,56(sp)
 754              		.cfi_offset 1, -8
 755              		.cfi_offset 8, -16
 756              		.cfi_offset 9, -24
 757 03c0 13040105 		addi	s0,sp,80
 758              		.cfi_def_cfa 8, 0
  93:src/riscv.cpp ****     handleException("Illegal read address");
GAS LISTING /tmp/cclWgKMm.s 			page 25


 759              		.loc 1 93 5
 760              		.loc 1 93 20 is_stmt 0
 761 03c4 97050000 		lla	a1,.LC4
 761      93850500 
 762 03cc 930404FB 		addi	s1,s0,-80
 763 03d0 13850400 		mv	a0,s1
 764              	.LEHB3:
 765 03d4 97000000 		call	_ZN3stm6stringC1EPKc@plt
 765      E7800000 
 766              	.LVL61:
 767              	.LEHE3:
 768 03dc 13850400 		mv	a0,s1
 769              	.LEHB4:
 770 03e0 97000000 		call	_ZN5riscv15handleExceptionERKN3stm6stringE
 770      E7800000 
 771              	.LVL62:
 772              	.LEHE4:
  89:src/../h/string.hpp **** 
 773              		.loc 4 89 21 is_stmt 1
 774              	.LBB142:
 775              	.LBB143:
 776              	.LBB144:
 777              		.loc 4 96 26
 778              		.loc 4 96 41 is_stmt 0
 779 03e8 033584FB 		ld	a0,-72(s0)
 780              		.loc 4 96 54
 781 03ec 63060500 		beqz	a0,.L27
 782              		.loc 4 96 41
 783 03f0 97000000 		call	_ZdaPv@plt
 783      E7800000 
 784              	.LVL63:
 785              	.L27:
 786              	.LBE144:
 787              	.LBE143:
 788              	.LBE142:
  94:src/riscv.cpp **** }
 789              		.loc 1 94 1
 790 03f8 83308104 		ld	ra,72(sp)
 791              		.cfi_remember_state
 792              		.cfi_restore 1
 793 03fc 03340104 		ld	s0,64(sp)
 794              		.cfi_restore 8
 795              		.cfi_def_cfa 2, 80
 796 0400 83348103 		ld	s1,56(sp)
 797              		.cfi_restore 9
 798 0404 13010105 		addi	sp,sp,80
 799              		.cfi_def_cfa_offset 0
 800 0408 67800000 		jr	ra
 801              	.L31:
 802              		.cfi_restore_state
 803 040c 93040500 		mv	s1,a0
 804              	.LVL64:
  89:src/../h/string.hpp **** 
 805              		.loc 4 89 21 is_stmt 1
 806              	.LBB145:
 807              	.LBB146:
 808              	.LBB147:
GAS LISTING /tmp/cclWgKMm.s 			page 26


 809              		.loc 4 96 26
 810              		.loc 4 96 41 is_stmt 0
 811 0410 033584FB 		ld	a0,-72(s0)
 812              		.loc 4 96 54
 813 0414 63060500 		beqz	a0,.L30
 814              		.loc 4 96 41
 815 0418 97000000 		call	_ZdaPv@plt
 815      E7800000 
 816              	.LVL65:
 817              	.L30:
 818 0420 13850400 		mv	a0,s1
 819              	.LEHB5:
 820 0424 97000000 		call	_Unwind_Resume@plt
 820      E7800000 
 821              	.LVL66:
 822              	.LEHE5:
 823              	.LBE147:
 824              	.LBE146:
 825              	.LBE145:
 826              		.cfi_endproc
 827              	.LFE69:
 828              		.section	.gcc_except_table
 829              	.LLSDA69:
 830 002b FF       		.byte	0xff
 831 002c FF       		.byte	0xff
 832 002d 03       		.byte	0x3
 833 002e 27       		.byte	0x27
 834 002f 00000000 		.4byte	.LEHB3-.LFB69
 835 0033 00000000 		.4byte	.LEHE3-.LEHB3
 836 0037 00000000 		.4byte	0
 837 003b 00       		.byte	0
 838 003c 00000000 		.4byte	.LEHB4-.LFB69
 839 0040 00000000 		.4byte	.LEHE4-.LEHB4
 840 0044 00000000 		.4byte	.L31-.LFB69
 841 0048 00       		.byte	0
 842 0049 00000000 		.4byte	.LEHB5-.LFB69
 843 004d 00000000 		.4byte	.LEHE5-.LEHB5
 844 0051 00000000 		.4byte	0
 845 0055 00       		.byte	0
 846              		.text
 848              		.section	.rodata.str1.8
 849 0055 000000   		.align	3
 850              	.LC5:
 851 0058 496C6C65 		.string	"Illegal write address"
 851      67616C20 
 851      77726974 
 851      65206164 
 851      64726573 
 852              		.text
 853              		.align	2
 854              		.globl	_ZN5riscv15handleWriteTrapEv
 856              	_ZN5riscv15handleWriteTrapEv:
 857              	.LFB70:
  95:src/riscv.cpp **** 
  96:src/riscv.cpp **** void riscv::handleWriteTrap() {
 858              		.loc 1 96 31 is_stmt 1
 859              		.cfi_startproc
GAS LISTING /tmp/cclWgKMm.s 			page 27


 860              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 861              		.cfi_lsda 0x1b,.LLSDA70
 862 042c 130101FB 		addi	sp,sp,-80
 863              		.cfi_def_cfa_offset 80
 864 0430 23341104 		sd	ra,72(sp)
 865 0434 23308104 		sd	s0,64(sp)
 866 0438 233C9102 		sd	s1,56(sp)
 867              		.cfi_offset 1, -8
 868              		.cfi_offset 8, -16
 869              		.cfi_offset 9, -24
 870 043c 13040105 		addi	s0,sp,80
 871              		.cfi_def_cfa 8, 0
  97:src/riscv.cpp ****     handleException("Illegal write address");
 872              		.loc 1 97 5
 873              		.loc 1 97 20 is_stmt 0
 874 0440 97050000 		lla	a1,.LC5
 874      93850500 
 875 0448 930404FB 		addi	s1,s0,-80
 876 044c 13850400 		mv	a0,s1
 877              	.LEHB6:
 878 0450 97000000 		call	_ZN3stm6stringC1EPKc@plt
 878      E7800000 
 879              	.LVL67:
 880              	.LEHE6:
 881 0458 13850400 		mv	a0,s1
 882              	.LEHB7:
 883 045c 97000000 		call	_ZN5riscv15handleExceptionERKN3stm6stringE
 883      E7800000 
 884              	.LVL68:
 885              	.LEHE7:
  89:src/../h/string.hpp **** 
 886              		.loc 4 89 21 is_stmt 1
 887              	.LBB148:
 888              	.LBB149:
 889              	.LBB150:
 890              		.loc 4 96 26
 891              		.loc 4 96 41 is_stmt 0
 892 0464 033584FB 		ld	a0,-72(s0)
 893              		.loc 4 96 54
 894 0468 63060500 		beqz	a0,.L33
 895              		.loc 4 96 41
 896 046c 97000000 		call	_ZdaPv@plt
 896      E7800000 
 897              	.LVL69:
 898              	.L33:
 899              	.LBE150:
 900              	.LBE149:
 901              	.LBE148:
  98:src/riscv.cpp **** }...
 902              		.loc 1 98 1
 903 0474 83308104 		ld	ra,72(sp)
 904              		.cfi_remember_state
 905              		.cfi_restore 1
 906 0478 03340104 		ld	s0,64(sp)
 907              		.cfi_restore 8
 908              		.cfi_def_cfa 2, 80
 909 047c 83348103 		ld	s1,56(sp)
GAS LISTING /tmp/cclWgKMm.s 			page 28


 910              		.cfi_restore 9
 911 0480 13010105 		addi	sp,sp,80
 912              		.cfi_def_cfa_offset 0
 913 0484 67800000 		jr	ra
 914              	.L37:
 915              		.cfi_restore_state
 916 0488 93040500 		mv	s1,a0
 917              	.LVL70:
  89:src/../h/string.hpp **** 
 918              		.loc 4 89 21 is_stmt 1
 919              	.LBB151:
 920              	.LBB152:
 921              	.LBB153:
 922              		.loc 4 96 26
 923              		.loc 4 96 41 is_stmt 0
 924 048c 033584FB 		ld	a0,-72(s0)
 925              		.loc 4 96 54
 926 0490 63060500 		beqz	a0,.L36
 927              		.loc 4 96 41
 928 0494 97000000 		call	_ZdaPv@plt
 928      E7800000 
 929              	.LVL71:
 930              	.L36:
 931 049c 13850400 		mv	a0,s1
 932              	.LEHB8:
 933 04a0 97000000 		call	_Unwind_Resume@plt
 933      E7800000 
 934              	.LVL72:
 935              	.LEHE8:
 936              	.LBE153:
 937              	.LBE152:
 938              	.LBE151:
 939              		.cfi_endproc
 940              	.LFE70:
 941              		.section	.gcc_except_table
 942              	.LLSDA70:
 943 0056 FF       		.byte	0xff
 944 0057 FF       		.byte	0xff
 945 0058 03       		.byte	0x3
 946 0059 27       		.byte	0x27
 947 005a 00000000 		.4byte	.LEHB6-.LFB70
 948 005e 00000000 		.4byte	.LEHE6-.LEHB6
 949 0062 00000000 		.4byte	0
 950 0066 00       		.byte	0
 951 0067 00000000 		.4byte	.LEHB7-.LFB70
 952 006b 00000000 		.4byte	.LEHE7-.LEHB7
 953 006f 00000000 		.4byte	.L37-.LFB70
 954 0073 00       		.byte	0
 955 0074 00000000 		.4byte	.LEHB8-.LFB70
 956 0078 00000000 		.4byte	.LEHE8-.LEHB8
 957 007c 00000000 		.4byte	0
 958 0080 00       		.byte	0
 959              		.text
 961              		.globl	_ZN5riscv13syscall_tableE
 962              		.section	.data.rel,"aw"
 963              		.align	3
 964              		.set	.LANCHOR0,. + 0
GAS LISTING /tmp/cclWgKMm.s 			page 29


 967              	_ZN5riscv13syscall_tableE:
 968 0000 00000000 		.dword	_ZN9Allocator10_mem_allocEm
 968      00000000 
 969 0008 00000000 		.dword	_ZN9Allocator9_mem_freeEPKv
 969      00000000 
 970 0010 00000000 		.dword	_ZN3TCB14_thread_createEPPS_PFvPvES2_Pc
 970      00000000 
 971 0018 00000000 		.dword	_ZN3TCB12_thread_exitEv
 971      00000000 
 972 0020 00000000 		.dword	_ZN3TCB16_thread_dispatchEv
 972      00000000 
 973 0028 00000000 		.dword	_ZN3TCB12_thread_joinEPS_
 973      00000000 
 974 0030 00000000 		.dword	_ZN3TCB17_thread_join_timeEPS_m
 974      00000000 
 975 0038 00000000 		.dword	_ZN3TCB5_forkEv
 975      00000000 
 976 0040 00000000 		.dword	_ZN3TCB5_killEPS_
 976      00000000 
 977 0048 00000000 		.dword	_ZN3Sem9_sem_openEPPS_j
 977      00000000 
 978 0050 00000000 		.dword	_ZN3Sem10_sem_closeEPS_
 978      00000000 
 979 0058 00000000 		.dword	_ZN3Sem9_sem_waitEPS_
 979      00000000 
 980 0060 00000000 		.dword	_ZN3Sem11_sem_signalEPS_
 980      00000000 
 981 0068 00000000 		.dword	_ZN3Sem15_sem_signal_allEPS_
 981      00000000 
 982 0070 00000000 		.dword	_ZN3Sem16_sem_signal_waitEPS_S0_
 982      00000000 
 983 0078 00000000 		.dword	_ZN6Cradle11_time_sleepEm
 983      00000000 
 984 0080 00000000 		.dword	_ZN6Cradle12_thread_wakeEP3TCB
 984      00000000 
 985 0088 00000000 		.dword	_ZN2IO5_getcEv
 985      00000000 
 986 0090 00000000 		.dword	_ZN2IO5_putcEc
 986      00000000 
 987              		.text
 988              	.Letext0:
 989              		.file 8 "src/../lib/hw.h"
 990              		.file 9 "src/../h/syscall_c.hpp"
 991              		.file 10 "src/../h/c_semaphore.hpp"
 992              		.file 11 "src/../h/iostream.hpp"
 993              		.file 12 "src/../h/c_sleep.hpp"
 6773              		.align	3
 6776              	DW.ref.__gxx_personality_v0:
 6777 0000 00000000 		.dword	__gxx_personality_v0
 6777      00000000 
 6778              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 6779              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/cclWgKMm.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/cclWgKMm.s:20     .text:0000000000000000 _ZN5riscv15handleExceptionERKN3stm6stringE
     /tmp/cclWgKMm.s:24     .text:0000000000000000 .L0 
     /tmp/cclWgKMm.s:26     .text:0000000000000000 .L0 
     /tmp/cclWgKMm.s:27     .text:0000000000000004 .L0 
     /tmp/cclWgKMm.s:31     .text:0000000000000010 .L0 
     /tmp/cclWgKMm.s:32     .text:0000000000000010 .L0 
     /tmp/cclWgKMm.s:33     .text:0000000000000010 .L0 
     /tmp/cclWgKMm.s:35     .text:0000000000000014 .L0 
     /tmp/cclWgKMm.s:38     .text:0000000000000018 .L0 
     /tmp/cclWgKMm.s:39     .text:0000000000000018 .L0 
     /tmp/cclWgKMm.s:45     .text:0000000000000030 .L0 
     /tmp/cclWgKMm.s:49     .text:000000000000003c .L0 
     /tmp/cclWgKMm.s:53     .text:000000000000004c .L0 
     /tmp/cclWgKMm.s:54     .text:000000000000004c .L0 
     /tmp/cclWgKMm.s:62     .text:0000000000000064 .L0 
     /tmp/cclWgKMm.s:63     .text:0000000000000064 .L0 
     /tmp/cclWgKMm.s:64     .text:0000000000000064 .L0 
  src/../h/riscv.hpp:123    .text:0000000000000064 .L0 
     /tmp/cclWgKMm.s:72     .text:000000000000006c .L0 
     /tmp/cclWgKMm.s:73     .text:000000000000006c .L0 
     /tmp/cclWgKMm.s:77     .text:0000000000000070 .L0 
     /tmp/cclWgKMm.s:80     .text:0000000000000078 .L0 
     /tmp/cclWgKMm.s:81     .text:0000000000000078 .L0 
     /tmp/cclWgKMm.s:86     .text:0000000000000090 .L0 
     /tmp/cclWgKMm.s:87     .text:0000000000000090 .L0 
     /tmp/cclWgKMm.s:92     .text:00000000000000a8 .L0 
     /tmp/cclWgKMm.s:101    .text:00000000000000b4 .L0 
     /tmp/cclWgKMm.s:102    .text:00000000000000b4 .L0 
     /tmp/cclWgKMm.s:106    .text:00000000000000c0 .L0 
     /tmp/cclWgKMm.s:110    .text:00000000000000d0 .L0 
     /tmp/cclWgKMm.s:111    .text:00000000000000d0 .L0 
     /tmp/cclWgKMm.s:114    .text:00000000000000d8 .L0 
     /tmp/cclWgKMm.s:115    .text:00000000000000dc .L0 
     /tmp/cclWgKMm.s:117    .text:00000000000000e0 .L0 
     /tmp/cclWgKMm.s:118    .text:00000000000000e0 .L0 
     /tmp/cclWgKMm.s:120    .text:00000000000000e4 .L0 
     /tmp/cclWgKMm.s:123    .text:00000000000000e8 .L0 
     /tmp/cclWgKMm.s:125    .text:00000000000000ec .L0 
     /tmp/cclWgKMm.s:136    .text:00000000000000ec _ZN5riscv20handleSupervisorTrapEmmmmm
     /tmp/cclWgKMm.s:139    .text:00000000000000ec .L0 
     /tmp/cclWgKMm.s:6776   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cclWgKMm.s:143    .text:00000000000000ec .L0 
     /tmp/cclWgKMm.s:144    .text:00000000000000f0 .L0 
     /tmp/cclWgKMm.s:148    .text:00000000000000fc .L0 
     /tmp/cclWgKMm.s:149    .text:00000000000000fc .L0 
     /tmp/cclWgKMm.s:150    .text:00000000000000fc .L0 
     /tmp/cclWgKMm.s:152    .text:0000000000000100 .L0 
     /tmp/cclWgKMm.s:165    .text:0000000000000114 .L0 
     /tmp/cclWgKMm.s:166    .text:0000000000000114 .L0 
     /tmp/cclWgKMm.s:167    .text:0000000000000114 .L0 
  src/../h/riscv.hpp:179    .text:0000000000000114 .L0 
     /tmp/cclWgKMm.s:176    .text:000000000000011c .L0 
     /tmp/cclWgKMm.s:177    .text:000000000000011c .L0 
     /tmp/cclWgKMm.s:181    .text:0000000000000120 .L0 
     /tmp/cclWgKMm.s:185    .text:0000000000000124 .L0 
GAS LISTING /tmp/cclWgKMm.s 			page 31


     /tmp/cclWgKMm.s:186    .text:0000000000000124 .L0 
     /tmp/cclWgKMm.s:187    .text:0000000000000124 .L0 
  src/../h/riscv.hpp:123    .text:0000000000000124 .L0 
     /tmp/cclWgKMm.s:195    .text:000000000000012c .L0 
     /tmp/cclWgKMm.s:196    .text:000000000000012c .L0 
     /tmp/cclWgKMm.s:200    .text:0000000000000130 .L0 
     /tmp/cclWgKMm.s:204    .text:0000000000000134 .L0 
     /tmp/cclWgKMm.s:205    .text:0000000000000134 .L0 
     /tmp/cclWgKMm.s:206    .text:0000000000000134 .L0 
  src/../h/riscv.hpp:113    .text:0000000000000134 .L0 
     /tmp/cclWgKMm.s:214    .text:000000000000013c .L0 
     /tmp/cclWgKMm.s:215    .text:000000000000013c .L0 
     /tmp/cclWgKMm.s:219    .text:0000000000000140 .L0 
     /tmp/cclWgKMm.s:222    .text:0000000000000148 .L0 
     /tmp/cclWgKMm.s:223    .text:0000000000000148 .L0 
     /tmp/cclWgKMm.s:230    .text:000000000000015c .L0 
     /tmp/cclWgKMm.s:234    .text:0000000000000160 .L0 
     /tmp/cclWgKMm.s:235    .text:0000000000000160 .L0 
     /tmp/cclWgKMm.s:237    .text:0000000000000164 .L0 
     /tmp/cclWgKMm.s:242    .text:0000000000000168 .L0 
  src/../h/riscv.hpp:128    .text:0000000000000168 .L0 
     /tmp/cclWgKMm.s:252    .text:000000000000016c .L0 
     /tmp/cclWgKMm.s:253    .text:000000000000016c .L0 
     /tmp/cclWgKMm.s:258    .text:0000000000000170 .L0 
  src/../h/riscv.hpp:184    .text:0000000000000170 .L0 
     /tmp/cclWgKMm.s:268    .text:0000000000000174 .L0 
     /tmp/cclWgKMm.s:269    .text:0000000000000178 .L0 
     /tmp/cclWgKMm.s:270    .text:0000000000000178 .L0 
     /tmp/cclWgKMm.s:272    .text:000000000000017c .L0 
     /tmp/cclWgKMm.s:273    .text:000000000000017c .L0 
     /tmp/cclWgKMm.s:275    .text:0000000000000180 .L0 
     /tmp/cclWgKMm.s:277    .text:0000000000000184 .L0 
     /tmp/cclWgKMm.s:281    .text:0000000000000188 .L0 
     /tmp/cclWgKMm.s:283    .text:0000000000000188 .L0 
     /tmp/cclWgKMm.s:284    .text:0000000000000188 .L0 
     /tmp/cclWgKMm.s:302    .text:00000000000001ac .L0 
     /tmp/cclWgKMm.s:303    .text:00000000000001ac .L0 
     /tmp/cclWgKMm.s:304    .text:00000000000001ac .L0 
     /tmp/cclWgKMm.s:306    .text:00000000000001b0 .L0 
     /tmp/cclWgKMm.s:308    .text:00000000000001b4 .L0 
     /tmp/cclWgKMm.s:321    .text:00000000000001c4 .L0 
     /tmp/cclWgKMm.s:322    .text:00000000000001c4 .L0 
     /tmp/cclWgKMm.s:323    .text:00000000000001c4 .L0 
     /tmp/cclWgKMm.s:325    .text:00000000000001c8 .L0 
     /tmp/cclWgKMm.s:327    .text:00000000000001cc .L0 
     /tmp/cclWgKMm.s:338    .text:00000000000001e0 .L0 
     /tmp/cclWgKMm.s:364    .text:00000000000001e0 _ZN5riscv15handleTimerTrapEv
     /tmp/cclWgKMm.s:367    .text:00000000000001e0 .L0 
     /tmp/cclWgKMm.s:368    .text:00000000000001e0 .L0 
     /tmp/cclWgKMm.s:369    .text:00000000000001e4 .L0 
     /tmp/cclWgKMm.s:372    .text:00000000000001ec .L0 
     /tmp/cclWgKMm.s:373    .text:00000000000001ec .L0 
     /tmp/cclWgKMm.s:375    .text:00000000000001f0 .L0 
     /tmp/cclWgKMm.s:379    .text:00000000000001f0 .L0 
     /tmp/cclWgKMm.s:380    .text:00000000000001f0 .L0 
     /tmp/cclWgKMm.s:381    .text:00000000000001f0 .L0 
  src/../h/riscv.hpp:179    .text:00000000000001f0 .L0 
GAS LISTING /tmp/cclWgKMm.s 			page 32


     /tmp/cclWgKMm.s:389    .text:00000000000001f8 .L0 
     /tmp/cclWgKMm.s:390    .text:00000000000001f8 .L0 
     /tmp/cclWgKMm.s:394    .text:00000000000001fc .L0 
     /tmp/cclWgKMm.s:398    .text:0000000000000200 .L0 
     /tmp/cclWgKMm.s:399    .text:0000000000000200 .L0 
     /tmp/cclWgKMm.s:400    .text:0000000000000200 .L0 
  src/../h/riscv.hpp:123    .text:0000000000000200 .L0 
     /tmp/cclWgKMm.s:408    .text:0000000000000208 .L0 
     /tmp/cclWgKMm.s:409    .text:0000000000000208 .L0 
     /tmp/cclWgKMm.s:413    .text:000000000000020c .L0 
     /tmp/cclWgKMm.s:416    .text:0000000000000210 .L0 
     /tmp/cclWgKMm.s:417    .text:0000000000000210 .L0 
     /tmp/cclWgKMm.s:418    .text:0000000000000210 .L0 
     /tmp/cclWgKMm.s:422    .text:0000000000000220 .L0 
     /tmp/cclWgKMm.s:431    .text:0000000000000228 .L0 
     /tmp/cclWgKMm.s:432    .text:0000000000000228 .L0 
     /tmp/cclWgKMm.s:439    .text:0000000000000234 .L0 
     /tmp/cclWgKMm.s:442    .text:0000000000000238 .L0 
     /tmp/cclWgKMm.s:443    .text:0000000000000238 .L0 
     /tmp/cclWgKMm.s:447    .text:0000000000000248 .L0 
     /tmp/cclWgKMm.s:450    .text:0000000000000254 .L0 
     /tmp/cclWgKMm.s:453    .text:0000000000000258 .L0 
     /tmp/cclWgKMm.s:459    .text:000000000000025c .L0 
     /tmp/cclWgKMm.s:460    .text:000000000000025c .L0 
     /tmp/cclWgKMm.s:461    .text:000000000000025c .L0 
     /tmp/cclWgKMm.s:471    .text:0000000000000264 .L0 
     /tmp/cclWgKMm.s:472    .text:0000000000000264 .L0 
     /tmp/cclWgKMm.s:475    .text:000000000000026c .L0 
     /tmp/cclWgKMm.s:476    .text:000000000000026c .L0 
     /tmp/cclWgKMm.s:481    .text:0000000000000280 .L0 
     /tmp/cclWgKMm.s:482    .text:0000000000000280 .L0 
     /tmp/cclWgKMm.s:488    .text:000000000000028c .L0 
     /tmp/cclWgKMm.s:489    .text:000000000000028c .L0 
     /tmp/cclWgKMm.s:494    .text:0000000000000290 .L0 
     /tmp/cclWgKMm.s:502    .text:0000000000000294 .L0 
     /tmp/cclWgKMm.s:503    .text:0000000000000294 .L0 
     /tmp/cclWgKMm.s:509    .text:00000000000002a0 .L0 
     /tmp/cclWgKMm.s:514    .text:00000000000002a4 .L0 
     /tmp/cclWgKMm.s:520    .text:00000000000002b0 .L0 
     /tmp/cclWgKMm.s:525    .text:00000000000002b4 .L0 
     /tmp/cclWgKMm.s:531    .text:00000000000002c0 .L0 
     /tmp/cclWgKMm.s:536    .text:00000000000002c4 .L0 
     /tmp/cclWgKMm.s:537    .text:00000000000002c4 .L0 
     /tmp/cclWgKMm.s:543    .text:00000000000002d0 .L0 
     /tmp/cclWgKMm.s:544    .text:00000000000002d0 .L0 
     /tmp/cclWgKMm.s:545    .text:00000000000002d0 .L0 
     /tmp/cclWgKMm.s:551    .text:00000000000002d8 .L0 
     /tmp/cclWgKMm.s:552    .text:00000000000002d8 .L0 
     /tmp/cclWgKMm.s:556    .text:00000000000002e0 .L0 
     /tmp/cclWgKMm.s:557    .text:00000000000002e0 .L0 
     /tmp/cclWgKMm.s:562    .text:00000000000002e4 .L0 
  src/../h/riscv.hpp:128    .text:00000000000002e4 .L0 
     /tmp/cclWgKMm.s:572    .text:00000000000002e8 .L0 
     /tmp/cclWgKMm.s:573    .text:00000000000002e8 .L0 
     /tmp/cclWgKMm.s:578    .text:00000000000002ec .L0 
  src/../h/riscv.hpp:184    .text:00000000000002ec .L0 
     /tmp/cclWgKMm.s:588    .text:00000000000002f0 .L0 
GAS LISTING /tmp/cclWgKMm.s 			page 33


     /tmp/cclWgKMm.s:589    .text:00000000000002f4 .L0 
     /tmp/cclWgKMm.s:591    .text:00000000000002f8 .L0 
     /tmp/cclWgKMm.s:592    .text:00000000000002f8 .L0 
     /tmp/cclWgKMm.s:594    .text:00000000000002fc .L0 
     /tmp/cclWgKMm.s:596    .text:0000000000000300 .L0 
     /tmp/cclWgKMm.s:602    .text:0000000000000300 _ZN5riscv17handleConsoleTrapEv
     /tmp/cclWgKMm.s:605    .text:0000000000000300 .L0 
     /tmp/cclWgKMm.s:606    .text:0000000000000300 .L0 
     /tmp/cclWgKMm.s:607    .text:0000000000000304 .L0 
     /tmp/cclWgKMm.s:610    .text:000000000000030c .L0 
     /tmp/cclWgKMm.s:611    .text:000000000000030c .L0 
     /tmp/cclWgKMm.s:613    .text:0000000000000310 .L0 
     /tmp/cclWgKMm.s:616    .text:0000000000000310 .L0 
     /tmp/cclWgKMm.s:617    .text:0000000000000310 .L0 
     /tmp/cclWgKMm.s:620    .text:0000000000000318 .L0 
     /tmp/cclWgKMm.s:625    .text:0000000000000320 .L0 
     /tmp/cclWgKMm.s:626    .text:0000000000000324 .L0 
     /tmp/cclWgKMm.s:627    .text:0000000000000324 .L0 
     /tmp/cclWgKMm.s:629    .text:0000000000000328 .L0 
     /tmp/cclWgKMm.s:630    .text:0000000000000328 .L0 
     /tmp/cclWgKMm.s:632    .text:000000000000032c .L0 
     /tmp/cclWgKMm.s:635    .text:0000000000000330 .L0 
     /tmp/cclWgKMm.s:640    .text:0000000000000330 .L0 
     /tmp/cclWgKMm.s:641    .text:0000000000000330 .L0 
     /tmp/cclWgKMm.s:645    .text:0000000000000340 .L0 
     /tmp/cclWgKMm.s:650    .text:0000000000000348 .L0 
     /tmp/cclWgKMm.s:651    .text:0000000000000348 .L0 
     /tmp/cclWgKMm.s:657    .text:0000000000000354 .L0 
     /tmp/cclWgKMm.s:664    .text:0000000000000358 .L0 
     /tmp/cclWgKMm.s:665    .text:0000000000000358 .L0 
     /tmp/cclWgKMm.s:669    .text:0000000000000368 .L0 
     /tmp/cclWgKMm.s:671    .text:000000000000036c .L0 
     /tmp/cclWgKMm.s:672    .text:000000000000036c .L0 
     /tmp/cclWgKMm.s:682    .text:0000000000000388 .L0 
     /tmp/cclWgKMm.s:688    .text:0000000000000388 _ZN5riscv10popSppSpieEv
     /tmp/cclWgKMm.s:691    .text:0000000000000388 .L0 
     /tmp/cclWgKMm.s:692    .text:0000000000000388 .L0 
     /tmp/cclWgKMm.s:693    .text:000000000000038c .L0 
     /tmp/cclWgKMm.s:695    .text:0000000000000390 .L0 
     /tmp/cclWgKMm.s:697    .text:0000000000000394 .L0 
     /tmp/cclWgKMm.s:702    .text:0000000000000394 .L0 
     /tmp/cclWgKMm.s:703    .text:0000000000000394 .L0 
     /tmp/cclWgKMm.s:704    .text:0000000000000394 .L0 
     /tmp/cclWgKMm.s:714    .text:000000000000039c .L0 
       src/riscv.cpp:88     .text:000000000000039c .L0 
     /tmp/cclWgKMm.s:720    .text:00000000000003a0 .L0 
       src/riscv.cpp:89     .text:00000000000003a0 .L0 
     /tmp/cclWgKMm.s:726    .text:00000000000003a4 .L0 
     /tmp/cclWgKMm.s:727    .text:00000000000003a8 .L0 
     /tmp/cclWgKMm.s:728    .text:00000000000003a8 .L0 
     /tmp/cclWgKMm.s:730    .text:00000000000003ac .L0 
     /tmp/cclWgKMm.s:732    .text:00000000000003b0 .L0 
     /tmp/cclWgKMm.s:743    .text:00000000000003b0 _ZN5riscv14handleReadTrapEv
     /tmp/cclWgKMm.s:746    .text:00000000000003b0 .L0 
     /tmp/cclWgKMm.s:749    .text:00000000000003b0 .L0 
     /tmp/cclWgKMm.s:750    .text:00000000000003b4 .L0 
     /tmp/cclWgKMm.s:754    .text:00000000000003c0 .L0 
GAS LISTING /tmp/cclWgKMm.s 			page 34


     /tmp/cclWgKMm.s:755    .text:00000000000003c0 .L0 
     /tmp/cclWgKMm.s:756    .text:00000000000003c0 .L0 
     /tmp/cclWgKMm.s:758    .text:00000000000003c4 .L0 
     /tmp/cclWgKMm.s:760    .text:00000000000003c4 .L0 
     /tmp/cclWgKMm.s:761    .text:00000000000003c4 .L0 
     /tmp/cclWgKMm.s:777    .text:00000000000003e8 .L0 
     /tmp/cclWgKMm.s:778    .text:00000000000003e8 .L0 
     /tmp/cclWgKMm.s:779    .text:00000000000003e8 .L0 
     /tmp/cclWgKMm.s:781    .text:00000000000003ec .L0 
     /tmp/cclWgKMm.s:783    .text:00000000000003f0 .L0 
     /tmp/cclWgKMm.s:790    .text:00000000000003f8 .L0 
     /tmp/cclWgKMm.s:791    .text:00000000000003fc .L0 
     /tmp/cclWgKMm.s:792    .text:00000000000003fc .L0 
     /tmp/cclWgKMm.s:794    .text:0000000000000400 .L0 
     /tmp/cclWgKMm.s:795    .text:0000000000000400 .L0 
     /tmp/cclWgKMm.s:797    .text:0000000000000404 .L0 
     /tmp/cclWgKMm.s:799    .text:0000000000000408 .L0 
     /tmp/cclWgKMm.s:802    .text:000000000000040c .L0 
     /tmp/cclWgKMm.s:809    .text:0000000000000410 .L0 
     /tmp/cclWgKMm.s:810    .text:0000000000000410 .L0 
     /tmp/cclWgKMm.s:811    .text:0000000000000410 .L0 
     /tmp/cclWgKMm.s:813    .text:0000000000000414 .L0 
     /tmp/cclWgKMm.s:815    .text:0000000000000418 .L0 
     /tmp/cclWgKMm.s:826    .text:000000000000042c .L0 
     /tmp/cclWgKMm.s:856    .text:000000000000042c _ZN5riscv15handleWriteTrapEv
     /tmp/cclWgKMm.s:859    .text:000000000000042c .L0 
     /tmp/cclWgKMm.s:862    .text:000000000000042c .L0 
     /tmp/cclWgKMm.s:863    .text:0000000000000430 .L0 
     /tmp/cclWgKMm.s:867    .text:000000000000043c .L0 
     /tmp/cclWgKMm.s:868    .text:000000000000043c .L0 
     /tmp/cclWgKMm.s:869    .text:000000000000043c .L0 
     /tmp/cclWgKMm.s:871    .text:0000000000000440 .L0 
     /tmp/cclWgKMm.s:873    .text:0000000000000440 .L0 
     /tmp/cclWgKMm.s:874    .text:0000000000000440 .L0 
     /tmp/cclWgKMm.s:890    .text:0000000000000464 .L0 
     /tmp/cclWgKMm.s:891    .text:0000000000000464 .L0 
     /tmp/cclWgKMm.s:892    .text:0000000000000464 .L0 
     /tmp/cclWgKMm.s:894    .text:0000000000000468 .L0 
     /tmp/cclWgKMm.s:896    .text:000000000000046c .L0 
     /tmp/cclWgKMm.s:903    .text:0000000000000474 .L0 
     /tmp/cclWgKMm.s:904    .text:0000000000000478 .L0 
     /tmp/cclWgKMm.s:905    .text:0000000000000478 .L0 
     /tmp/cclWgKMm.s:907    .text:000000000000047c .L0 
     /tmp/cclWgKMm.s:908    .text:000000000000047c .L0 
     /tmp/cclWgKMm.s:910    .text:0000000000000480 .L0 
     /tmp/cclWgKMm.s:912    .text:0000000000000484 .L0 
     /tmp/cclWgKMm.s:915    .text:0000000000000488 .L0 
     /tmp/cclWgKMm.s:922    .text:000000000000048c .L0 
     /tmp/cclWgKMm.s:923    .text:000000000000048c .L0 
     /tmp/cclWgKMm.s:924    .text:000000000000048c .L0 
     /tmp/cclWgKMm.s:926    .text:0000000000000490 .L0 
     /tmp/cclWgKMm.s:928    .text:0000000000000494 .L0 
     /tmp/cclWgKMm.s:939    .text:00000000000004a8 .L0 
     /tmp/cclWgKMm.s:967    .data.rel:0000000000000000 _ZN5riscv13syscall_tableE
     /tmp/cclWgKMm.s:964    .data.rel:0000000000000000 .LANCHOR0
     /tmp/cclWgKMm.s:994    .text:00000000000004a8 .L0 
     /tmp/cclWgKMm.s:8      .rodata.str1.8:0000000000000000 .LC0
GAS LISTING /tmp/cclWgKMm.s 			page 35


     /tmp/cclWgKMm.s:39     .text:0000000000000018 .L0 
     /tmp/cclWgKMm.s:40     .text:0000000000000020 .L0 
     /tmp/cclWgKMm.s:49     .text:000000000000003c .L0 
     /tmp/cclWgKMm.s:11     .rodata.str1.8:0000000000000008 .LC1
     /tmp/cclWgKMm.s:54     .text:000000000000004c .L0 
     /tmp/cclWgKMm.s:55     .text:0000000000000054 .L0 
     /tmp/cclWgKMm.s:81     .text:0000000000000078 .L0 
     /tmp/cclWgKMm.s:82     .text:0000000000000080 .L0 
     /tmp/cclWgKMm.s:14     .rodata.str1.8:0000000000000018 .LC2
     /tmp/cclWgKMm.s:87     .text:0000000000000090 .L0 
     /tmp/cclWgKMm.s:88     .text:0000000000000098 .L0 
     /tmp/cclWgKMm.s:92     .text:00000000000000a8 .L0 
     /tmp/cclWgKMm.s:106    .text:00000000000000c0 .L0 
     /tmp/cclWgKMm.s:225    .text:000000000000014c .L0 
     /tmp/cclWgKMm.s:130    .rodata.str1.8:0000000000000028 .LC3
     /tmp/cclWgKMm.s:284    .text:0000000000000188 .L0 
     /tmp/cclWgKMm.s:418    .text:0000000000000210 .L0 
     /tmp/cclWgKMm.s:432    .text:0000000000000228 .L0 
     /tmp/cclWgKMm.s:443    .text:0000000000000238 .L0 
     /tmp/cclWgKMm.s:447    .text:0000000000000248 .L0 
     /tmp/cclWgKMm.s:476    .text:000000000000026c .L0 
     /tmp/cclWgKMm.s:482    .text:0000000000000280 .L0 
     /tmp/cclWgKMm.s:503    .text:0000000000000294 .L0 
     /tmp/cclWgKMm.s:514    .text:00000000000002a4 .L0 
     /tmp/cclWgKMm.s:525    .text:00000000000002b4 .L0 
     /tmp/cclWgKMm.s:537    .text:00000000000002c4 .L0 
     /tmp/cclWgKMm.s:641    .text:0000000000000330 .L0 
     /tmp/cclWgKMm.s:665    .text:0000000000000358 .L0 
     /tmp/cclWgKMm.s:674    .text:0000000000000374 .L0 
     /tmp/cclWgKMm.s:737    .rodata.str1.8:0000000000000040 .LC4
     /tmp/cclWgKMm.s:761    .text:00000000000003c4 .L0 
     /tmp/cclWgKMm.s:850    .rodata.str1.8:0000000000000058 .LC5
     /tmp/cclWgKMm.s:874    .text:0000000000000440 .L0 
     /tmp/cclWgKMm.s:280    .text:0000000000000188 .L12
     /tmp/cclWgKMm.s:232    .text:0000000000000160 .L6
     /tmp/cclWgKMm.s:329    .text:00000000000001d4 .L8
     /tmp/cclWgKMm.s:455    .text:000000000000025c .L14
     /tmp/cclWgKMm.s:414    .text:0000000000000210 .L15
     /tmp/cclWgKMm.s:554    .text:00000000000002e0 .L16
     /tmp/cclWgKMm.s:532    .text:00000000000002c4 .L17
     /tmp/cclWgKMm.s:634    .text:0000000000000330 .L23
     /tmp/cclWgKMm.s:658    .text:0000000000000358 .L24
     /tmp/cclWgKMm.s:622    .text:0000000000000320 .L19
     /tmp/cclWgKMm.s:647    .text:0000000000000348 .L21
     /tmp/cclWgKMm.s:785    .text:00000000000003f8 .L27
     /tmp/cclWgKMm.s:817    .text:0000000000000420 .L30
     /tmp/cclWgKMm.s:898    .text:0000000000000474 .L33
     /tmp/cclWgKMm.s:930    .text:000000000000049c .L36
     /tmp/cclWgKMm.s:228    .text:000000000000015c .LEHB0
     /tmp/cclWgKMm.s:137    .text:00000000000000ec .LFB65
     /tmp/cclWgKMm.s:291    .text:00000000000001a0 .LEHE0
     /tmp/cclWgKMm.s:293    .text:00000000000001a4 .LEHB1
     /tmp/cclWgKMm.s:296    .text:00000000000001ac .LEHE1
     /tmp/cclWgKMm.s:311    .text:00000000000001c0 .L9
     /tmp/cclWgKMm.s:331    .text:00000000000001d8 .LEHB2
     /tmp/cclWgKMm.s:334    .text:00000000000001e0 .LEHE2
     /tmp/cclWgKMm.s:764    .text:00000000000003d4 .LEHB3
GAS LISTING /tmp/cclWgKMm.s 			page 36


     /tmp/cclWgKMm.s:744    .text:00000000000003b0 .LFB69
     /tmp/cclWgKMm.s:767    .text:00000000000003dc .LEHE3
     /tmp/cclWgKMm.s:769    .text:00000000000003e0 .LEHB4
     /tmp/cclWgKMm.s:772    .text:00000000000003e8 .LEHE4
     /tmp/cclWgKMm.s:801    .text:000000000000040c .L31
     /tmp/cclWgKMm.s:819    .text:0000000000000424 .LEHB5
     /tmp/cclWgKMm.s:822    .text:000000000000042c .LEHE5
     /tmp/cclWgKMm.s:877    .text:0000000000000450 .LEHB6
     /tmp/cclWgKMm.s:857    .text:000000000000042c .LFB70
     /tmp/cclWgKMm.s:880    .text:0000000000000458 .LEHE6
     /tmp/cclWgKMm.s:882    .text:000000000000045c .LEHB7
     /tmp/cclWgKMm.s:885    .text:0000000000000464 .LEHE7
     /tmp/cclWgKMm.s:914    .text:0000000000000488 .L37
     /tmp/cclWgKMm.s:932    .text:00000000000004a0 .LEHB8
     /tmp/cclWgKMm.s:935    .text:00000000000004a8 .LEHE8
     /tmp/cclWgKMm.s:4469   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cclWgKMm.s:6646   .debug_str:0000000000001153 .LASF334
     /tmp/cclWgKMm.s:6226   .debug_str:0000000000000445 .LASF335
     /tmp/cclWgKMm.s:6322   .debug_str:00000000000007a0 .LASF336
     /tmp/cclWgKMm.s:5      .text:0000000000000000 .Ltext0
     /tmp/cclWgKMm.s:988    .text:00000000000004a8 .Letext0
     /tmp/cclWgKMm.s:6080   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cclWgKMm.s:6124   .debug_str:0000000000000154 .LASF0
     /tmp/cclWgKMm.s:6706   .debug_str:0000000000001430 .LASF1
     /tmp/cclWgKMm.s:6648   .debug_str:0000000000001217 .LASF2
     /tmp/cclWgKMm.s:6610   .debug_str:0000000000001047 .LASF4
     /tmp/cclWgKMm.s:6622   .debug_str:0000000000001090 .LASF3
     /tmp/cclWgKMm.s:6272   .debug_str:00000000000005b6 .LASF5
     /tmp/cclWgKMm.s:6392   .debug_str:00000000000009da .LASF6
     /tmp/cclWgKMm.s:6356   .debug_str:00000000000008a8 .LASF7
     /tmp/cclWgKMm.s:6528   .debug_str:0000000000000dbf .LASF8
     /tmp/cclWgKMm.s:6156   .debug_str:0000000000000227 .LASF9
     /tmp/cclWgKMm.s:6694   .debug_str:00000000000013a4 .LASF10
     /tmp/cclWgKMm.s:6276   .debug_str:00000000000005c2 .LASF11
     /tmp/cclWgKMm.s:6198   .debug_str:000000000000036a .LASF12
     /tmp/cclWgKMm.s:6394   .debug_str:00000000000009e1 .LASF13
     /tmp/cclWgKMm.s:6284   .debug_str:0000000000000612 .LASF14
     /tmp/cclWgKMm.s:6588   .debug_str:0000000000000fb3 .LASF15
     /tmp/cclWgKMm.s:6290   .debug_str:0000000000000644 .LASF16
     /tmp/cclWgKMm.s:6246   .debug_str:00000000000004dd .LASF17
     /tmp/cclWgKMm.s:6756   .debug_str:00000000000015af .LASF125
     /tmp/cclWgKMm.s:6244   .debug_str:00000000000004d3 .LASF18
     /tmp/cclWgKMm.s:6724   .debug_str:00000000000014c5 .LASF19
     /tmp/cclWgKMm.s:6656   .debug_str:000000000000126f .LASF20
     /tmp/cclWgKMm.s:6660   .debug_str:0000000000001285 .LASF21
     /tmp/cclWgKMm.s:6560   .debug_str:0000000000000eb5 .LASF22
     /tmp/cclWgKMm.s:6174   .debug_str:00000000000002b1 .LASF23
     /tmp/cclWgKMm.s:6170   .debug_str:0000000000000284 .LASF24
     /tmp/cclWgKMm.s:6366   .debug_str:00000000000008ee .LASF25
     /tmp/cclWgKMm.s:6442   .debug_str:0000000000000b4f .LASF26
     /tmp/cclWgKMm.s:6416   .debug_str:0000000000000a9f .LASF27
     /tmp/cclWgKMm.s:6598   .debug_str:0000000000000ff0 .LASF28
     /tmp/cclWgKMm.s:6360   .debug_str:00000000000008c4 .LASF29
     /tmp/cclWgKMm.s:6606   .debug_str:0000000000001032 .LASF30
     /tmp/cclWgKMm.s:6524   .debug_str:0000000000000d9a .LASF31
     /tmp/cclWgKMm.s:6408   .debug_str:0000000000000a65 .LASF32
     /tmp/cclWgKMm.s:6090   .debug_str:000000000000004c .LASF33
GAS LISTING /tmp/cclWgKMm.s 			page 37


     /tmp/cclWgKMm.s:6206   .debug_str:00000000000003a3 .LASF34
     /tmp/cclWgKMm.s:6404   .debug_str:0000000000000a39 .LASF35
     /tmp/cclWgKMm.s:6088   .debug_str:0000000000000047 .LASF36
     /tmp/cclWgKMm.s:6422   .debug_str:0000000000000aca .LASF37
     /tmp/cclWgKMm.s:6262   .debug_str:0000000000000571 .LASF38
     /tmp/cclWgKMm.s:6370   .debug_str:000000000000090f .LASF47
     /tmp/cclWgKMm.s:6378   .debug_str:0000000000000945 .LASF49
     /tmp/cclWgKMm.s:6686   .debug_str:0000000000001361 .LASF39
     /tmp/cclWgKMm.s:6668   .debug_str:00000000000012ca .LASF41
     /tmp/cclWgKMm.s:6692   .debug_str:0000000000001393 .LASF40
     /tmp/cclWgKMm.s:6410   .debug_str:0000000000000a71 .LASF42
     /tmp/cclWgKMm.s:6192   .debug_str:000000000000034d .LASF43
     /tmp/cclWgKMm.s:6240   .debug_str:00000000000004a2 .LASF45
     /tmp/cclWgKMm.s:6594   .debug_str:0000000000000fd6 .LASF44
     /tmp/cclWgKMm.s:6636   .debug_str:00000000000010da .LASF46
     /tmp/cclWgKMm.s:6260   .debug_str:000000000000056b .LASF233
     /tmp/cclWgKMm.s:6562   .debug_str:0000000000000ec5 .LASF235
     /tmp/cclWgKMm.s:6352   .debug_str:0000000000000888 .LASF48
     /tmp/cclWgKMm.s:6720   .debug_str:00000000000014aa .LASF50
     /tmp/cclWgKMm.s:6218   .debug_str:00000000000003fc .LASF51
     /tmp/cclWgKMm.s:6726   .debug_str:00000000000014ce .LASF52
     /tmp/cclWgKMm.s:6232   .debug_str:0000000000000465 .LASF53
     /tmp/cclWgKMm.s:6402   .debug_str:0000000000000a21 .LASF54
     /tmp/cclWgKMm.s:6550   .debug_str:0000000000000e56 .LASF55
     /tmp/cclWgKMm.s:6640   .debug_str:000000000000110f .LASF56
     /tmp/cclWgKMm.s:6250   .debug_str:0000000000000503 .LASF57
     /tmp/cclWgKMm.s:6224   .debug_str:0000000000000422 .LASF58
     /tmp/cclWgKMm.s:6612   .debug_str:000000000000104e .LASF59
     /tmp/cclWgKMm.s:6258   .debug_str:000000000000054f .LASF60
     /tmp/cclWgKMm.s:6614   .debug_str:000000000000105d .LASF61
     /tmp/cclWgKMm.s:6478   .debug_str:0000000000000c30 .LASF62
     /tmp/cclWgKMm.s:6304   .debug_str:00000000000006e3 .LASF63
     /tmp/cclWgKMm.s:6178   .debug_str:00000000000002d0 .LASF64
     /tmp/cclWgKMm.s:6132   .debug_str:0000000000000182 .LASF65
     /tmp/cclWgKMm.s:6430   .debug_str:0000000000000b01 .LASF67
     /tmp/cclWgKMm.s:6204   .debug_str:0000000000000398 .LASF66
     /tmp/cclWgKMm.s:6604   .debug_str:000000000000101b .LASF68
     /tmp/cclWgKMm.s:6508   .debug_str:0000000000000d2d .LASF69
     /tmp/cclWgKMm.s:6396   .debug_str:00000000000009f1 .LASF70
     /tmp/cclWgKMm.s:6294   .debug_str:0000000000000672 .LASF71
     /tmp/cclWgKMm.s:6200   .debug_str:0000000000000379 .LASF72
     /tmp/cclWgKMm.s:6120   .debug_str:0000000000000132 .LASF73
     /tmp/cclWgKMm.s:6582   .debug_str:0000000000000f61 .LASF74
     /tmp/cclWgKMm.s:6590   .debug_str:0000000000000fbf .LASF75
     /tmp/cclWgKMm.s:6570   .debug_str:0000000000000f11 .LASF76
     /tmp/cclWgKMm.s:6326   .debug_str:00000000000007c3 .LASF77
     /tmp/cclWgKMm.s:6680   .debug_str:0000000000001324 .LASF78
     /tmp/cclWgKMm.s:6424   .debug_str:0000000000000ad8 .LASF79
     /tmp/cclWgKMm.s:6380   .debug_str:000000000000096d .LASF80
     /tmp/cclWgKMm.s:6436   .debug_str:0000000000000b2c .LASF81
     /tmp/cclWgKMm.s:6344   .debug_str:000000000000085b .LASF82
     /tmp/cclWgKMm.s:6084   .debug_str:0000000000000028 .LASF83
     /tmp/cclWgKMm.s:6134   .debug_str:000000000000018e .LASF84
     /tmp/cclWgKMm.s:6362   .debug_str:00000000000008cd .LASF85
     /tmp/cclWgKMm.s:6300   .debug_str:00000000000006b4 .LASF86
     /tmp/cclWgKMm.s:6448   .debug_str:0000000000000b91 .LASF87
     /tmp/cclWgKMm.s:6400   .debug_str:0000000000000a11 .LASF88
GAS LISTING /tmp/cclWgKMm.s 			page 38


     /tmp/cclWgKMm.s:6696   .debug_str:00000000000013b2 .LASF89
     /tmp/cclWgKMm.s:6180   .debug_str:00000000000002de .LASF90
     /tmp/cclWgKMm.s:6152   .debug_str:00000000000001f3 .LASF91
     /tmp/cclWgKMm.s:6718   .debug_str:000000000000149b .LASF92
     /tmp/cclWgKMm.s:6682   .debug_str:000000000000132a .LASF93
     /tmp/cclWgKMm.s:6722   .debug_str:00000000000014bc .LASF94
     /tmp/cclWgKMm.s:6150   .debug_str:00000000000001e0 .LASF95
     /tmp/cclWgKMm.s:6506   .debug_str:0000000000000d1f .LASF96
     /tmp/cclWgKMm.s:6732   .debug_str:0000000000001522 .LASF97
     /tmp/cclWgKMm.s:6268   .debug_str:00000000000005aa .LASF124
     /tmp/cclWgKMm.s:6108   .debug_str:00000000000000c7 .LASF98
     /tmp/cclWgKMm.s:6324   .debug_str:00000000000007be .LASF99
     /tmp/cclWgKMm.s:6476   .debug_str:0000000000000c2a .LASF100
     /tmp/cclWgKMm.s:6520   .debug_str:0000000000000d8b .LASF101
     /tmp/cclWgKMm.s:6434   .debug_str:0000000000000b24 .LASF102
     /tmp/cclWgKMm.s:6388   .debug_str:00000000000009bf .LASF103
     /tmp/cclWgKMm.s:6618   .debug_str:000000000000106c .LASF104
     /tmp/cclWgKMm.s:6330   .debug_str:00000000000007e6 .LASF105
     /tmp/cclWgKMm.s:6738   .debug_str:0000000000001548 .LASF106
     /tmp/cclWgKMm.s:6346   .debug_str:0000000000000862 .LASF107
     /tmp/cclWgKMm.s:6482   .debug_str:0000000000000c60 .LASF108
     /tmp/cclWgKMm.s:6188   .debug_str:000000000000032f .LASF109
     /tmp/cclWgKMm.s:6420   .debug_str:0000000000000ab2 .LASF110
     /tmp/cclWgKMm.s:6288   .debug_str:000000000000063a .LASF111
     /tmp/cclWgKMm.s:6122   .debug_str:000000000000013e .LASF112
     /tmp/cclWgKMm.s:6532   .debug_str:0000000000000ddd .LASF113
     /tmp/cclWgKMm.s:6576   .debug_str:0000000000000f3b .LASF114
     /tmp/cclWgKMm.s:6572   .debug_str:0000000000000f17 .LASF115
     /tmp/cclWgKMm.s:6666   .debug_str:00000000000012ad .LASF116
     /tmp/cclWgKMm.s:6208   .debug_str:00000000000003af .LASF117
     /tmp/cclWgKMm.s:6280   .debug_str:00000000000005dc .LASF118
     /tmp/cclWgKMm.s:6210   .debug_str:00000000000003c0 .LASF119
     /tmp/cclWgKMm.s:6142   .debug_str:00000000000001b0 .LASF120
     /tmp/cclWgKMm.s:6580   .debug_str:0000000000000f5c .LASF121
     /tmp/cclWgKMm.s:6474   .debug_str:0000000000000c24 .LASF122
     /tmp/cclWgKMm.s:6522   .debug_str:0000000000000d92 .LASF285
     /tmp/cclWgKMm.s:6472   .debug_str:0000000000000c1c .LASF123
     /tmp/cclWgKMm.s:6126   .debug_str:0000000000000161 .LASF126
     /tmp/cclWgKMm.s:6358   .debug_str:00000000000008bb .LASF127
     /tmp/cclWgKMm.s:6596   .debug_str:0000000000000fe8 .LASF128
     /tmp/cclWgKMm.s:6766   .debug_str:00000000000015fe .LASF129
     /tmp/cclWgKMm.s:6372   .debug_str:000000000000091e .LASF130
     /tmp/cclWgKMm.s:6348   .debug_str:000000000000086c .LASF131
     /tmp/cclWgKMm.s:6282   .debug_str:00000000000005fd .LASF132
     /tmp/cclWgKMm.s:6616   .debug_str:0000000000001067 .LASF133
     /tmp/cclWgKMm.s:6340   .debug_str:0000000000000829 .LASF134
     /tmp/cclWgKMm.s:6266   .debug_str:0000000000000583 .LASF135
     /tmp/cclWgKMm.s:6296   .debug_str:000000000000067c .LASF185
     /tmp/cclWgKMm.s:6754   .debug_str:00000000000015aa .LASF136
     /tmp/cclWgKMm.s:6584   .debug_str:0000000000000f79 .LASF137
     /tmp/cclWgKMm.s:6110   .debug_str:00000000000000cc .LASF138
     /tmp/cclWgKMm.s:6182   .debug_str:00000000000002ed .LASF139
     /tmp/cclWgKMm.s:6658   .debug_str:000000000000127d .LASF140
     /tmp/cclWgKMm.s:6318   .debug_str:0000000000000764 .LASF141
     /tmp/cclWgKMm.s:6130   .debug_str:000000000000017b .LASF142
     /tmp/cclWgKMm.s:6082   .debug_str:0000000000000000 .LASF143
     /tmp/cclWgKMm.s:6144   .debug_str:00000000000001b8 .LASF178
GAS LISTING /tmp/cclWgKMm.s 			page 39


     /tmp/cclWgKMm.s:6632   .debug_str:00000000000010c9 .LASF144
     /tmp/cclWgKMm.s:6138   .debug_str:00000000000001a3 .LASF145
     /tmp/cclWgKMm.s:6672   .debug_str:00000000000012ea .LASF146
     /tmp/cclWgKMm.s:6460   .debug_str:0000000000000bd3 .LASF147
     /tmp/cclWgKMm.s:6100   .debug_str:000000000000008c .LASF148
     /tmp/cclWgKMm.s:6364   .debug_str:00000000000008e7 .LASF149
     /tmp/cclWgKMm.s:6704   .debug_str:000000000000141d .LASF150
     /tmp/cclWgKMm.s:6504   .debug_str:0000000000000d0a .LASF151
     /tmp/cclWgKMm.s:6328   .debug_str:00000000000007d3 .LASF152
     /tmp/cclWgKMm.s:6350   .debug_str:0000000000000875 .LASF153
     /tmp/cclWgKMm.s:6332   .debug_str:00000000000007f0 .LASF154
     /tmp/cclWgKMm.s:6336   .debug_str:000000000000080e .LASF155
     /tmp/cclWgKMm.s:6480   .debug_str:0000000000000c49 .LASF156
     /tmp/cclWgKMm.s:6256   .debug_str:0000000000000539 .LASF157
     /tmp/cclWgKMm.s:6458   .debug_str:0000000000000bc9 .LASF158
     /tmp/cclWgKMm.s:6542   .debug_str:0000000000000e1b .LASF159
     /tmp/cclWgKMm.s:6674   .debug_str:00000000000012ef .LASF160
     /tmp/cclWgKMm.s:6534   .debug_str:0000000000000de9 .LASF161
     /tmp/cclWgKMm.s:6620   .debug_str:0000000000001077 .LASF162
     /tmp/cclWgKMm.s:6468   .debug_str:0000000000000c03 .LASF163
     /tmp/cclWgKMm.s:6252   .debug_str:0000000000000513 .LASF164
     /tmp/cclWgKMm.s:6148   .debug_str:00000000000001cc .LASF165
     /tmp/cclWgKMm.s:6334   .debug_str:0000000000000803 .LASF166
     /tmp/cclWgKMm.s:6242   .debug_str:00000000000004bc .LASF167
     /tmp/cclWgKMm.s:6500   .debug_str:0000000000000cfd .LASF168
     /tmp/cclWgKMm.s:6764   .debug_str:00000000000015eb .LASF169
     /tmp/cclWgKMm.s:6492   .debug_str:0000000000000cbc .LASF170
     /tmp/cclWgKMm.s:6526   .debug_str:0000000000000da5 .LASF171
     /tmp/cclWgKMm.s:6274   .debug_str:00000000000005bd .LASF172
     /tmp/cclWgKMm.s:6736   .debug_str:000000000000152f .LASF173
     /tmp/cclWgKMm.s:6140   .debug_str:00000000000001a8 .LASF174
     /tmp/cclWgKMm.s:6444   .debug_str:0000000000000b5b .LASF175
     /tmp/cclWgKMm.s:6248   .debug_str:00000000000004f3 .LASF176
     /tmp/cclWgKMm.s:6406   .debug_str:0000000000000a3e .LASF177
     /tmp/cclWgKMm.s:6634   .debug_str:00000000000010cf .LASF179
     /tmp/cclWgKMm.s:6518   .debug_str:0000000000000d7d .LASF180
     /tmp/cclWgKMm.s:6602   .debug_str:000000000000100e .LASF181
     /tmp/cclWgKMm.s:6638   .debug_str:00000000000010fa .LASF182
     /tmp/cclWgKMm.s:6564   .debug_str:0000000000000ed5 .LASF183
     /tmp/cclWgKMm.s:6498   .debug_str:0000000000000cdc .LASF184
     /tmp/cclWgKMm.s:6462   .debug_str:0000000000000bd8 .LASF186
     /tmp/cclWgKMm.s:6114   .debug_str:00000000000000fa .LASF187
     /tmp/cclWgKMm.s:6768   .debug_str:0000000000001607 .LASF188
     /tmp/cclWgKMm.s:6112   .debug_str:00000000000000d5 .LASF189
     /tmp/cclWgKMm.s:6098   .debug_str:0000000000000068 .LASF190
     /tmp/cclWgKMm.s:6628   .debug_str:00000000000010ae .LASF337
     /tmp/cclWgKMm.s:6338   .debug_str:0000000000000821 .LASF191
     /tmp/cclWgKMm.s:6432   .debug_str:0000000000000b19 .LASF192
     /tmp/cclWgKMm.s:6702   .debug_str:0000000000001408 .LASF193
     /tmp/cclWgKMm.s:6212   .debug_str:00000000000003c6 .LASF194
     /tmp/cclWgKMm.s:6302   .debug_str:00000000000006c2 .LASF195
     /tmp/cclWgKMm.s:6552   .debug_str:0000000000000e65 .LASF196
     /tmp/cclWgKMm.s:6708   .debug_str:0000000000001443 .LASF197
     /tmp/cclWgKMm.s:6712   .debug_str:000000000000145f .LASF198
     /tmp/cclWgKMm.s:6386   .debug_str:00000000000009a9 .LASF199
     /tmp/cclWgKMm.s:6700   .debug_str:00000000000013f3 .LASF200
     /tmp/cclWgKMm.s:6730   .debug_str:0000000000001500 .LASF201
GAS LISTING /tmp/cclWgKMm.s 			page 40


     /tmp/cclWgKMm.s:6428   .debug_str:0000000000000afc .LASF202
     /tmp/cclWgKMm.s:6454   .debug_str:0000000000000bb6 .LASF204
     /tmp/cclWgKMm.s:6162   .debug_str:000000000000024a .LASF203
     /tmp/cclWgKMm.s:6086   .debug_str:0000000000000039 .LASF205
     /tmp/cclWgKMm.s:6094   .debug_str:000000000000005c .LASF206
     /tmp/cclWgKMm.s:6376   .debug_str:0000000000000937 .LASF207
     /tmp/cclWgKMm.s:6746   .debug_str:000000000000157d .LASF208
     /tmp/cclWgKMm.s:6278   .debug_str:00000000000005d1 .LASF212
     /tmp/cclWgKMm.s:6264   .debug_str:000000000000057a .LASF209
     /tmp/cclWgKMm.s:6540   .debug_str:0000000000000e12 .LASF210
     /tmp/cclWgKMm.s:6592   .debug_str:0000000000000fcd .LASF211
     /tmp/cclWgKMm.s:6548   .debug_str:0000000000000e47 .LASF213
     /tmp/cclWgKMm.s:6690   .debug_str:0000000000001387 .LASF214
     /tmp/cclWgKMm.s:6118   .debug_str:0000000000000125 .LASF215
     /tmp/cclWgKMm.s:6306   .debug_str:0000000000000702 .LASF216
     /tmp/cclWgKMm.s:6678   .debug_str:000000000000131d .LASF217
     /tmp/cclWgKMm.s:6238   .debug_str:000000000000048e .LASF218
     /tmp/cclWgKMm.s:6744   .debug_str:0000000000001568 .LASF219
     /tmp/cclWgKMm.s:6698   .debug_str:00000000000013cd .LASF220
     /tmp/cclWgKMm.s:6222   .debug_str:0000000000000412 .LASF221
     /tmp/cclWgKMm.s:6684   .debug_str:0000000000001344 .LASF222
     /tmp/cclWgKMm.s:6236   .debug_str:000000000000047f .LASF223
     /tmp/cclWgKMm.s:6172   .debug_str:0000000000000295 .LASF224
     /tmp/cclWgKMm.s:6650   .debug_str:0000000000001225 .LASF225
     /tmp/cclWgKMm.s:6446   .debug_str:0000000000000b74 .LASF226
     /tmp/cclWgKMm.s:6104   .debug_str:00000000000000ad .LASF227
     /tmp/cclWgKMm.s:6384   .debug_str:000000000000098a .LASF228
     /tmp/cclWgKMm.s:6312   .debug_str:0000000000000739 .LASF229
     /tmp/cclWgKMm.s:6652   .debug_str:0000000000001235 .LASF230
     /tmp/cclWgKMm.s:6530   .debug_str:0000000000000dd2 .LASF231
     /tmp/cclWgKMm.s:6292   .debug_str:000000000000065a .LASF232
     /tmp/cclWgKMm.s:6398   .debug_str:0000000000000a09 .LASF234
     /tmp/cclWgKMm.s:6586   .debug_str:0000000000000f9f .LASF236
     /tmp/cclWgKMm.s:6116   .debug_str:000000000000011c .LASF237
     /tmp/cclWgKMm.s:6512   .debug_str:0000000000000d4d .LASF238
     /tmp/cclWgKMm.s:6464   .debug_str:0000000000000bf9 .LASF239
     /tmp/cclWgKMm.s:6568   .debug_str:0000000000000f00 .LASF240
     /tmp/cclWgKMm.s:6748   .debug_str:0000000000001583 .LASF241
     /tmp/cclWgKMm.s:6556   .debug_str:0000000000000e81 .LASF242
     /tmp/cclWgKMm.s:6566   .debug_str:0000000000000ef7 .LASF243
     /tmp/cclWgKMm.s:6664   .debug_str:0000000000001298 .LASF244
     /tmp/cclWgKMm.s:6214   .debug_str:00000000000003dd .LASF245
     /tmp/cclWgKMm.s:6630   .debug_str:00000000000010b6 .LASF246
     /tmp/cclWgKMm.s:6270   .debug_str:00000000000005af .LASF247
     /tmp/cclWgKMm.s:6514   .debug_str:0000000000000d62 .LASF248
     /tmp/cclWgKMm.s:6670   .debug_str:00000000000012e2 .LASF249
     /tmp/cclWgKMm.s:6752   .debug_str:0000000000001596 .LASF250
     /tmp/cclWgKMm.s:6578   .debug_str:0000000000000f54 .LASF251
     /tmp/cclWgKMm.s:6574   .debug_str:0000000000000f27 .LASF252
     /tmp/cclWgKMm.s:6516   .debug_str:0000000000000d75 .LASF253
     /tmp/cclWgKMm.s:6426   .debug_str:0000000000000ae8 .LASF254
     /tmp/cclWgKMm.s:6412   .debug_str:0000000000000a8d .LASF255
     /tmp/cclWgKMm.s:6510   .debug_str:0000000000000d39 .LASF256
     /tmp/cclWgKMm.s:6662   .debug_str:0000000000001291 .LASF257
     /tmp/cclWgKMm.s:6254   .debug_str:0000000000000526 .LASF258
     /tmp/cclWgKMm.s:6742   .debug_str:0000000000001561 .LASF259
     /tmp/cclWgKMm.s:6320   .debug_str:000000000000078d .LASF260
GAS LISTING /tmp/cclWgKMm.s 			page 41


     /tmp/cclWgKMm.s:6440   .debug_str:0000000000000b49 .LASF261
     /tmp/cclWgKMm.s:6488   .debug_str:0000000000000c95 .LASF262
     /tmp/cclWgKMm.s:6626   .debug_str:00000000000010a8 .LASF263
     /tmp/cclWgKMm.s:6374   .debug_str:0000000000000925 .LASF264
     /tmp/cclWgKMm.s:6546   .debug_str:0000000000000e3c .LASF265
     /tmp/cclWgKMm.s:6216   .debug_str:00000000000003e4 .LASF266
     /tmp/cclWgKMm.s:6146   .debug_str:00000000000001c1 .LASF267
     /tmp/cclWgKMm.s:6286   .debug_str:0000000000000622 .LASF268
     /tmp/cclWgKMm.s:6186   .debug_str:0000000000000325 .LASF269
     /tmp/cclWgKMm.s:6316   .debug_str:000000000000074e .LASF270
     /tmp/cclWgKMm.s:6608   .debug_str:000000000000103d .LASF271
     /tmp/cclWgKMm.s:6382   .debug_str:0000000000000974 .LASF272
     /tmp/cclWgKMm.s:6160   .debug_str:000000000000023f .LASF273
     /tmp/cclWgKMm.s:6676   .debug_str:0000000000001305 .LASF274
     /tmp/cclWgKMm.s:6544   .debug_str:0000000000000e32 .LASF275
     /tmp/cclWgKMm.s:6470   .debug_str:0000000000000c0e .LASF276
     /tmp/cclWgKMm.s:6220   .debug_str:0000000000000409 .LASF277
     /tmp/cclWgKMm.s:6600   .debug_str:0000000000000ffa .LASF278
     /tmp/cclWgKMm.s:6176   .debug_str:00000000000002bd .LASF279
     /tmp/cclWgKMm.s:6128   .debug_str:0000000000000168 .LASF280
     /tmp/cclWgKMm.s:6688   .debug_str:000000000000136e .LASF281
     /tmp/cclWgKMm.s:6450   .debug_str:0000000000000baa .LASF282
     /tmp/cclWgKMm.s:6624   .debug_str:00000000000010a2 .LASF283
     /tmp/cclWgKMm.s:6164   .debug_str:000000000000024f .LASF284
     /tmp/cclWgKMm.s:6092   .debug_str:0000000000000057 .LASF286
     /tmp/cclWgKMm.s:6486   .debug_str:0000000000000c88 .LASF287
     /tmp/cclWgKMm.s:6168   .debug_str:0000000000000270 .LASF288
     /tmp/cclWgKMm.s:6484   .debug_str:0000000000000c78 .LASF338
     /tmp/cclWgKMm.s:6308   .debug_str:000000000000070e .LASF339
     /tmp/cclWgKMm.s:6536   .debug_str:0000000000000df0 .LASF289
     /tmp/cclWgKMm.s:6710   .debug_str:0000000000001458 .LASF290
     /tmp/cclWgKMm.s:6414   .debug_str:0000000000000a95 .LASF291
     /tmp/cclWgKMm.s:6538   .debug_str:0000000000000e0d .LASF292
     /tmp/cclWgKMm.s:6554   .debug_str:0000000000000e7a .LASF293
     /tmp/cclWgKMm.s:6154   .debug_str:000000000000020e .LASF294
     /tmp/cclWgKMm.s:6096   .debug_str:0000000000000061 .LASF295
     /tmp/cclWgKMm.s:6390   .debug_str:00000000000009c6 .LASF296
     /tmp/cclWgKMm.s:6136   .debug_str:000000000000019c .LASF297
     /tmp/cclWgKMm.s:6758   .debug_str:00000000000015bd .LASF298
     /tmp/cclWgKMm.s:6194   .debug_str:000000000000035a .LASF299
     /tmp/cclWgKMm.s:6740   .debug_str:000000000000154f .LASF300
     /tmp/cclWgKMm.s:6310   .debug_str:0000000000000723 .LASF301
     /tmp/cclWgKMm.s:6342   .debug_str:000000000000084f .LASF302
     /tmp/cclWgKMm.s:6728   .debug_str:00000000000014e6 .LASF303
     /tmp/cclWgKMm.s:6234   .debug_str:0000000000000472 .LASF304
     /tmp/cclWgKMm.s:6558   .debug_str:0000000000000e96 .LASF305
     /tmp/cclWgKMm.s:6202   .debug_str:000000000000038e .LASF306
     /tmp/cclWgKMm.s:6490   .debug_str:0000000000000ca7 .LASF307
     /tmp/cclWgKMm.s:6642   .debug_str:0000000000001134 .LASF340
     /tmp/cclWgKMm.s:6494   .debug_str:0000000000000cc1 .LASF341
     /tmp/cclWgKMm.s:6716   .debug_str:0000000000001482 .LASF308
     /tmp/cclWgKMm.s:6368   .debug_str:00000000000008fa .LASF309
     /tmp/cclWgKMm.s:6750   .debug_str:000000000000158c .LASF310
     /tmp/cclWgKMm.s:6166   .debug_str:0000000000000256 .LASF311
     /tmp/cclWgKMm.s:6760   .debug_str:00000000000015d1 .LASF312
     /tmp/cclWgKMm.s:6714   .debug_str:0000000000001474 .LASF313
     /tmp/cclWgKMm.s:6184   .debug_str:0000000000000318 .LASF314
GAS LISTING /tmp/cclWgKMm.s 			page 42


     /tmp/cclWgKMm.s:6230   .debug_str:0000000000000458 .LASF315
     /tmp/cclWgKMm.s:6354   .debug_str:000000000000088e .LASF342
     /tmp/cclWgKMm.s:6502   .debug_str:0000000000000d05 .LASF316
     /tmp/cclWgKMm.s:940    .text:00000000000004a8 .LFE70
     /tmp/cclWgKMm.s:887    .text:0000000000000464 .LBB148
     /tmp/cclWgKMm.s:901    .text:0000000000000474 .LBE148
     /tmp/cclWgKMm.s:5794   .debug_loc:0000000000000000 .LLST23
     /tmp/cclWgKMm.s:888    .text:0000000000000464 .LBB149
     /tmp/cclWgKMm.s:900    .text:0000000000000474 .LBE149
     /tmp/cclWgKMm.s:897    .text:0000000000000474 .LVL69
     /tmp/cclWgKMm.s:919    .text:000000000000048c .LBB151
     /tmp/cclWgKMm.s:938    .text:00000000000004a8 .LBE151
     /tmp/cclWgKMm.s:5801   .debug_loc:0000000000000023 .LLST25
     /tmp/cclWgKMm.s:920    .text:000000000000048c .LBB152
     /tmp/cclWgKMm.s:937    .text:00000000000004a8 .LBE152
     /tmp/cclWgKMm.s:929    .text:000000000000049c .LVL71
     /tmp/cclWgKMm.s:879    .text:0000000000000458 .LVL67
     /tmp/cclWgKMm.s:884    .text:0000000000000464 .LVL68
     /tmp/cclWgKMm.s:934    .text:00000000000004a8 .LVL72
     /tmp/cclWgKMm.s:827    .text:000000000000042c .LFE69
     /tmp/cclWgKMm.s:774    .text:00000000000003e8 .LBB142
     /tmp/cclWgKMm.s:788    .text:00000000000003f8 .LBE142
     /tmp/cclWgKMm.s:5808   .debug_loc:0000000000000046 .LLST19
     /tmp/cclWgKMm.s:775    .text:00000000000003e8 .LBB143
     /tmp/cclWgKMm.s:787    .text:00000000000003f8 .LBE143
     /tmp/cclWgKMm.s:784    .text:00000000000003f8 .LVL63
     /tmp/cclWgKMm.s:806    .text:0000000000000410 .LBB145
     /tmp/cclWgKMm.s:825    .text:000000000000042c .LBE145
     /tmp/cclWgKMm.s:5815   .debug_loc:0000000000000069 .LLST21
     /tmp/cclWgKMm.s:807    .text:0000000000000410 .LBB146
     /tmp/cclWgKMm.s:824    .text:000000000000042c .LBE146
     /tmp/cclWgKMm.s:816    .text:0000000000000420 .LVL65
     /tmp/cclWgKMm.s:766    .text:00000000000003dc .LVL61
     /tmp/cclWgKMm.s:771    .text:00000000000003e8 .LVL62
     /tmp/cclWgKMm.s:821    .text:000000000000042c .LVL66
     /tmp/cclWgKMm.s:689    .text:0000000000000388 .LFB68
     /tmp/cclWgKMm.s:733    .text:00000000000003b0 .LFE68
     /tmp/cclWgKMm.s:700    .text:0000000000000394 .LBB140
     /tmp/cclWgKMm.s:712    .text:000000000000039c .LBE140
     /tmp/cclWgKMm.s:5822   .debug_loc:000000000000008c .LLST18
     /tmp/cclWgKMm.s:603    .text:0000000000000300 .LFB67
     /tmp/cclWgKMm.s:683    .text:0000000000000388 .LFE67
     /tmp/cclWgKMm.s:662    .text:0000000000000358 .LBB135
     /tmp/cclWgKMm.s:677    .text:0000000000000384 .LBE135
     /tmp/cclWgKMm.s:676    .text:0000000000000384 .LVL58
     /tmp/cclWgKMm.s:618    .text:0000000000000318 .LVL56
     /tmp/cclWgKMm.s:653    .text:0000000000000354 .LVL57
     /tmp/cclWgKMm.s:365    .text:00000000000001e0 .LFB66
     /tmp/cclWgKMm.s:597    .text:0000000000000300 .LFE66
     /tmp/cclWgKMm.s:440    .text:0000000000000238 .LBB113
     /tmp/cclWgKMm.s:451    .text:0000000000000258 .LBE113
     /tmp/cclWgKMm.s:5831   .debug_loc:00000000000000b2 .LLST12
     /tmp/cclWgKMm.s:445    .text:0000000000000248 .LVL37
     /tmp/cclWgKMm.s:377    .text:00000000000001f0 .LBB106
     /tmp/cclWgKMm.s:392    .text:00000000000001fc .LBE106
     /tmp/cclWgKMm.s:396    .text:0000000000000200 .LBB108
     /tmp/cclWgKMm.s:411    .text:000000000000020c .LBE108
GAS LISTING /tmp/cclWgKMm.s 			page 43


     /tmp/cclWgKMm.s:427    .text:0000000000000228 .LBB110
     /tmp/cclWgKMm.s:437    .text:0000000000000234 .LBE110
     /tmp/cclWgKMm.s:428    .text:0000000000000228 .LBB111
     /tmp/cclWgKMm.s:436    .text:0000000000000234 .LBE111
     /tmp/cclWgKMm.s:457    .text:000000000000025c .LBB114
     /tmp/cclWgKMm.s:469    .text:0000000000000264 .LBE114
     /tmp/cclWgKMm.s:5838   .debug_loc:00000000000000d5 .LLST13
     /tmp/cclWgKMm.s:485    .text:000000000000028c .LBB116
     /tmp/cclWgKMm.s:492    .text:0000000000000290 .LBE116
     /tmp/cclWgKMm.s:5846   .debug_loc:00000000000000f9 .LLST14
     /tmp/cclWgKMm.s:495    .text:0000000000000294 .LBB118
     /tmp/cclWgKMm.s:534    .text:00000000000002c4 .LBE118
     /tmp/cclWgKMm.s:500    .text:0000000000000294 .LBB120
     /tmp/cclWgKMm.s:507    .text:00000000000002a0 .LBE120
     /tmp/cclWgKMm.s:511    .text:00000000000002a4 .LBB122
     /tmp/cclWgKMm.s:518    .text:00000000000002b0 .LBE122
     /tmp/cclWgKMm.s:522    .text:00000000000002b4 .LBB124
     /tmp/cclWgKMm.s:529    .text:00000000000002c0 .LBE124
     /tmp/cclWgKMm.s:541    .text:00000000000002d0 .LBB126
     /tmp/cclWgKMm.s:549    .text:00000000000002d8 .LBE126
     /tmp/cclWgKMm.s:5853   .debug_loc:000000000000011c .LLST15
     /tmp/cclWgKMm.s:559    .text:00000000000002e4 .LBB128
     /tmp/cclWgKMm.s:570    .text:00000000000002e8 .LBE128
     /tmp/cclWgKMm.s:5860   .debug_loc:000000000000013f .LLST16
     /tmp/cclWgKMm.s:575    .text:00000000000002ec .LBB130
     /tmp/cclWgKMm.s:586    .text:00000000000002f0 .LBE130
     /tmp/cclWgKMm.s:5867   .debug_loc:0000000000000162 .LLST17
     /tmp/cclWgKMm.s:473    .text:000000000000026c .LVL40
     /tmp/cclWgKMm.s:553    .text:00000000000002e0 .LVL51
     /tmp/cclWgKMm.s:339    .text:00000000000001e0 .LFE65
     /tmp/cclWgKMm.s:6314   .debug_str:0000000000000749 .LASF317
     /tmp/cclWgKMm.s:5874   .debug_loc:0000000000000185 .LLST1
     /tmp/cclWgKMm.s:6452   .debug_str:0000000000000bb1 .LASF318
     /tmp/cclWgKMm.s:5903   .debug_loc:00000000000001fa .LLST2
     /tmp/cclWgKMm.s:6228   .debug_str:0000000000000453 .LASF319
     /tmp/cclWgKMm.s:5932   .debug_loc:000000000000026f .LLST3
     /tmp/cclWgKMm.s:6456   .debug_str:0000000000000bc4 .LASF320
     /tmp/cclWgKMm.s:5961   .debug_loc:00000000000002e4 .LLST4
     /tmp/cclWgKMm.s:6734   .debug_str:000000000000152a .LASF321
     /tmp/cclWgKMm.s:5990   .debug_loc:0000000000000359 .LLST5
     /tmp/cclWgKMm.s:163    .text:0000000000000114 .LBB90
     /tmp/cclWgKMm.s:179    .text:0000000000000120 .LBE90
     /tmp/cclWgKMm.s:183    .text:0000000000000124 .LBB92
     /tmp/cclWgKMm.s:198    .text:0000000000000130 .LBE92
     /tmp/cclWgKMm.s:202    .text:0000000000000134 .LBB94
     /tmp/cclWgKMm.s:217    .text:0000000000000140 .LBE94
     /tmp/cclWgKMm.s:239    .text:0000000000000168 .LBB96
     /tmp/cclWgKMm.s:250    .text:000000000000016c .LBE96
     /tmp/cclWgKMm.s:6019   .debug_loc:00000000000003ce .LLST6
     /tmp/cclWgKMm.s:255    .text:0000000000000170 .LBB98
     /tmp/cclWgKMm.s:266    .text:0000000000000174 .LBE98
     /tmp/cclWgKMm.s:6026   .debug_loc:00000000000003f1 .LLST7
     /tmp/cclWgKMm.s:299    .text:00000000000001ac .LBB100
     /tmp/cclWgKMm.s:316    .text:00000000000001c4 .LBE100
     /tmp/cclWgKMm.s:6033   .debug_loc:0000000000000414 .LLST8
     /tmp/cclWgKMm.s:300    .text:00000000000001ac .LBB101
     /tmp/cclWgKMm.s:315    .text:00000000000001c4 .LBE101
GAS LISTING /tmp/cclWgKMm.s 			page 44


     /tmp/cclWgKMm.s:309    .text:00000000000001bc .LVL31
     /tmp/cclWgKMm.s:318    .text:00000000000001c4 .LBB103
     /tmp/cclWgKMm.s:337    .text:00000000000001e0 .LBE103
     /tmp/cclWgKMm.s:6040   .debug_loc:0000000000000437 .LLST10
     /tmp/cclWgKMm.s:319    .text:00000000000001c4 .LBB104
     /tmp/cclWgKMm.s:336    .text:00000000000001e0 .LBE104
     /tmp/cclWgKMm.s:328    .text:00000000000001d4 .LVL33
     /tmp/cclWgKMm.s:231    .text:0000000000000160 .LVL21
     /tmp/cclWgKMm.s:290    .text:00000000000001a0 .LVL29
     /tmp/cclWgKMm.s:295    .text:00000000000001ac .LVL30
     /tmp/cclWgKMm.s:333    .text:00000000000001e0 .LVL34
     /tmp/cclWgKMm.s:21     .text:0000000000000000 .LFB64
     /tmp/cclWgKMm.s:126    .text:00000000000000ec .LFE64
     /tmp/cclWgKMm.s:6106   .debug_str:00000000000000bf .LASF322
     /tmp/cclWgKMm.s:6049   .debug_loc:000000000000045d .LLST0
     /tmp/cclWgKMm.s:59     .text:0000000000000064 .LBB86
     /tmp/cclWgKMm.s:75     .text:0000000000000070 .LBE86
     /tmp/cclWgKMm.s:95     .text:00000000000000b4 .LBB88
     /tmp/cclWgKMm.s:100    .text:00000000000000b4 .LBE88
     /tmp/cclWgKMm.s:43     .text:0000000000000030 .LVL2
     /tmp/cclWgKMm.s:47     .text:000000000000003c .LVL3
     /tmp/cclWgKMm.s:51     .text:000000000000004c .LVL4
     /tmp/cclWgKMm.s:57     .text:0000000000000064 .LVL5
     /tmp/cclWgKMm.s:78     .text:0000000000000078 .LVL6
     /tmp/cclWgKMm.s:84     .text:0000000000000090 .LVL7
     /tmp/cclWgKMm.s:90     .text:00000000000000a8 .LVL8
     /tmp/cclWgKMm.s:104    .text:00000000000000c0 .LVL10
     /tmp/cclWgKMm.s:108    .text:00000000000000d0 .LVL11
     /tmp/cclWgKMm.s:112    .text:00000000000000d8 .LVL12
     /tmp/cclWgKMm.s:6466   .debug_str:0000000000000bfe .LASF323
     /tmp/cclWgKMm.s:6496   .debug_str:0000000000000cd5 .LASF324
     /tmp/cclWgKMm.s:6418   .debug_str:0000000000000aa8 .LASF325
     /tmp/cclWgKMm.s:6190   .debug_str:000000000000033a .LASF343
     /tmp/cclWgKMm.s:6644   .debug_str:000000000000114c .LASF326
     /tmp/cclWgKMm.s:6298   .debug_str:00000000000006a1 .LASF328
     /tmp/cclWgKMm.s:6654   .debug_str:0000000000001260 .LASF327
     /tmp/cclWgKMm.s:6102   .debug_str:0000000000000095 .LASF329
     /tmp/cclWgKMm.s:6196   .debug_str:000000000000035f .LASF330
     /tmp/cclWgKMm.s:6762   .debug_str:00000000000015dd .LASF331
     /tmp/cclWgKMm.s:6438   .debug_str:0000000000000b3d .LASF332
     /tmp/cclWgKMm.s:6158   .debug_str:0000000000000237 .LASF333
     /tmp/cclWgKMm.s:917    .text:000000000000048c .LVL70
     /tmp/cclWgKMm.s:804    .text:0000000000000410 .LVL64
     /tmp/cclWgKMm.s:699    .text:0000000000000394 .LVL59
     /tmp/cclWgKMm.s:709    .text:000000000000039c .LVL60
     /tmp/cclWgKMm.s:454    .text:000000000000025c .LVL38
     /tmp/cclWgKMm.s:466    .text:0000000000000264 .LVL39
     /tmp/cclWgKMm.s:484    .text:000000000000028c .LVL41
     /tmp/cclWgKMm.s:490    .text:0000000000000290 .LVL42
     /tmp/cclWgKMm.s:540    .text:00000000000002d0 .LVL49
     /tmp/cclWgKMm.s:547    .text:00000000000002d8 .LVL50
     /tmp/cclWgKMm.s:558    .text:00000000000002e4 .LVL52
     /tmp/cclWgKMm.s:567    .text:00000000000002e8 .LVL53
     /tmp/cclWgKMm.s:574    .text:00000000000002ec .LVL54
     /tmp/cclWgKMm.s:583    .text:00000000000002f0 .LVL55
     /tmp/cclWgKMm.s:142    .text:00000000000000ec .LVL14
     /tmp/cclWgKMm.s:155    .text:0000000000000108 .LVL15
GAS LISTING /tmp/cclWgKMm.s 			page 45


     /tmp/cclWgKMm.s:224    .text:000000000000014c .LVL20
     /tmp/cclWgKMm.s:279    .text:0000000000000188 .LVL26
     /tmp/cclWgKMm.s:157    .text:000000000000010c .LVL16
     /tmp/cclWgKMm.s:288    .text:0000000000000198 .LVL28
     /tmp/cclWgKMm.s:159    .text:0000000000000110 .LVL17
     /tmp/cclWgKMm.s:285    .text:0000000000000190 .LVL27
     /tmp/cclWgKMm.s:161    .text:0000000000000114 .LVL18
     /tmp/cclWgKMm.s:172    .text:0000000000000118 .LVL19
     /tmp/cclWgKMm.s:238    .text:0000000000000168 .LVL22
     /tmp/cclWgKMm.s:247    .text:000000000000016c .LVL23
     /tmp/cclWgKMm.s:254    .text:0000000000000170 .LVL24
     /tmp/cclWgKMm.s:263    .text:0000000000000174 .LVL25
     /tmp/cclWgKMm.s:313    .text:00000000000001c4 .LVL32
     /tmp/cclWgKMm.s:25     .text:0000000000000000 .LVL0
     /tmp/cclWgKMm.s:41     .text:0000000000000028 .LVL1
     /tmp/cclWgKMm.s:121    .text:00000000000000e4 .LVL13
     /tmp/cclWgKMm.s:995    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cclWgKMm.s:342    .gcc_except_table:0000000000000000 .LLSDA65
     /tmp/cclWgKMm.s:829    .gcc_except_table:000000000000002b .LLSDA69
     /tmp/cclWgKMm.s:942    .gcc_except_table:0000000000000056 .LLSDA70

UNDEFINED SYMBOLS
_ZN3stm4coutE
_ZNK3stm7istreamlsEPKc
_ZNK3stm7istreamlsERKNS_6stringE
_Z7print_hm
_ZN3TCB7runningE
_ZNK3stm7istreamlsEi
_ZN3TCB12_thread_exitEv
_ZN3stm6stringC1EPKc
_ZdaPv
_Unwind_Resume
__gxx_personality_v0
CONSOLE_STATUS
_ZN2IO6OutputE
_ZN8IOBuffer3getEv
CONSOLE_TX_DATA
_ZN6Cradle6updateEv
_ZN3TCB13timer_counterE
_ZN9Scheduler13high_priorityE
_ZN9Scheduler12mid_priorityE
_ZN9Scheduler12low_priorityE
_ZN3TCB16_thread_dispatchEv
plic_claim
plic_complete
CONSOLE_RX_DATA
_ZN2IO5InputE
_ZN8IOBuffer3putEc
_ZN9Allocator10_mem_allocEm
_ZN9Allocator9_mem_freeEPKv
_ZN3TCB14_thread_createEPPS_PFvPvES2_Pc
_ZN3TCB12_thread_joinEPS_
_ZN3TCB17_thread_join_timeEPS_m
_ZN3TCB5_forkEv
_ZN3TCB5_killEPS_
_ZN3Sem9_sem_openEPPS_j
_ZN3Sem10_sem_closeEPS_
GAS LISTING /tmp/cclWgKMm.s 			page 46


_ZN3Sem9_sem_waitEPS_
_ZN3Sem11_sem_signalEPS_
_ZN3Sem15_sem_signal_allEPS_
_ZN3Sem16_sem_signal_waitEPS_S0_
_ZN6Cradle11_time_sleepEm
_ZN6Cradle12_thread_wakeEP3TCB
_ZN2IO5_getcEv
_ZN2IO5_putcEc
