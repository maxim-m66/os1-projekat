GAS LISTING /tmp/ccZQgnQf.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z3truv
   9              	_Z3truv:
  10              	.LFB49:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../lib/hw.h"
   2:src/riscv.cpp **** #include "../h/c_thread.hpp"
   3:src/riscv.cpp **** #include "../h/c_semaphore.hpp"
   4:src/riscv.cpp **** #include "../h/riscv.hpp"
   5:src/riscv.cpp **** #include "../h/c_console.hpp"
   6:src/riscv.cpp **** #include "../h/c_sleep.hpp"
   7:src/riscv.cpp **** #include "../h/scheduler.hpp"
   8:src/riscv.cpp **** 
   9:src/riscv.cpp **** bool tru() {
  12              		.loc 1 9 12
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  10:src/riscv.cpp ****     return true;
  20              		.loc 1 10 5
  11:src/riscv.cpp **** }
  21              		.loc 1 11 1 is_stmt 0
  22 000c 13051000 		li	a0,1
  23 0010 03348100 		ld	s0,8(sp)
  24              		.cfi_restore 8
  25              		.cfi_def_cfa 2, 16
  26 0014 13010101 		addi	sp,sp,16
  27              		.cfi_def_cfa_offset 0
  28 0018 67800000 		jr	ra
  29              		.cfi_endproc
  30              	.LFE49:
  32              		.align	2
  33              		.globl	_Z3rarv
  35              	_Z3rarv:
  36              	.LFB50:
  12:src/riscv.cpp **** 
  13:src/riscv.cpp **** uint64 rar() {
  37              		.loc 1 13 14 is_stmt 1
  38              		.cfi_startproc
  39 001c 130101FE 		addi	sp,sp,-32
  40              		.cfi_def_cfa_offset 32
  41 0020 233C8100 		sd	s0,24(sp)
  42              		.cfi_offset 8, -8
  43 0024 13040102 		addi	s0,sp,32
  44              		.cfi_def_cfa 8, 0
  14:src/riscv.cpp ****     return Riscv::r_scause();
  45              		.loc 1 14 5
  46              	.LBB42:
GAS LISTING /tmp/ccZQgnQf.s 			page 2


  47              	.LBB43:
  48              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_RISCV_HPP
   2:src/../h/riscv.hpp **** #define PROJECT_BASE_RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** extern "C" void supervisorTrap();
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** class Riscv {
   9:src/../h/riscv.hpp **** public:
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp ****     __attribute__((unused)) static void handleSupervisorTrap();
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp ****     static void handleTimerTrap();
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     static void handleReadTrap();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     static void handleWriteTrap();
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     static void popSppSpie();
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     static void handleConsoleTrap();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     static void push();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     static void pop();
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // read register scause
  28:src/../h/riscv.hpp ****     static uint64 r_scause();
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // write register scause
  31:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // read register sepc
  34:src/../h/riscv.hpp ****     static uint64 r_sepc();
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // write register sepc
  37:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     // read register stvec
  40:src/../h/riscv.hpp ****     static uint64 r_stvec();
  41:src/../h/riscv.hpp **** 
  42:src/../h/riscv.hpp ****     // write register stvec
  43:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // read register stval
  46:src/../h/riscv.hpp ****     static uint64 r_stval();
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // write register stval
  49:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     enum BitMaskSip {
  52:src/../h/riscv.hpp ****         SIP_SSIE = (1 << 1),
  53:src/../h/riscv.hpp ****         SIP_STIE = (1 << 5),
  54:src/../h/riscv.hpp ****         SIP_SEIE = (1 << 9),
  55:src/../h/riscv.hpp ****     };
GAS LISTING /tmp/ccZQgnQf.s 			page 3


  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // mask set register sip
  58:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     // mask clear register sip
  61:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // read register sip
  64:src/../h/riscv.hpp ****     static uint64 r_sip();
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // write register sip
  67:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     enum BitMaskSstatus {
  70:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  71:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  72:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  73:src/../h/riscv.hpp ****     };
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     // mask set register sstatus
  76:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp ****     // mask clear register sstatus
  79:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp ****     // read register sstatus
  82:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     // write register sstatus
  85:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp ****     static uint64 r_sscratch();
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** private:
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp **** };
  92:src/../h/riscv.hpp **** 
  93:src/../h/riscv.hpp **** inline uint64 Riscv::r_sscratch() {
  94:src/../h/riscv.hpp ****     uint64 volatile sscratch;
  95:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(sscratch));
  96:src/../h/riscv.hpp ****     return sscratch;
  97:src/../h/riscv.hpp **** }
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
 100:src/../h/riscv.hpp ****     uint64 volatile scause;
  49              		.loc 2 100 5
 101:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  50              		.loc 2 101 5
  51              		.loc 2 101 72 is_stmt 0
  52              	#APP
  53              	# 101 "src/../h/riscv.hpp" 1
 102              	    return scause;
  54              		csrr a5, scause
  55              	# 0 "" 2
  56              	#NO_APP
  57 002c 2334F4FE 		sd	a5,-24(s0)
  58              		.loc 2 102 5 is_stmt 1
GAS LISTING /tmp/ccZQgnQf.s 			page 4


  59              		.loc 2 102 12 is_stmt 0
  60 0030 033584FE 		ld	a0,-24(s0)
  61              	.LBE43:
  62              	.LBE42:
  15:src/riscv.cpp **** }
  63              		.loc 1 15 1
  64 0034 03348101 		ld	s0,24(sp)
  65              		.cfi_restore 8
  66              		.cfi_def_cfa 2, 32
  67 0038 13010102 		addi	sp,sp,32
  68              		.cfi_def_cfa_offset 0
  69 003c 67800000 		jr	ra
  70              		.cfi_endproc
  71              	.LFE50:
  73              		.section	.rodata.str1.8,"aMS",@progbits,1
  74              		.align	3
  75              	.LC0:
  76 0000 496C6C65 		.string	"Illegal Instruction\n"
  76      67616C20 
  76      496E7374 
  76      72756374 
  76      696F6E0A 
  77              		.text
  78              		.align	2
  79              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  81              	_ZN5Riscv20handleSupervisorTrapEv:
  82              	.LFB51:
  16:src/riscv.cpp **** 
  17:src/riscv.cpp **** __attribute__((unused))
  18:src/riscv.cpp **** void Riscv::handleSupervisorTrap() {
  83              		.loc 1 18 36 is_stmt 1
  84              		.cfi_startproc
  85 0040 130101FB 		addi	sp,sp,-80
  86              		.cfi_def_cfa_offset 80
  87 0044 23341104 		sd	ra,72(sp)
  88 0048 23308104 		sd	s0,64(sp)
  89 004c 233C9102 		sd	s1,56(sp)
  90 0050 23382103 		sd	s2,48(sp)
  91 0054 23343103 		sd	s3,40(sp)
  92 0058 23304103 		sd	s4,32(sp)
  93 005c 233C5101 		sd	s5,24(sp)
  94              		.cfi_offset 1, -8
  95              		.cfi_offset 8, -16
  96              		.cfi_offset 9, -24
  97              		.cfi_offset 18, -32
  98              		.cfi_offset 19, -40
  99              		.cfi_offset 20, -48
 100              		.cfi_offset 21, -56
 101 0060 13040105 		addi	s0,sp,80
 102              		.cfi_def_cfa 8, 0
  19:src/riscv.cpp ****     uint64 code, arg1, arg2, arg3, arg4;
 103              		.loc 1 19 5
  20:src/riscv.cpp ****     __asm__ volatile("mv %[code], a0" : [code] "=r"(code));
 104              		.loc 1 20 5
 105              		.loc 1 20 59 is_stmt 0
 106              	#APP
 107              	# 20 "src/riscv.cpp" 1
GAS LISTING /tmp/ccZQgnQf.s 			page 5


  21              	    __asm__ volatile("mv %[arg1], a1" : [arg1] "=r"(arg1));
 108              		mv s1, a0
 109              	# 0 "" 2
 110              	.LVL0:
 111              		.loc 1 21 5 is_stmt 1
 112              		.loc 1 21 59 is_stmt 0
 113              	# 21 "src/riscv.cpp" 1
  22              	    __asm__ volatile("mv %[arg2], a2" : [arg2] "=r"(arg2));
 114              		mv s2, a1
 115              	# 0 "" 2
 116              	.LVL1:
 117              		.loc 1 22 5 is_stmt 1
 118              		.loc 1 22 59 is_stmt 0
 119              	# 22 "src/riscv.cpp" 1
  23              	    __asm__ volatile("mv %[arg3], a3" : [arg3] "=r"(arg3));
 120              		mv s3, a2
 121              	# 0 "" 2
 122              	.LVL2:
 123              		.loc 1 23 5 is_stmt 1
 124              		.loc 1 23 59 is_stmt 0
 125              	# 23 "src/riscv.cpp" 1
  24              	    __asm__ volatile("mv %[arg4], a4" : [arg4] "=r"(arg4));
 126              		mv s4, a3
 127              	# 0 "" 2
 128              	.LVL3:
 129              		.loc 1 24 5 is_stmt 1
 130              		.loc 1 24 59 is_stmt 0
 131              	# 24 "src/riscv.cpp" 1
  25              	    if (r_scause() == 2) {
 132              		mv s5, a4
 133              	# 0 "" 2
 134              	.LVL4:
 135              		.loc 1 25 5 is_stmt 1
 136              	#NO_APP
 137              	.LBB44:
 138              	.LBB45:
 100:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 139              		.loc 2 100 5
 101:src/../h/riscv.hpp ****     return scause;
 140              		.loc 2 101 5
 101:src/../h/riscv.hpp ****     return scause;
 141              		.loc 2 101 72 is_stmt 0
 142              	#APP
 143              	# 101 "src/../h/riscv.hpp" 1
 144              		csrr a5, scause
 145              	# 0 "" 2
 146              	#NO_APP
 147 007c 233CF4FA 		sd	a5,-72(s0)
 148              		.loc 2 102 5 is_stmt 1
 149              		.loc 2 102 12 is_stmt 0
 150 0080 033784FB 		ld	a4,-72(s0)
 151              	.LBE45:
 152              	.LBE44:
 153              		.loc 1 25 5
 154 0084 93072000 		li	a5,2
 155 0088 6304F702 		beq	a4,a5,.L28
 156              	.L6:
GAS LISTING /tmp/ccZQgnQf.s 			page 6


  26:src/riscv.cpp ****         print("Illegal Instruction\n");
  27:src/riscv.cpp ****         TCB::_thread_exit();
  28:src/riscv.cpp ****     }
  29:src/riscv.cpp ****     switch (code) {
 157              		.loc 1 29 5 is_stmt 1
 158 008c 93072004 		li	a5,66
 159 0090 63EC9712 		bgtu	s1,a5,.L5
 160 0094 93942400 		slli	s1,s1,2
 161              	.LVL5:
 162 0098 17070000 		lla	a4,.L9
 162      13070700 
 163 00a0 B384E400 		add	s1,s1,a4
 164 00a4 83A70400 		lw	a5,0(s1)
 165 00a8 B387E700 		add	a5,a5,a4
 166 00ac 67800700 		jr	a5
 167              		.section	.rodata
 168              		.align	2
 169              		.align	2
 170              	.L9:
 171 0000 00000000 		.word	.L5-.L9
 172 0004 00000000 		.word	.L26-.L9
 173 0008 00000000 		.word	.L25-.L9
 174 000c 00000000 		.word	.L5-.L9
 175 0010 00000000 		.word	.L5-.L9
 176 0014 00000000 		.word	.L5-.L9
 177 0018 00000000 		.word	.L5-.L9
 178 001c 00000000 		.word	.L5-.L9
 179 0020 00000000 		.word	.L5-.L9
 180 0024 00000000 		.word	.L5-.L9
 181 0028 00000000 		.word	.L5-.L9
 182 002c 00000000 		.word	.L5-.L9
 183 0030 00000000 		.word	.L5-.L9
 184 0034 00000000 		.word	.L5-.L9
 185 0038 00000000 		.word	.L5-.L9
 186 003c 00000000 		.word	.L5-.L9
 187 0040 00000000 		.word	.L5-.L9
 188 0044 00000000 		.word	.L24-.L9
 189 0048 00000000 		.word	.L23-.L9
 190 004c 00000000 		.word	.L22-.L9
 191 0050 00000000 		.word	.L21-.L9
 192 0054 00000000 		.word	.L20-.L9
 193 0058 00000000 		.word	.L19-.L9
 194 005c 00000000 		.word	.L18-.L9
 195 0060 00000000 		.word	.L5-.L9
 196 0064 00000000 		.word	.L5-.L9
 197 0068 00000000 		.word	.L5-.L9
 198 006c 00000000 		.word	.L5-.L9
 199 0070 00000000 		.word	.L5-.L9
 200 0074 00000000 		.word	.L5-.L9
 201 0078 00000000 		.word	.L5-.L9
 202 007c 00000000 		.word	.L5-.L9
 203 0080 00000000 		.word	.L5-.L9
 204 0084 00000000 		.word	.L17-.L9
 205 0088 00000000 		.word	.L16-.L9
 206 008c 00000000 		.word	.L15-.L9
 207 0090 00000000 		.word	.L14-.L9
 208 0094 00000000 		.word	.L13-.L9
GAS LISTING /tmp/ccZQgnQf.s 			page 7


 209 0098 00000000 		.word	.L5-.L9
 210 009c 00000000 		.word	.L5-.L9
 211 00a0 00000000 		.word	.L5-.L9
 212 00a4 00000000 		.word	.L5-.L9
 213 00a8 00000000 		.word	.L5-.L9
 214 00ac 00000000 		.word	.L5-.L9
 215 00b0 00000000 		.word	.L5-.L9
 216 00b4 00000000 		.word	.L5-.L9
 217 00b8 00000000 		.word	.L5-.L9
 218 00bc 00000000 		.word	.L5-.L9
 219 00c0 00000000 		.word	.L5-.L9
 220 00c4 00000000 		.word	.L12-.L9
 221 00c8 00000000 		.word	.L11-.L9
 222 00cc 00000000 		.word	.L5-.L9
 223 00d0 00000000 		.word	.L5-.L9
 224 00d4 00000000 		.word	.L5-.L9
 225 00d8 00000000 		.word	.L5-.L9
 226 00dc 00000000 		.word	.L5-.L9
 227 00e0 00000000 		.word	.L5-.L9
 228 00e4 00000000 		.word	.L5-.L9
 229 00e8 00000000 		.word	.L5-.L9
 230 00ec 00000000 		.word	.L5-.L9
 231 00f0 00000000 		.word	.L5-.L9
 232 00f4 00000000 		.word	.L5-.L9
 233 00f8 00000000 		.word	.L5-.L9
 234 00fc 00000000 		.word	.L5-.L9
 235 0100 00000000 		.word	.L5-.L9
 236 0104 00000000 		.word	.L10-.L9
 237 0108 00000000 		.word	.L8-.L9
 238              		.text
 239              	.LVL6:
 240              	.L28:
  26:src/riscv.cpp ****         print("Illegal Instruction\n");
 241              		.loc 1 26 9
  26:src/riscv.cpp ****         print("Illegal Instruction\n");
 242              		.loc 1 26 14 is_stmt 0
 243 00b0 17050000 		lla	a0,.LC0
 243      13050500 
 244 00b8 97000000 		call	_Z5printPKc@plt
 244      E7800000 
 245              	.LVL7:
  27:src/riscv.cpp ****     }
 246              		.loc 1 27 9 is_stmt 1
  27:src/riscv.cpp ****     }
 247              		.loc 1 27 26 is_stmt 0
 248 00c0 97000000 		call	_ZN3TCB12_thread_exitEv@plt
 248      E7800000 
 249              	.LVL8:
 250 00c8 6FF05FFC 		j	.L6
 251              	.LVL9:
 252              	.L26:
  30:src/riscv.cpp ****         case MEM_ALLOC:
 253              		.loc 1 30 9 is_stmt 1
  31:src/riscv.cpp ****             Allocator::_mem_alloc((int) arg1);
 254              		.loc 1 31 13
 255              		.loc 1 31 34 is_stmt 0
 256 00cc 1B050900 		sext.w	a0,s2
GAS LISTING /tmp/ccZQgnQf.s 			page 8


 257 00d0 97000000 		call	_ZN9Allocator10_mem_allocEm@plt
 257      E7800000 
 258              	.LVL10:
  32:src/riscv.cpp ****             break;
 259              		.loc 1 32 13 is_stmt 1
 260 00d8 6F00000F 		j	.L5
 261              	.L25:
  33:src/riscv.cpp ****         case MEM_FREE:
 262              		.loc 1 33 9
  34:src/riscv.cpp ****             Allocator::_mem_free((void *) arg1);
 263              		.loc 1 34 13
 264              		.loc 1 34 33 is_stmt 0
 265 00dc 13050900 		mv	a0,s2
 266 00e0 97000000 		call	_ZN9Allocator9_mem_freeEPKv@plt
 266      E7800000 
 267              	.LVL11:
  35:src/riscv.cpp ****             break;
 268              		.loc 1 35 13 is_stmt 1
 269 00e8 6F00000E 		j	.L5
 270              	.L24:
  36:src/riscv.cpp ****         case THREAD_CREATE:
 271              		.loc 1 36 9
  37:src/riscv.cpp ****             TCB::_thread_create((thread_t *) arg1, (run_t) arg2, (void *) arg3, (void *) arg4);
 272              		.loc 1 37 13
 273              		.loc 1 37 32 is_stmt 0
 274 00ec 93860A00 		mv	a3,s5
 275 00f0 13060A00 		mv	a2,s4
 276 00f4 93850900 		mv	a1,s3
 277 00f8 13050900 		mv	a0,s2
 278 00fc 97000000 		call	_ZN3TCB14_thread_createEPPS_PFvPvES2_S2_@plt
 278      E7800000 
 279              	.LVL12:
  38:src/riscv.cpp ****             break;
 280              		.loc 1 38 13 is_stmt 1
 281 0104 6F00400C 		j	.L5
 282              	.L23:
  39:src/riscv.cpp ****         case THREAD_EXIT:
 283              		.loc 1 39 9
  40:src/riscv.cpp ****             TCB::_thread_exit();
 284              		.loc 1 40 13
 285              		.loc 1 40 30 is_stmt 0
 286 0108 97000000 		call	_ZN3TCB12_thread_exitEv@plt
 286      E7800000 
 287              	.LVL13:
  41:src/riscv.cpp ****             break;
 288              		.loc 1 41 13 is_stmt 1
 289 0110 6F00800B 		j	.L5
 290              	.L22:
  42:src/riscv.cpp ****         case THREAD_DISPATCH:
 291              		.loc 1 42 9
  43:src/riscv.cpp ****             TCB::_thread_dispatch();
 292              		.loc 1 43 13
 293              		.loc 1 43 34 is_stmt 0
 294 0114 97000000 		call	_ZN3TCB16_thread_dispatchEv@plt
 294      E7800000 
 295              	.LVL14:
  44:src/riscv.cpp ****             break;
GAS LISTING /tmp/ccZQgnQf.s 			page 9


 296              		.loc 1 44 13 is_stmt 1
 297 011c 6F00C00A 		j	.L5
 298              	.L21:
  45:src/riscv.cpp ****         case THREAD_JOIN:
 299              		.loc 1 45 9
  46:src/riscv.cpp ****             TCB::_thread_join((thread_t) arg1);
 300              		.loc 1 46 13
 301              		.loc 1 46 30 is_stmt 0
 302 0120 13050900 		mv	a0,s2
 303 0124 97000000 		call	_ZN3TCB12_thread_joinEPS_@plt
 303      E7800000 
 304              	.LVL15:
  47:src/riscv.cpp ****             break;
 305              		.loc 1 47 13 is_stmt 1
 306 012c 6F00C009 		j	.L5
 307              	.L20:
  48:src/riscv.cpp ****         case THREAD_JOIN_TIME:
 308              		.loc 1 48 9
  49:src/riscv.cpp ****             TCB::_thread_join((thread_t) arg1, (time_t) arg2);
 309              		.loc 1 49 13
 310              		.loc 1 49 30 is_stmt 0
 311 0130 93850900 		mv	a1,s3
 312 0134 13050900 		mv	a0,s2
 313 0138 97000000 		call	_ZN3TCB12_thread_joinEPS_m@plt
 313      E7800000 
 314              	.LVL16:
  50:src/riscv.cpp ****             break;
 315              		.loc 1 50 13 is_stmt 1
 316 0140 6F008008 		j	.L5
 317              	.L19:
  51:src/riscv.cpp ****         case THREAD_FORK:
 318              		.loc 1 51 9
  52:src/riscv.cpp ****             TCB::_fork();
 319              		.loc 1 52 13
 320              		.loc 1 52 23 is_stmt 0
 321 0144 97000000 		call	_ZN3TCB5_forkEv@plt
 321      E7800000 
 322              	.LVL17:
  53:src/riscv.cpp ****             break;
 323              		.loc 1 53 13 is_stmt 1
 324 014c 6F00C007 		j	.L5
 325              	.L18:
  54:src/riscv.cpp ****         case THREAD_KILL:
 326              		.loc 1 54 9
  55:src/riscv.cpp ****             TCB::_kill((thread_t) arg1);
 327              		.loc 1 55 13
 328              		.loc 1 55 23 is_stmt 0
 329 0150 13050900 		mv	a0,s2
 330 0154 97000000 		call	_ZN3TCB5_killEPS_@plt
 330      E7800000 
 331              	.LVL18:
  56:src/riscv.cpp ****             break;
 332              		.loc 1 56 13 is_stmt 1
 333 015c 6F00C006 		j	.L5
 334              	.L17:
  57:src/riscv.cpp ****         case SEM_OPEN:
 335              		.loc 1 57 9
GAS LISTING /tmp/ccZQgnQf.s 			page 10


  58:src/riscv.cpp ****             Sem::_sem_open((sem_t *) arg1, arg2);
 336              		.loc 1 58 13
 337              		.loc 1 58 27 is_stmt 0
 338 0160 9B850900 		sext.w	a1,s3
 339 0164 13050900 		mv	a0,s2
 340 0168 97000000 		call	_ZN3Sem9_sem_openEPPS_j@plt
 340      E7800000 
 341              	.LVL19:
  59:src/riscv.cpp ****             break;
 342              		.loc 1 59 13 is_stmt 1
 343 0170 6F008005 		j	.L5
 344              	.L16:
  60:src/riscv.cpp ****         case SEM_CLOSE:
 345              		.loc 1 60 9
  61:src/riscv.cpp ****             Sem::_sem_close((sem_t) arg1);
 346              		.loc 1 61 13
 347              		.loc 1 61 28 is_stmt 0
 348 0174 13050900 		mv	a0,s2
 349 0178 97000000 		call	_ZN3Sem10_sem_closeEPS_@plt
 349      E7800000 
 350              	.LVL20:
  62:src/riscv.cpp ****             break;
 351              		.loc 1 62 13 is_stmt 1
 352 0180 6F008004 		j	.L5
 353              	.L15:
  63:src/riscv.cpp ****         case SEM_WAIT:
 354              		.loc 1 63 9
  64:src/riscv.cpp ****             Sem::_sem_wait((sem_t) arg1);
 355              		.loc 1 64 13
 356              		.loc 1 64 27 is_stmt 0
 357 0184 13050900 		mv	a0,s2
 358 0188 97000000 		call	_ZN3Sem9_sem_waitEPS_@plt
 358      E7800000 
 359              	.LVL21:
  65:src/riscv.cpp ****             break;
 360              		.loc 1 65 13 is_stmt 1
 361 0190 6F008003 		j	.L5
 362              	.L14:
  66:src/riscv.cpp ****         case SEM_SIGNAL:
 363              		.loc 1 66 9
  67:src/riscv.cpp ****             Sem::_sem_signal((sem_t) arg1);
 364              		.loc 1 67 13
 365              		.loc 1 67 29 is_stmt 0
 366 0194 13050900 		mv	a0,s2
 367 0198 97000000 		call	_ZN3Sem11_sem_signalEPS_@plt
 367      E7800000 
 368              	.LVL22:
  68:src/riscv.cpp ****             break;
 369              		.loc 1 68 13 is_stmt 1
 370 01a0 6F008002 		j	.L5
 371              	.L13:
  69:src/riscv.cpp ****         case SIGNAL_WAIT:
 372              		.loc 1 69 9
  70:src/riscv.cpp ****             Sem::_sem_signal((sem_t) arg1);
 373              		.loc 1 70 13
 374              		.loc 1 70 29 is_stmt 0
 375 01a4 13050900 		mv	a0,s2
GAS LISTING /tmp/ccZQgnQf.s 			page 11


 376 01a8 97000000 		call	_ZN3Sem11_sem_signalEPS_@plt
 376      E7800000 
 377              	.LVL23:
  71:src/riscv.cpp ****             Sem::_sem_wait((sem_t) arg2);
 378              		.loc 1 71 13 is_stmt 1
 379              		.loc 1 71 27 is_stmt 0
 380 01b0 13850900 		mv	a0,s3
 381 01b4 97000000 		call	_ZN3Sem9_sem_waitEPS_@plt
 381      E7800000 
 382              	.LVL24:
 383              	.L12:
  72:src/riscv.cpp ****         case TIME_SLEEP:
 384              		.loc 1 72 9 is_stmt 1
  73:src/riscv.cpp ****             Cradle::_time_sleep((time_t) arg1);
 385              		.loc 1 73 13
 386              		.loc 1 73 32 is_stmt 0
 387 01bc 13050900 		mv	a0,s2
 388 01c0 97000000 		call	_ZN6Cradle11_time_sleepEm@plt
 388      E7800000 
 389              	.LVL25:
  74:src/riscv.cpp ****             break;
 390              		.loc 1 74 13 is_stmt 1
 391              	.L5:
  75:src/riscv.cpp ****         case THREAD_WAKE:
  76:src/riscv.cpp ****             Cradle::_thread_wake((thread_t) arg1);
  77:src/riscv.cpp ****         case GETC:
  78:src/riscv.cpp ****             IO::_getc();
  79:src/riscv.cpp ****             break;
  80:src/riscv.cpp ****         case PUTC:
  81:src/riscv.cpp ****             IO::_putc((char) arg1);
  82:src/riscv.cpp ****             break;
  83:src/riscv.cpp ****         default:
  84:src/riscv.cpp ****             break;
  85:src/riscv.cpp ****     }
  86:src/riscv.cpp **** }
 392              		.loc 1 86 1 is_stmt 0
 393 01c8 83308104 		ld	ra,72(sp)
 394              		.cfi_remember_state
 395              		.cfi_restore 1
 396 01cc 03340104 		ld	s0,64(sp)
 397              		.cfi_restore 8
 398              		.cfi_def_cfa 2, 80
 399 01d0 83348103 		ld	s1,56(sp)
 400              		.cfi_restore 9
 401 01d4 03390103 		ld	s2,48(sp)
 402              		.cfi_restore 18
 403              	.LVL26:
 404 01d8 83398102 		ld	s3,40(sp)
 405              		.cfi_restore 19
 406              	.LVL27:
 407 01dc 033A0102 		ld	s4,32(sp)
 408              		.cfi_restore 20
 409              	.LVL28:
 410 01e0 833A8101 		ld	s5,24(sp)
 411              		.cfi_restore 21
 412              	.LVL29:
 413 01e4 13010105 		addi	sp,sp,80
GAS LISTING /tmp/ccZQgnQf.s 			page 12


 414              		.cfi_def_cfa_offset 0
 415 01e8 67800000 		jr	ra
 416              	.LVL30:
 417              	.L11:
 418              		.cfi_restore_state
  75:src/riscv.cpp ****         case THREAD_WAKE:
 419              		.loc 1 75 9 is_stmt 1
  76:src/riscv.cpp ****         case GETC:
 420              		.loc 1 76 13
  76:src/riscv.cpp ****         case GETC:
 421              		.loc 1 76 33 is_stmt 0
 422 01ec 13050900 		mv	a0,s2
 423 01f0 97000000 		call	_ZN6Cradle12_thread_wakeEP3TCB@plt
 423      E7800000 
 424              	.LVL31:
 425              	.L10:
  77:src/riscv.cpp ****             IO::_getc();
 426              		.loc 1 77 9 is_stmt 1
  78:src/riscv.cpp ****             break;
 427              		.loc 1 78 13
  78:src/riscv.cpp ****             break;
 428              		.loc 1 78 22 is_stmt 0
 429 01f8 97000000 		call	_ZN2IO5_getcEv@plt
 429      E7800000 
 430              	.LVL32:
  79:src/riscv.cpp ****         case PUTC:
 431              		.loc 1 79 13 is_stmt 1
 432 0200 6FF09FFC 		j	.L5
 433              	.L8:
  80:src/riscv.cpp ****             IO::_putc((char) arg1);
 434              		.loc 1 80 9
  81:src/riscv.cpp ****             break;
 435              		.loc 1 81 13
  81:src/riscv.cpp ****             break;
 436              		.loc 1 81 22 is_stmt 0
 437 0204 1375F90F 		andi	a0,s2,0xff
 438 0208 97000000 		call	_ZN2IO5_putcEc@plt
 438      E7800000 
 439              	.LVL33:
  82:src/riscv.cpp ****         default:
 440              		.loc 1 82 13 is_stmt 1
 441              		.loc 1 86 1 is_stmt 0
 442 0210 6FF09FFB 		j	.L5
 443              		.cfi_endproc
 444              	.LFE51:
 446              		.align	2
 447              		.globl	_ZN5Riscv15handleTimerTrapEv
 449              	_ZN5Riscv15handleTimerTrapEv:
 450              	.LFB52:
  87:src/riscv.cpp **** 
  88:src/riscv.cpp **** 
  89:src/riscv.cpp **** __attribute__((unused))
  90:src/riscv.cpp **** void Riscv::handleTimerTrap() {
 451              		.loc 1 90 31 is_stmt 1
 452              		.cfi_startproc
 453 0214 130101FF 		addi	sp,sp,-16
 454              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccZQgnQf.s 			page 13


 455 0218 23341100 		sd	ra,8(sp)
 456 021c 23308100 		sd	s0,0(sp)
 457              		.cfi_offset 1, -8
 458              		.cfi_offset 8, -16
 459 0220 13040101 		addi	s0,sp,16
 460              		.cfi_def_cfa 8, 0
 461              	.L31:
  91:src/riscv.cpp ****     while ((*((char *) CONSOLE_STATUS) & CONSOLE_TX_STATUS_BIT) && !IO::Output.is_empty()) {
 462              		.loc 1 91 5
 463              		.loc 1 91 65
 464              		.loc 1 91 13 is_stmt 0
 465 0224 97070000 		la	a5,CONSOLE_STATUS
 465      83B70700 
 466 022c 83B70700 		ld	a5,0(a5)
 467 0230 83C70700 		lbu	a5,0(a5)
 468              		.loc 1 91 65
 469 0234 93F70702 		andi	a5,a5,32
 470 0238 638C0702 		beqz	a5,.L30
 471              	.LVL34:
 472              		.file 3 "src/../h/c_console.hpp"
   1:src/../h/c_console.hpp **** #ifndef PROJECT_BASE_C_CONSOLE_HPP
   2:src/../h/c_console.hpp **** #define PROJECT_BASE_C_CONSOLE_HPP
   3:src/../h/c_console.hpp **** 
   4:src/../h/c_console.hpp **** #include "circular_buffer.hpp"
   5:src/../h/c_console.hpp **** #include "riscv.hpp"
   6:src/../h/c_console.hpp **** 
   7:src/../h/c_console.hpp **** class Sem;
   8:src/../h/c_console.hpp **** 
   9:src/../h/c_console.hpp **** class IOBuffer final {
  10:src/../h/c_console.hpp **** public:
  11:src/../h/c_console.hpp ****     void init();
  12:src/../h/c_console.hpp **** 
  13:src/../h/c_console.hpp ****     void put(char c);
  14:src/../h/c_console.hpp **** 
  15:src/../h/c_console.hpp ****     char get();
  16:src/../h/c_console.hpp **** 
  17:src/../h/c_console.hpp ****     bool is_empty() const { return this->buffer.is_empty(); }
 473              		.loc 3 17 29 is_stmt 1
 474              	.LBB46:
 475              	.LBB47:
 476              	.LBB48:
 477              		.file 4 "src/../h/circular_buffer.hpp"
   1:src/../h/circular_buffer.hpp **** #ifndef PROJECT_BASE_CIRCULAR_BUFFER_HPP
   2:src/../h/circular_buffer.hpp **** #define PROJECT_BASE_CIRCULAR_BUFFER_HPP
   3:src/../h/circular_buffer.hpp **** 
   4:src/../h/circular_buffer.hpp **** #include "c_memory.hpp"
   5:src/../h/circular_buffer.hpp **** 
   6:src/../h/circular_buffer.hpp **** 
   7:src/../h/circular_buffer.hpp **** namespace os {
   8:src/../h/circular_buffer.hpp ****     template<typename T>
   9:src/../h/circular_buffer.hpp ****     class CircularBuffer {
  10:src/../h/circular_buffer.hpp ****     public:
  11:src/../h/circular_buffer.hpp **** 
  12:src/../h/circular_buffer.hpp ****         void init();
  13:src/../h/circular_buffer.hpp **** 
  14:src/../h/circular_buffer.hpp ****         void put(T);
  15:src/../h/circular_buffer.hpp **** 
GAS LISTING /tmp/ccZQgnQf.s 			page 14


  16:src/../h/circular_buffer.hpp ****         T get();
  17:src/../h/circular_buffer.hpp **** 
  18:src/../h/circular_buffer.hpp ****         T &peek();
  19:src/../h/circular_buffer.hpp **** 
  20:src/../h/circular_buffer.hpp ****         inline bool is_empty() const { return this->size == 0; }
 478              		.loc 4 20 53 is_stmt 0
 479 023c 97070000 		la	a5,_ZN2IO6OutputE
 479      83B70700 
 480 0244 83A70701 		lw	a5,16(a5)
 481              	.LVL35:
 482              	.LBE48:
 483              	.LBE47:
 484              	.LBE46:
 485              		.loc 1 91 65
 486 0248 63840702 		beqz	a5,.L30
 487              	.LBB49:
  92:src/riscv.cpp ****         char c = IO::Output.get();
 488              		.loc 1 92 9 is_stmt 1
 489              		.loc 1 92 32 is_stmt 0
 490 024c 17050000 		la	a0,_ZN2IO6OutputE
 490      03350500 
 491 0254 97000000 		call	_ZN8IOBuffer3getEv@plt
 491      E7800000 
 492              	.LVL36:
  93:src/riscv.cpp ****         *(volatile char *) CONSOLE_TX_DATA = c;
 493              		.loc 1 93 9 is_stmt 1
 494 025c 97070000 		la	a5,CONSOLE_TX_DATA
 494      83B70700 
 495 0264 83B70700 		ld	a5,0(a5)
 496              		.loc 1 93 44 is_stmt 0
 497 0268 2380A700 		sb	a0,0(a5)
 498              	.LBE49:
  91:src/riscv.cpp ****         char c = IO::Output.get();
 499              		.loc 1 91 5
 500 026c 6FF09FFB 		j	.L31
 501              	.LVL37:
 502              	.L30:
  94:src/riscv.cpp ****     }
  95:src/riscv.cpp ****     mc_sip(SIP_SSIE);
 503              		.loc 1 95 5 is_stmt 1 discriminator 4
 504              	.LBB50:
 505              	.LBB51:
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 106:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 107:src/../h/riscv.hpp **** }
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
 110:src/../h/riscv.hpp ****     uint64 volatile sepc;
 111:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 112:src/../h/riscv.hpp ****     return sepc;
 113:src/../h/riscv.hpp **** }
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 116:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 117:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccZQgnQf.s 			page 15


 118:src/../h/riscv.hpp **** 
 119:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec() {
 120:src/../h/riscv.hpp ****     uint64 volatile stvec;
 121:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 122:src/../h/riscv.hpp ****     return stvec;
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 126:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval() {
 130:src/../h/riscv.hpp ****     uint64 volatile stval;
 131:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 132:src/../h/riscv.hpp ****     return stval;
 133:src/../h/riscv.hpp **** }
 134:src/../h/riscv.hpp **** 
 135:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 137:src/../h/riscv.hpp **** }
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 140:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 144:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 506              		.loc 2 144 5 discriminator 4
 507              		.loc 2 144 64 is_stmt 0 discriminator 4
 508 0270 93072000 		li	a5,2
 509              	#APP
 510              	# 144 "src/../h/riscv.hpp" 1
 145              	}
 511              		csrc sip, a5
 512              	# 0 "" 2
 513              	.LVL38:
 514              	#NO_APP
 515              	.LBE51:
 516              	.LBE50:
  96:src/riscv.cpp ****     Cradle::update();
 517              		.loc 1 96 5 is_stmt 1 discriminator 4
 518              		.loc 1 96 19 is_stmt 0 discriminator 4
 519 0278 97000000 		call	_ZN6Cradle6updateEv@plt
 519      E7800000 
 520              	.LVL39:
 521 0280 6F008004 		j	.L32
 522              	.L33:
  97:src/riscv.cpp ****     while (!Cradle::is_empty() && Cradle::peak() == 0) {
  98:src/riscv.cpp ****         thread_t next = Cradle::remove();
  99:src/riscv.cpp ****         if (next->is_joined() || next->is_sleeping()) {
 100:src/riscv.cpp ****             next->run();
 101:src/riscv.cpp ****             Scheduler::put(next);
 102:src/riscv.cpp ****         }
 103:src/riscv.cpp ****     }
 104:src/riscv.cpp ****     TCB::timer_counter++;
 523              		.loc 1 104 5 is_stmt 1 discriminator 4
 524              		.loc 1 104 23 is_stmt 0 discriminator 4
GAS LISTING /tmp/ccZQgnQf.s 			page 16


 525 0284 17070000 		la	a4,_ZN3TCB13timer_counterE
 525      03370700 
 526 028c 83370700 		ld	a5,0(a4)
 527 0290 93871700 		addi	a5,a5,1
 528 0294 2330F700 		sd	a5,0(a4)
 105:src/riscv.cpp ****     if ((time_t) TCB::timer_counter >= TCB::running->get_time_slice() && !Scheduler::is_empty()) {
 529              		.loc 1 105 5 is_stmt 1 discriminator 4
 530              		.loc 1 105 68 is_stmt 0 discriminator 4
 531 0298 17070000 		la	a4,_ZN3TCB7runningE
 531      03370700 
 532 02a0 03370700 		ld	a4,0(a4)
 533              	.LVL40:
 534              	.LBB52:
 535              	.LBB53:
 536              		.file 5 "src/../h/c_thread.hpp"
   1:src/../h/c_thread.hpp **** #ifndef PROJECT_BASE_C_THREAD_HPP
   2:src/../h/c_thread.hpp **** #define PROJECT_BASE_C_THREAD_HPP
   3:src/../h/c_thread.hpp **** 
   4:src/../h/c_thread.hpp **** #include "syscall_c.hpp"
   5:src/../h/c_thread.hpp **** #include "../lib/hw.h"
   6:src/../h/c_thread.hpp **** #include "circular_buffer.hpp"
   7:src/../h/c_thread.hpp **** 
   8:src/../h/c_thread.hpp **** using run_t = void (*)(void *);
   9:src/../h/c_thread.hpp **** 
  10:src/../h/c_thread.hpp **** struct Context {
  11:src/../h/c_thread.hpp ****     uint64 ra;
  12:src/../h/c_thread.hpp ****     uint64 sp;
  13:src/../h/c_thread.hpp ****     uint64 sstatus;
  14:src/../h/c_thread.hpp ****     uint64 sepc;
  15:src/../h/c_thread.hpp **** };
  16:src/../h/c_thread.hpp **** 
  17:src/../h/c_thread.hpp **** enum Status {
  18:src/../h/c_thread.hpp ****     RUNNABLE, BLOCKED, SLEEPING, JOINED, FINISHED
  19:src/../h/c_thread.hpp **** };
  20:src/../h/c_thread.hpp **** 
  21:src/../h/c_thread.hpp **** class TCB final {
  22:src/../h/c_thread.hpp **** public:
  23:src/../h/c_thread.hpp ****     static int _thread_create(thread_t *, void(*)(void *), void *, void *);
  24:src/../h/c_thread.hpp **** 
  25:src/../h/c_thread.hpp ****     static void _thread_exit();
  26:src/../h/c_thread.hpp **** 
  27:src/../h/c_thread.hpp ****     static void _thread_dispatch();
  28:src/../h/c_thread.hpp **** 
  29:src/../h/c_thread.hpp ****     static void _thread_join(thread_t);
  30:src/../h/c_thread.hpp **** 
  31:src/../h/c_thread.hpp ****     static void _thread_join(thread_t, time_t);
  32:src/../h/c_thread.hpp **** 
  33:src/../h/c_thread.hpp ****     static int _fork();
  34:src/../h/c_thread.hpp **** 
  35:src/../h/c_thread.hpp ****     static int _kill(TCB *);
  36:src/../h/c_thread.hpp **** 
  37:src/../h/c_thread.hpp ****     static void thread_start();
  38:src/../h/c_thread.hpp **** 
  39:src/../h/c_thread.hpp ****     static void context_switch(Context *, Context *);
  40:src/../h/c_thread.hpp **** 
  41:src/../h/c_thread.hpp ****     static void yield();
  42:src/../h/c_thread.hpp **** 
GAS LISTING /tmp/ccZQgnQf.s 			page 17


  43:src/../h/c_thread.hpp ****     static TCB *destroy_thread(TCB *);
  44:src/../h/c_thread.hpp **** 
  45:src/../h/c_thread.hpp ****     static void duplicate(TCB *, TCB *);
  46:src/../h/c_thread.hpp **** 
  47:src/../h/c_thread.hpp ****     void *operator new(size_t size) { return Allocator::_mem_alloc(size); }
  48:src/../h/c_thread.hpp **** 
  49:src/../h/c_thread.hpp ****     void operator delete(void *pointer) { Allocator::_mem_free(pointer); }
  50:src/../h/c_thread.hpp **** 
  51:src/../h/c_thread.hpp ****     void *operator new[](size_t size) { return Allocator::_mem_alloc(size); }
  52:src/../h/c_thread.hpp **** 
  53:src/../h/c_thread.hpp ****     void operator delete[](void *pointer) { Allocator::_mem_free(pointer); }
  54:src/../h/c_thread.hpp **** 
  55:src/../h/c_thread.hpp ****     TCB(run_t, void *, void *, Context);
  56:src/../h/c_thread.hpp **** 
  57:src/../h/c_thread.hpp ****     TCB(TCB &);
  58:src/../h/c_thread.hpp **** 
  59:src/../h/c_thread.hpp ****     bool is_runnable() const { return this->status == RUNNABLE; }
  60:src/../h/c_thread.hpp **** 
  61:src/../h/c_thread.hpp ****     bool is_blocked() const { return this->status == BLOCKED; }
  62:src/../h/c_thread.hpp **** 
  63:src/../h/c_thread.hpp ****     bool is_sleeping() const { return this->status == SLEEPING; }
  64:src/../h/c_thread.hpp **** 
  65:src/../h/c_thread.hpp ****     bool is_joined() const { return this->status == JOINED; }
  66:src/../h/c_thread.hpp **** 
  67:src/../h/c_thread.hpp ****     bool is_finished() const { return this->status == FINISHED; }
  68:src/../h/c_thread.hpp **** 
  69:src/../h/c_thread.hpp ****     void run() { this->status = RUNNABLE; }
  70:src/../h/c_thread.hpp **** 
  71:src/../h/c_thread.hpp ****     void block() { this->status = BLOCKED; }
  72:src/../h/c_thread.hpp **** 
  73:src/../h/c_thread.hpp ****     void sleep() { this->status = SLEEPING; }
  74:src/../h/c_thread.hpp **** 
  75:src/../h/c_thread.hpp ****     void enjoin() { this->status = JOINED; }
  76:src/../h/c_thread.hpp **** 
  77:src/../h/c_thread.hpp ****     void finish() { this->status = FINISHED; }
  78:src/../h/c_thread.hpp **** 
  79:src/../h/c_thread.hpp ****     bool was_preempted() const { return this->preempted; }
  80:src/../h/c_thread.hpp **** 
  81:src/../h/c_thread.hpp ****     void set_preempted() { this->preempted = true; }
  82:src/../h/c_thread.hpp **** 
  83:src/../h/c_thread.hpp ****     void reset_preempted() { this->preempted = false; }
  84:src/../h/c_thread.hpp **** 
  85:src/../h/c_thread.hpp ****     time_t get_time_slice() const { return this->time_slice; }
 537              		.loc 5 85 37 is_stmt 1 discriminator 4
 538              		.loc 5 85 50 is_stmt 0 discriminator 4
 539 02a4 83360705 		ld	a3,80(a4)
 540              	.LVL41:
 541              	.LBE53:
 542              	.LBE52:
 543              		.loc 1 105 71 discriminator 4
 544 02a8 63FCD704 		bgeu	a5,a3,.L35
 545              	.L29:
 106:src/riscv.cpp ****         TCB::timer_counter = 0;
 107:src/riscv.cpp ****         TCB::running->set_preempted();
 108:src/riscv.cpp ****         TCB::_thread_dispatch();
 109:src/riscv.cpp ****     }
 110:src/riscv.cpp **** }
GAS LISTING /tmp/ccZQgnQf.s 			page 18


 546              		.loc 1 110 1
 547 02ac 83308100 		ld	ra,8(sp)
 548              		.cfi_remember_state
 549              		.cfi_restore 1
 550 02b0 03340100 		ld	s0,0(sp)
 551              		.cfi_restore 8
 552              		.cfi_def_cfa 2, 16
 553 02b4 13010101 		addi	sp,sp,16
 554              		.cfi_def_cfa_offset 0
 555 02b8 67800000 		jr	ra
 556              	.LVL42:
 557              	.L37:
 558              		.cfi_restore_state
 559              	.LBB54:
 100:src/riscv.cpp ****             Scheduler::put(next);
 560              		.loc 1 100 13 is_stmt 1 discriminator 3
 561              	.LBB55:
 562              	.LBB56:
  69:src/../h/c_thread.hpp **** 
 563              		.loc 5 69 18 discriminator 3
  69:src/../h/c_thread.hpp **** 
 564              		.loc 5 69 31 is_stmt 0 discriminator 3
 565 02bc 23240504 		sw	zero,72(a0)
 566              	.LVL43:
 567              	.LBE56:
 568              	.LBE55:
 101:src/riscv.cpp ****         }
 569              		.loc 1 101 13 is_stmt 1 discriminator 3
 101:src/riscv.cpp ****         }
 570              		.loc 1 101 27 is_stmt 0 discriminator 3
 571 02c0 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 571      E7800000 
 572              	.LVL44:
 573              	.L32:
 574              	.LBE54:
  97:src/riscv.cpp ****         thread_t next = Cradle::remove();
 575              		.loc 1 97 5 is_stmt 1
  97:src/riscv.cpp ****         thread_t next = Cradle::remove();
 576              		.loc 1 97 32
  97:src/riscv.cpp ****         thread_t next = Cradle::remove();
 577              		.loc 1 97 29 is_stmt 0
 578 02c8 97000000 		call	_ZN6Cradle8is_emptyEv@plt
 578      E7800000 
 579              	.LVL45:
  97:src/riscv.cpp ****         thread_t next = Cradle::remove();
 580              		.loc 1 97 32
 581 02d0 E31A05FA 		bnez	a0,.L33
  97:src/riscv.cpp ****         thread_t next = Cradle::remove();
 582              		.loc 1 97 47 discriminator 1
 583 02d4 97000000 		call	_ZN6Cradle4peakEv@plt
 583      E7800000 
 584              	.LVL46:
  97:src/riscv.cpp ****         thread_t next = Cradle::remove();
 585              		.loc 1 97 32 discriminator 1
 586 02dc E31405FA 		bnez	a0,.L33
 587              	.LBB59:
  98:src/riscv.cpp ****         if (next->is_joined() || next->is_sleeping()) {
GAS LISTING /tmp/ccZQgnQf.s 			page 19


 588              		.loc 1 98 9 is_stmt 1
  98:src/riscv.cpp ****         if (next->is_joined() || next->is_sleeping()) {
 589              		.loc 1 98 39 is_stmt 0
 590 02e0 97000000 		call	_ZN6Cradle6removeEv@plt
 590      E7800000 
 591              	.LVL47:
  99:src/riscv.cpp ****             next->run();
 592              		.loc 1 99 9 is_stmt 1
 593              	.LBB57:
 594              	.LBB58:
  65:src/../h/c_thread.hpp **** 
 595              		.loc 5 65 30
  65:src/../h/c_thread.hpp **** 
 596              		.loc 5 65 43 is_stmt 0
 597 02e8 83278504 		lw	a5,72(a0)
 598              	.LVL48:
 599              	.LBE58:
 600              	.LBE57:
  99:src/riscv.cpp ****             next->run();
 601              		.loc 1 99 31
 602 02ec 13073000 		li	a4,3
 603 02f0 E386E7FC 		beq	a5,a4,.L37
 604              	.LVL49:
 605              	.LBE59:
  63:src/../h/c_thread.hpp **** 
 606              		.loc 5 63 32 is_stmt 1
 607              	.LBB60:
  99:src/riscv.cpp ****             next->run();
 608              		.loc 1 99 31 is_stmt 0
 609 02f4 13072000 		li	a4,2
 610 02f8 E398E7FC 		bne	a5,a4,.L32
 611 02fc 6FF01FFC 		j	.L37
 612              	.LVL50:
 613              	.L35:
 614              	.LBE60:
 615              	.LBB61:
 616              	.LBB62:
 617              		.file 6 "src/../h/scheduler.hpp"
   1:src/../h/scheduler.hpp **** #ifndef PROJECT_BASE_SCHEDULER_HPP
   2:src/../h/scheduler.hpp **** #define PROJECT_BASE_SCHEDULER_HPP
   3:src/../h/scheduler.hpp **** 
   4:src/../h/scheduler.hpp **** #include "circular_buffer.hpp"
   5:src/../h/scheduler.hpp **** #include "syscall_c.hpp"
   6:src/../h/scheduler.hpp **** 
   7:src/../h/scheduler.hpp **** class Scheduler final {
   8:src/../h/scheduler.hpp **** public:
   9:src/../h/scheduler.hpp **** 
  10:src/../h/scheduler.hpp ****     static void init() { high_priority.init(); mid_priority.init(); low_priority.init(); }
  11:src/../h/scheduler.hpp **** 
  12:src/../h/scheduler.hpp ****     static void put(TCB *thread);
  13:src/../h/scheduler.hpp **** 
  14:src/../h/scheduler.hpp ****     static TCB *get();
  15:src/../h/scheduler.hpp **** 
  16:src/../h/scheduler.hpp ****     static inline bool is_empty() {
  17:src/../h/scheduler.hpp ****         return high_priority.is_empty() && mid_priority.is_empty() && low_priority.is_empty();
 618              		.loc 6 17 9 is_stmt 1
 619              	.LBB63:
GAS LISTING /tmp/ccZQgnQf.s 			page 20


 620              	.LBB64:
 621              		.loc 4 20 53 is_stmt 0
 622 0300 97070000 		la	a5,_ZN9Scheduler13high_priorityE
 622      83B70700 
 623 0308 83A70701 		lw	a5,16(a5)
 624              	.LVL51:
 625              	.LBE64:
 626              	.LBE63:
 627              		.loc 6 17 68
 628 030c 63920702 		bnez	a5,.L39
 629              	.LVL52:
 630              	.LBB65:
 631              	.LBB66:
 632              		.loc 4 20 53
 633 0310 97070000 		la	a5,_ZN9Scheduler12mid_priorityE
 633      83B70700 
 634 0318 83A70701 		lw	a5,16(a5)
 635              	.LVL53:
 636              	.LBE66:
 637              	.LBE65:
 638              		.loc 6 17 41
 639 031c 639A0700 		bnez	a5,.L39
 640              	.LVL54:
 641              	.LBB67:
 642              	.LBB68:
 643              		.loc 4 20 53
 644 0320 97070000 		la	a5,_ZN9Scheduler12low_priorityE
 644      83B70700 
 645 0328 83A70701 		lw	a5,16(a5)
 646              	.LVL55:
 647              	.LBE68:
 648              	.LBE67:
 649              		.loc 6 17 68
 650 032c E38007F8 		beqz	a5,.L29
 651              	.L39:
 652              	.LBE62:
 653              	.LBE61:
 106:src/riscv.cpp ****         TCB::running->set_preempted();
 654              		.loc 1 106 9 is_stmt 1
 106:src/riscv.cpp ****         TCB::running->set_preempted();
 655              		.loc 1 106 28 is_stmt 0
 656 0330 97070000 		la	a5,_ZN3TCB13timer_counterE
 656      83B70700 
 657 0338 23B00700 		sd	zero,0(a5)
 107:src/riscv.cpp ****         TCB::_thread_dispatch();
 658              		.loc 1 107 9 is_stmt 1
 659              	.LVL56:
 660              	.LBB69:
 661              	.LBB70:
  81:src/../h/c_thread.hpp **** 
 662              		.loc 5 81 28
  81:src/../h/c_thread.hpp **** 
 663              		.loc 5 81 44 is_stmt 0
 664 033c 93071000 		li	a5,1
 665 0340 230CF704 		sb	a5,88(a4)
 666              	.LVL57:
 667              	.LBE70:
GAS LISTING /tmp/ccZQgnQf.s 			page 21


 668              	.LBE69:
 108:src/riscv.cpp ****     }
 669              		.loc 1 108 9 is_stmt 1
 108:src/riscv.cpp ****     }
 670              		.loc 1 108 30 is_stmt 0
 671 0344 97000000 		call	_ZN3TCB16_thread_dispatchEv@plt
 671      E7800000 
 672              	.LVL58:
 673              		.loc 1 110 1
 674 034c 6FF01FF6 		j	.L29
 675              		.cfi_endproc
 676              	.LFE52:
 678              		.align	2
 679              		.globl	_ZN5Riscv17handleConsoleTrapEv
 681              	_ZN5Riscv17handleConsoleTrapEv:
 682              	.LFB53:
 111:src/riscv.cpp **** 
 112:src/riscv.cpp **** __attribute__((unused))
 113:src/riscv.cpp **** void Riscv::handleConsoleTrap() {
 683              		.loc 1 113 33 is_stmt 1
 684              		.cfi_startproc
 685 0350 130101FE 		addi	sp,sp,-32
 686              		.cfi_def_cfa_offset 32
 687 0354 233C1100 		sd	ra,24(sp)
 688 0358 23388100 		sd	s0,16(sp)
 689              		.cfi_offset 1, -8
 690              		.cfi_offset 8, -16
 691 035c 13040102 		addi	s0,sp,32
 692              		.cfi_def_cfa 8, 0
 114:src/riscv.cpp ****     if (plic_claim() == CONSOLE_IRQ) {
 693              		.loc 1 114 5
 694              	.LBB71:
 695              		.loc 1 114 19 is_stmt 0
 696 0360 97000000 		call	plic_claim@plt
 696      E7800000 
 697              	.LVL59:
 698              		.loc 1 114 5
 699 0368 9307A000 		li	a5,10
 700 036c 630AF500 		beq	a0,a5,.L44
 701              	.L41:
 702              	.LBE71:
 115:src/riscv.cpp ****         while ((*((char *) CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)) {
 116:src/riscv.cpp ****             volatile char c = *(char *) CONSOLE_RX_DATA;
 117:src/riscv.cpp ****             IO::Input.put(c);
 118:src/riscv.cpp ****         }
 119:src/riscv.cpp ****         plic_complete(CONSOLE_IRQ);
 120:src/riscv.cpp ****     }
 121:src/riscv.cpp **** }
 703              		.loc 1 121 1
 704 0370 83308101 		ld	ra,24(sp)
 705              		.cfi_remember_state
 706              		.cfi_restore 1
 707 0374 03340101 		ld	s0,16(sp)
 708              		.cfi_restore 8
 709              		.cfi_def_cfa 2, 32
 710 0378 13010102 		addi	sp,sp,32
 711              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/ccZQgnQf.s 			page 22


 712 037c 67800000 		jr	ra
 713              	.L44:
 714              		.cfi_restore_state
 715              	.LBB74:
 716              	.LBB72:
 115:src/riscv.cpp ****         while ((*((char *) CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)) {
 717              		.loc 1 115 9 is_stmt 1
 115:src/riscv.cpp ****         while ((*((char *) CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)) {
 718              		.loc 1 115 67
 115:src/riscv.cpp ****         while ((*((char *) CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)) {
 719              		.loc 1 115 17 is_stmt 0
 720 0380 97070000 		la	a5,CONSOLE_STATUS
 720      83B70700 
 721 0388 83B70700 		ld	a5,0(a5)
 722 038c 83C70700 		lbu	a5,0(a5)
 115:src/riscv.cpp ****         while ((*((char *) CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)) {
 723              		.loc 1 115 67
 724 0390 93F71700 		andi	a5,a5,1
 725 0394 638A0702 		beqz	a5,.L43
 726              	.LBB73:
 116:src/riscv.cpp ****             IO::Input.put(c);
 727              		.loc 1 116 13 is_stmt 1
 116:src/riscv.cpp ****             IO::Input.put(c);
 728              		.loc 1 116 31 is_stmt 0
 729 0398 97070000 		la	a5,CONSOLE_RX_DATA
 729      83B70700 
 730 03a0 83B70700 		ld	a5,0(a5)
 731 03a4 83C70700 		lbu	a5,0(a5)
 116:src/riscv.cpp ****             IO::Input.put(c);
 732              		.loc 1 116 27
 733 03a8 A307F4FE 		sb	a5,-17(s0)
 117:src/riscv.cpp ****         }
 734              		.loc 1 117 13 is_stmt 1
 117:src/riscv.cpp ****         }
 735              		.loc 1 117 26 is_stmt 0
 736 03ac 8345F4FE 		lbu	a1,-17(s0)
 737 03b0 93F5F50F 		andi	a1,a1,0xff
 738 03b4 17050000 		la	a0,_ZN2IO5InputE
 738      03350500 
 739 03bc 97000000 		call	_ZN8IOBuffer3putEc@plt
 739      E7800000 
 740              	.LVL60:
 741              	.LBE73:
 115:src/riscv.cpp ****         while ((*((char *) CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)) {
 742              		.loc 1 115 9
 743 03c4 6FF0DFFB 		j	.L44
 744              	.L43:
 119:src/riscv.cpp ****     }
 745              		.loc 1 119 9 is_stmt 1
 119:src/riscv.cpp ****     }
 746              		.loc 1 119 22 is_stmt 0
 747 03c8 1305A000 		li	a0,10
 748 03cc 97000000 		call	plic_complete@plt
 748      E7800000 
 749              	.LVL61:
 750              	.LBE72:
 751              	.LBE74:
GAS LISTING /tmp/ccZQgnQf.s 			page 23


 752              		.loc 1 121 1
 753 03d4 6FF0DFF9 		j	.L41
 754              		.cfi_endproc
 755              	.LFE53:
 757              		.align	2
 758              		.globl	_ZN5Riscv10popSppSpieEv
 760              	_ZN5Riscv10popSppSpieEv:
 761              	.LFB54:
 122:src/riscv.cpp **** 
 123:src/riscv.cpp **** void Riscv::popSppSpie() {
 762              		.loc 1 123 26 is_stmt 1
 763              		.cfi_startproc
 764 03d8 130101FF 		addi	sp,sp,-16
 765              		.cfi_def_cfa_offset 16
 766 03dc 23348100 		sd	s0,8(sp)
 767              		.cfi_offset 8, -8
 768 03e0 13040101 		addi	s0,sp,16
 769              		.cfi_def_cfa 8, 0
 124:src/riscv.cpp ****     Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 770              		.loc 1 124 5
 771              	.LVL62:
 772              	.LBB75:
 773              	.LBB76:
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip() {
 148:src/../h/riscv.hpp ****     uint64 volatile sip;
 149:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 150:src/../h/riscv.hpp ****     return sip;
 151:src/../h/riscv.hpp **** }
 152:src/../h/riscv.hpp **** 
 153:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 154:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 155:src/../h/riscv.hpp **** }
 156:src/../h/riscv.hpp **** 
 157:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 158:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 162:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 774              		.loc 2 162 5
 775              		.loc 2 162 68 is_stmt 0
 776 03e4 93070010 		li	a5,256
 777              	#APP
 778              	# 162 "src/../h/riscv.hpp" 1
 163              	}
 779              		csrc sstatus, a5
 780              	# 0 "" 2
 781              	.LVL63:
 782              	#NO_APP
 783              	.LBE76:
 784              	.LBE75:
 125:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
 785              		.loc 1 125 5 is_stmt 1
 786              		.loc 1 125 38 is_stmt 0
 787              	#APP
 788              	# 125 "src/riscv.cpp" 1
GAS LISTING /tmp/ccZQgnQf.s 			page 24


 126              	    __asm__ volatile("sret");
 789              		csrw sepc, ra
 790              	# 0 "" 2
 791              		.loc 1 126 5 is_stmt 1
 792              		.loc 1 126 29 is_stmt 0
 793              	# 126 "src/riscv.cpp" 1
 127              	}
 794              		sret
 795              	# 0 "" 2
 796              		.loc 1 127 1
 797              	#NO_APP
 798 03f4 03348100 		ld	s0,8(sp)
 799              		.cfi_restore 8
 800              		.cfi_def_cfa 2, 16
 801 03f8 13010101 		addi	sp,sp,16
 802              		.cfi_def_cfa_offset 0
 803 03fc 67800000 		jr	ra
 804              		.cfi_endproc
 805              	.LFE54:
 807              		.align	2
 808              		.globl	_ZN5Riscv14handleReadTrapEv
 810              	_ZN5Riscv14handleReadTrapEv:
 811              	.LFB55:
 128:src/riscv.cpp **** 
 129:src/riscv.cpp **** 
 130:src/riscv.cpp **** __attribute__((unused))
 131:src/riscv.cpp **** void Riscv::handleReadTrap() {
 812              		.loc 1 131 30 is_stmt 1
 813              		.cfi_startproc
 814 0400 130101FF 		addi	sp,sp,-16
 815              		.cfi_def_cfa_offset 16
 816 0404 23348100 		sd	s0,8(sp)
 817              		.cfi_offset 8, -8
 818 0408 13040101 		addi	s0,sp,16
 819              		.cfi_def_cfa 8, 0
 132:src/riscv.cpp ****     *(volatile char *) CONSOLE_TX_DATA = '!';
 820              		.loc 1 132 5
 821 040c 97070000 		la	a5,CONSOLE_TX_DATA
 821      83B70700 
 822 0414 83B70700 		ld	a5,0(a5)
 823              		.loc 1 132 40 is_stmt 0
 824 0418 13071002 		li	a4,33
 825 041c 2380E700 		sb	a4,0(a5)
 133:src/riscv.cpp ****     *(volatile char *) CONSOLE_TX_DATA = 'r';
 826              		.loc 1 133 5 is_stmt 1
 827              		.loc 1 133 40 is_stmt 0
 828 0420 13072007 		li	a4,114
 829 0424 2380E700 		sb	a4,0(a5)
 134:src/riscv.cpp **** }
 830              		.loc 1 134 1
 831 0428 03348100 		ld	s0,8(sp)
 832              		.cfi_restore 8
 833              		.cfi_def_cfa 2, 16
 834 042c 13010101 		addi	sp,sp,16
 835              		.cfi_def_cfa_offset 0
 836 0430 67800000 		jr	ra
 837              		.cfi_endproc
GAS LISTING /tmp/ccZQgnQf.s 			page 25


 838              	.LFE55:
 840              		.align	2
 841              		.globl	_ZN5Riscv15handleWriteTrapEv
 843              	_ZN5Riscv15handleWriteTrapEv:
 844              	.LFB56:
 135:src/riscv.cpp **** 
 136:src/riscv.cpp **** 
 137:src/riscv.cpp **** __attribute__((unused))
 138:src/riscv.cpp **** void Riscv::handleWriteTrap() {
 845              		.loc 1 138 31 is_stmt 1
 846              		.cfi_startproc
 847 0434 130101FF 		addi	sp,sp,-16
 848              		.cfi_def_cfa_offset 16
 849 0438 23348100 		sd	s0,8(sp)
 850              		.cfi_offset 8, -8
 851 043c 13040101 		addi	s0,sp,16
 852              		.cfi_def_cfa 8, 0
 139:src/riscv.cpp ****     *(volatile char *) CONSOLE_TX_DATA = '!';
 853              		.loc 1 139 5
 854 0440 97070000 		la	a5,CONSOLE_TX_DATA
 854      83B70700 
 855 0448 83B70700 		ld	a5,0(a5)
 856              		.loc 1 139 40 is_stmt 0
 857 044c 13071002 		li	a4,33
 858 0450 2380E700 		sb	a4,0(a5)
 140:src/riscv.cpp ****     *(volatile char *) CONSOLE_TX_DATA = 'w';
 859              		.loc 1 140 5 is_stmt 1
 860              		.loc 1 140 40 is_stmt 0
 861 0454 13077007 		li	a4,119
 862 0458 2380E700 		sb	a4,0(a5)
 141:src/riscv.cpp **** }...
 863              		.loc 1 141 1
 864 045c 03348100 		ld	s0,8(sp)
 865              		.cfi_restore 8
 866              		.cfi_def_cfa 2, 16
 867 0460 13010101 		addi	sp,sp,16
 868              		.cfi_def_cfa_offset 0
 869 0464 67800000 		jr	ra
 870              		.cfi_endproc
 871              	.LFE56:
 873              	.Letext0:
 874              		.file 7 "src/../lib/hw.h"
 875              		.file 8 "src/../h/syscall_c.hpp"
 876              		.file 9 "src/../h/c_semaphore.hpp"
 877              		.file 10 "src/../h/c_memory.hpp"
 878              		.file 11 "src/../h/c_sleep.hpp"
GAS LISTING /tmp/ccZQgnQf.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccZQgnQf.s:9      .text:0000000000000000 _Z3truv
     /tmp/ccZQgnQf.s:13     .text:0000000000000000 .L0 
     /tmp/ccZQgnQf.s:14     .text:0000000000000000 .L0 
     /tmp/ccZQgnQf.s:15     .text:0000000000000004 .L0 
     /tmp/ccZQgnQf.s:17     .text:0000000000000008 .L0 
     /tmp/ccZQgnQf.s:19     .text:000000000000000c .L0 
     /tmp/ccZQgnQf.s:21     .text:000000000000000c .L0 
     /tmp/ccZQgnQf.s:22     .text:000000000000000c .L0 
     /tmp/ccZQgnQf.s:24     .text:0000000000000014 .L0 
     /tmp/ccZQgnQf.s:25     .text:0000000000000014 .L0 
     /tmp/ccZQgnQf.s:27     .text:0000000000000018 .L0 
     /tmp/ccZQgnQf.s:29     .text:000000000000001c .L0 
     /tmp/ccZQgnQf.s:35     .text:000000000000001c _Z3rarv
     /tmp/ccZQgnQf.s:38     .text:000000000000001c .L0 
     /tmp/ccZQgnQf.s:39     .text:000000000000001c .L0 
     /tmp/ccZQgnQf.s:40     .text:0000000000000020 .L0 
     /tmp/ccZQgnQf.s:42     .text:0000000000000024 .L0 
     /tmp/ccZQgnQf.s:44     .text:0000000000000028 .L0 
     /tmp/ccZQgnQf.s:49     .text:0000000000000028 .L0 
     /tmp/ccZQgnQf.s:50     .text:0000000000000028 .L0 
     /tmp/ccZQgnQf.s:51     .text:0000000000000028 .L0 
  src/../h/riscv.hpp:101    .text:0000000000000028 .L0 
     /tmp/ccZQgnQf.s:59     .text:0000000000000030 .L0 
     /tmp/ccZQgnQf.s:60     .text:0000000000000030 .L0 
     /tmp/ccZQgnQf.s:64     .text:0000000000000034 .L0 
     /tmp/ccZQgnQf.s:65     .text:0000000000000038 .L0 
     /tmp/ccZQgnQf.s:66     .text:0000000000000038 .L0 
     /tmp/ccZQgnQf.s:68     .text:000000000000003c .L0 
     /tmp/ccZQgnQf.s:70     .text:0000000000000040 .L0 
     /tmp/ccZQgnQf.s:81     .text:0000000000000040 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccZQgnQf.s:84     .text:0000000000000040 .L0 
     /tmp/ccZQgnQf.s:85     .text:0000000000000040 .L0 
     /tmp/ccZQgnQf.s:86     .text:0000000000000044 .L0 
     /tmp/ccZQgnQf.s:94     .text:0000000000000060 .L0 
     /tmp/ccZQgnQf.s:95     .text:0000000000000060 .L0 
     /tmp/ccZQgnQf.s:96     .text:0000000000000060 .L0 
     /tmp/ccZQgnQf.s:97     .text:0000000000000060 .L0 
     /tmp/ccZQgnQf.s:98     .text:0000000000000060 .L0 
     /tmp/ccZQgnQf.s:99     .text:0000000000000060 .L0 
     /tmp/ccZQgnQf.s:100    .text:0000000000000060 .L0 
     /tmp/ccZQgnQf.s:102    .text:0000000000000064 .L0 
     /tmp/ccZQgnQf.s:104    .text:0000000000000064 .L0 
     /tmp/ccZQgnQf.s:105    .text:0000000000000064 .L0 
       src/riscv.cpp:20     .text:0000000000000064 .L0 
     /tmp/ccZQgnQf.s:112    .text:0000000000000068 .L0 
       src/riscv.cpp:21     .text:0000000000000068 .L0 
     /tmp/ccZQgnQf.s:118    .text:000000000000006c .L0 
       src/riscv.cpp:22     .text:000000000000006c .L0 
     /tmp/ccZQgnQf.s:124    .text:0000000000000070 .L0 
       src/riscv.cpp:23     .text:0000000000000070 .L0 
     /tmp/ccZQgnQf.s:130    .text:0000000000000074 .L0 
       src/riscv.cpp:24     .text:0000000000000074 .L0 
     /tmp/ccZQgnQf.s:139    .text:0000000000000078 .L0 
     /tmp/ccZQgnQf.s:140    .text:0000000000000078 .L0 
     /tmp/ccZQgnQf.s:141    .text:0000000000000078 .L0 
GAS LISTING /tmp/ccZQgnQf.s 			page 27


  src/../h/riscv.hpp:101    .text:0000000000000078 .L0 
     /tmp/ccZQgnQf.s:149    .text:0000000000000080 .L0 
     /tmp/ccZQgnQf.s:150    .text:0000000000000080 .L0 
     /tmp/ccZQgnQf.s:154    .text:0000000000000084 .L0 
     /tmp/ccZQgnQf.s:158    .text:000000000000008c .L0 
     /tmp/ccZQgnQf.s:242    .text:00000000000000b0 .L0 
     /tmp/ccZQgnQf.s:243    .text:00000000000000b0 .L0 
     /tmp/ccZQgnQf.s:247    .text:00000000000000c0 .L0 
     /tmp/ccZQgnQf.s:248    .text:00000000000000c0 .L0 
     /tmp/ccZQgnQf.s:254    .text:00000000000000cc .L0 
     /tmp/ccZQgnQf.s:255    .text:00000000000000cc .L0 
     /tmp/ccZQgnQf.s:256    .text:00000000000000cc .L0 
     /tmp/ccZQgnQf.s:260    .text:00000000000000d8 .L0 
     /tmp/ccZQgnQf.s:263    .text:00000000000000dc .L0 
     /tmp/ccZQgnQf.s:264    .text:00000000000000dc .L0 
     /tmp/ccZQgnQf.s:265    .text:00000000000000dc .L0 
     /tmp/ccZQgnQf.s:269    .text:00000000000000e8 .L0 
     /tmp/ccZQgnQf.s:272    .text:00000000000000ec .L0 
     /tmp/ccZQgnQf.s:273    .text:00000000000000ec .L0 
     /tmp/ccZQgnQf.s:274    .text:00000000000000ec .L0 
     /tmp/ccZQgnQf.s:281    .text:0000000000000104 .L0 
     /tmp/ccZQgnQf.s:284    .text:0000000000000108 .L0 
     /tmp/ccZQgnQf.s:285    .text:0000000000000108 .L0 
     /tmp/ccZQgnQf.s:286    .text:0000000000000108 .L0 
     /tmp/ccZQgnQf.s:289    .text:0000000000000110 .L0 
     /tmp/ccZQgnQf.s:292    .text:0000000000000114 .L0 
     /tmp/ccZQgnQf.s:293    .text:0000000000000114 .L0 
     /tmp/ccZQgnQf.s:294    .text:0000000000000114 .L0 
     /tmp/ccZQgnQf.s:297    .text:000000000000011c .L0 
     /tmp/ccZQgnQf.s:300    .text:0000000000000120 .L0 
     /tmp/ccZQgnQf.s:301    .text:0000000000000120 .L0 
     /tmp/ccZQgnQf.s:302    .text:0000000000000120 .L0 
     /tmp/ccZQgnQf.s:306    .text:000000000000012c .L0 
     /tmp/ccZQgnQf.s:309    .text:0000000000000130 .L0 
     /tmp/ccZQgnQf.s:310    .text:0000000000000130 .L0 
     /tmp/ccZQgnQf.s:311    .text:0000000000000130 .L0 
     /tmp/ccZQgnQf.s:316    .text:0000000000000140 .L0 
     /tmp/ccZQgnQf.s:319    .text:0000000000000144 .L0 
     /tmp/ccZQgnQf.s:320    .text:0000000000000144 .L0 
     /tmp/ccZQgnQf.s:321    .text:0000000000000144 .L0 
     /tmp/ccZQgnQf.s:324    .text:000000000000014c .L0 
     /tmp/ccZQgnQf.s:327    .text:0000000000000150 .L0 
     /tmp/ccZQgnQf.s:328    .text:0000000000000150 .L0 
     /tmp/ccZQgnQf.s:329    .text:0000000000000150 .L0 
     /tmp/ccZQgnQf.s:333    .text:000000000000015c .L0 
     /tmp/ccZQgnQf.s:336    .text:0000000000000160 .L0 
     /tmp/ccZQgnQf.s:337    .text:0000000000000160 .L0 
     /tmp/ccZQgnQf.s:338    .text:0000000000000160 .L0 
     /tmp/ccZQgnQf.s:343    .text:0000000000000170 .L0 
     /tmp/ccZQgnQf.s:346    .text:0000000000000174 .L0 
     /tmp/ccZQgnQf.s:347    .text:0000000000000174 .L0 
     /tmp/ccZQgnQf.s:348    .text:0000000000000174 .L0 
     /tmp/ccZQgnQf.s:352    .text:0000000000000180 .L0 
     /tmp/ccZQgnQf.s:355    .text:0000000000000184 .L0 
     /tmp/ccZQgnQf.s:356    .text:0000000000000184 .L0 
     /tmp/ccZQgnQf.s:357    .text:0000000000000184 .L0 
     /tmp/ccZQgnQf.s:361    .text:0000000000000190 .L0 
GAS LISTING /tmp/ccZQgnQf.s 			page 28


     /tmp/ccZQgnQf.s:364    .text:0000000000000194 .L0 
     /tmp/ccZQgnQf.s:365    .text:0000000000000194 .L0 
     /tmp/ccZQgnQf.s:366    .text:0000000000000194 .L0 
     /tmp/ccZQgnQf.s:370    .text:00000000000001a0 .L0 
     /tmp/ccZQgnQf.s:373    .text:00000000000001a4 .L0 
     /tmp/ccZQgnQf.s:374    .text:00000000000001a4 .L0 
     /tmp/ccZQgnQf.s:375    .text:00000000000001a4 .L0 
     /tmp/ccZQgnQf.s:379    .text:00000000000001b0 .L0 
     /tmp/ccZQgnQf.s:380    .text:00000000000001b0 .L0 
     /tmp/ccZQgnQf.s:385    .text:00000000000001bc .L0 
     /tmp/ccZQgnQf.s:386    .text:00000000000001bc .L0 
     /tmp/ccZQgnQf.s:387    .text:00000000000001bc .L0 
     /tmp/ccZQgnQf.s:392    .text:00000000000001c8 .L0 
     /tmp/ccZQgnQf.s:393    .text:00000000000001c8 .L0 
     /tmp/ccZQgnQf.s:394    .text:00000000000001cc .L0 
     /tmp/ccZQgnQf.s:395    .text:00000000000001cc .L0 
     /tmp/ccZQgnQf.s:397    .text:00000000000001d0 .L0 
     /tmp/ccZQgnQf.s:398    .text:00000000000001d0 .L0 
     /tmp/ccZQgnQf.s:400    .text:00000000000001d4 .L0 
     /tmp/ccZQgnQf.s:402    .text:00000000000001d8 .L0 
     /tmp/ccZQgnQf.s:405    .text:00000000000001dc .L0 
     /tmp/ccZQgnQf.s:408    .text:00000000000001e0 .L0 
     /tmp/ccZQgnQf.s:411    .text:00000000000001e4 .L0 
     /tmp/ccZQgnQf.s:414    .text:00000000000001e8 .L0 
     /tmp/ccZQgnQf.s:418    .text:00000000000001ec .L0 
     /tmp/ccZQgnQf.s:420    .text:00000000000001ec .L0 
     /tmp/ccZQgnQf.s:421    .text:00000000000001ec .L0 
     /tmp/ccZQgnQf.s:422    .text:00000000000001ec .L0 
     /tmp/ccZQgnQf.s:427    .text:00000000000001f8 .L0 
     /tmp/ccZQgnQf.s:428    .text:00000000000001f8 .L0 
     /tmp/ccZQgnQf.s:429    .text:00000000000001f8 .L0 
     /tmp/ccZQgnQf.s:432    .text:0000000000000200 .L0 
     /tmp/ccZQgnQf.s:435    .text:0000000000000204 .L0 
     /tmp/ccZQgnQf.s:436    .text:0000000000000204 .L0 
     /tmp/ccZQgnQf.s:437    .text:0000000000000204 .L0 
     /tmp/ccZQgnQf.s:441    .text:0000000000000210 .L0 
     /tmp/ccZQgnQf.s:442    .text:0000000000000210 .L0 
     /tmp/ccZQgnQf.s:443    .text:0000000000000214 .L0 
     /tmp/ccZQgnQf.s:449    .text:0000000000000214 _ZN5Riscv15handleTimerTrapEv
     /tmp/ccZQgnQf.s:452    .text:0000000000000214 .L0 
     /tmp/ccZQgnQf.s:453    .text:0000000000000214 .L0 
     /tmp/ccZQgnQf.s:454    .text:0000000000000218 .L0 
     /tmp/ccZQgnQf.s:457    .text:0000000000000220 .L0 
     /tmp/ccZQgnQf.s:458    .text:0000000000000220 .L0 
     /tmp/ccZQgnQf.s:460    .text:0000000000000224 .L0 
     /tmp/ccZQgnQf.s:463    .text:0000000000000224 .L0 
     /tmp/ccZQgnQf.s:464    .text:0000000000000224 .L0 
     /tmp/ccZQgnQf.s:465    .text:0000000000000224 .L0 
     /tmp/ccZQgnQf.s:469    .text:0000000000000234 .L0 
     /tmp/ccZQgnQf.s:478    .text:000000000000023c .L0 
     /tmp/ccZQgnQf.s:479    .text:000000000000023c .L0 
     /tmp/ccZQgnQf.s:486    .text:0000000000000248 .L0 
     /tmp/ccZQgnQf.s:489    .text:000000000000024c .L0 
     /tmp/ccZQgnQf.s:490    .text:000000000000024c .L0 
     /tmp/ccZQgnQf.s:494    .text:000000000000025c .L0 
     /tmp/ccZQgnQf.s:497    .text:0000000000000268 .L0 
     /tmp/ccZQgnQf.s:500    .text:000000000000026c .L0 
GAS LISTING /tmp/ccZQgnQf.s 			page 29


     /tmp/ccZQgnQf.s:506    .text:0000000000000270 .L0 
     /tmp/ccZQgnQf.s:507    .text:0000000000000270 .L0 
     /tmp/ccZQgnQf.s:508    .text:0000000000000270 .L0 
     /tmp/ccZQgnQf.s:518    .text:0000000000000278 .L0 
     /tmp/ccZQgnQf.s:519    .text:0000000000000278 .L0 
     /tmp/ccZQgnQf.s:524    .text:0000000000000284 .L0 
     /tmp/ccZQgnQf.s:525    .text:0000000000000284 .L0 
     /tmp/ccZQgnQf.s:530    .text:0000000000000298 .L0 
     /tmp/ccZQgnQf.s:531    .text:0000000000000298 .L0 
     /tmp/ccZQgnQf.s:538    .text:00000000000002a4 .L0 
     /tmp/ccZQgnQf.s:539    .text:00000000000002a4 .L0 
     /tmp/ccZQgnQf.s:544    .text:00000000000002a8 .L0 
     /tmp/ccZQgnQf.s:547    .text:00000000000002ac .L0 
     /tmp/ccZQgnQf.s:548    .text:00000000000002b0 .L0 
     /tmp/ccZQgnQf.s:549    .text:00000000000002b0 .L0 
     /tmp/ccZQgnQf.s:551    .text:00000000000002b4 .L0 
     /tmp/ccZQgnQf.s:552    .text:00000000000002b4 .L0 
     /tmp/ccZQgnQf.s:554    .text:00000000000002b8 .L0 
     /tmp/ccZQgnQf.s:558    .text:00000000000002bc .L0 
     /tmp/ccZQgnQf.s:563    .text:00000000000002bc .L0 
     /tmp/ccZQgnQf.s:564    .text:00000000000002bc .L0 
     /tmp/ccZQgnQf.s:565    .text:00000000000002bc .L0 
     /tmp/ccZQgnQf.s:570    .text:00000000000002c0 .L0 
     /tmp/ccZQgnQf.s:571    .text:00000000000002c0 .L0 
     /tmp/ccZQgnQf.s:576    .text:00000000000002c8 .L0 
     /tmp/ccZQgnQf.s:577    .text:00000000000002c8 .L0 
     /tmp/ccZQgnQf.s:578    .text:00000000000002c8 .L0 
     /tmp/ccZQgnQf.s:581    .text:00000000000002d0 .L0 
     /tmp/ccZQgnQf.s:583    .text:00000000000002d4 .L0 
     /tmp/ccZQgnQf.s:586    .text:00000000000002dc .L0 
     /tmp/ccZQgnQf.s:589    .text:00000000000002e0 .L0 
     /tmp/ccZQgnQf.s:590    .text:00000000000002e0 .L0 
     /tmp/ccZQgnQf.s:595    .text:00000000000002e8 .L0 
     /tmp/ccZQgnQf.s:596    .text:00000000000002e8 .L0 
     /tmp/ccZQgnQf.s:597    .text:00000000000002e8 .L0 
     /tmp/ccZQgnQf.s:602    .text:00000000000002ec .L0 
     /tmp/ccZQgnQf.s:608    .text:00000000000002f4 .L0 
     /tmp/ccZQgnQf.s:609    .text:00000000000002f4 .L0 
     /tmp/ccZQgnQf.s:621    .text:0000000000000300 .L0 
     /tmp/ccZQgnQf.s:622    .text:0000000000000300 .L0 
     /tmp/ccZQgnQf.s:628    .text:000000000000030c .L0 
     /tmp/ccZQgnQf.s:633    .text:0000000000000310 .L0 
     /tmp/ccZQgnQf.s:639    .text:000000000000031c .L0 
     /tmp/ccZQgnQf.s:644    .text:0000000000000320 .L0 
     /tmp/ccZQgnQf.s:650    .text:000000000000032c .L0 
     /tmp/ccZQgnQf.s:655    .text:0000000000000330 .L0 
     /tmp/ccZQgnQf.s:656    .text:0000000000000330 .L0 
     /tmp/ccZQgnQf.s:662    .text:000000000000033c .L0 
     /tmp/ccZQgnQf.s:663    .text:000000000000033c .L0 
     /tmp/ccZQgnQf.s:664    .text:000000000000033c .L0 
     /tmp/ccZQgnQf.s:670    .text:0000000000000344 .L0 
     /tmp/ccZQgnQf.s:671    .text:0000000000000344 .L0 
     /tmp/ccZQgnQf.s:674    .text:000000000000034c .L0 
     /tmp/ccZQgnQf.s:675    .text:0000000000000350 .L0 
     /tmp/ccZQgnQf.s:681    .text:0000000000000350 _ZN5Riscv17handleConsoleTrapEv
     /tmp/ccZQgnQf.s:684    .text:0000000000000350 .L0 
     /tmp/ccZQgnQf.s:685    .text:0000000000000350 .L0 
GAS LISTING /tmp/ccZQgnQf.s 			page 30


     /tmp/ccZQgnQf.s:686    .text:0000000000000354 .L0 
     /tmp/ccZQgnQf.s:689    .text:000000000000035c .L0 
     /tmp/ccZQgnQf.s:690    .text:000000000000035c .L0 
     /tmp/ccZQgnQf.s:692    .text:0000000000000360 .L0 
     /tmp/ccZQgnQf.s:695    .text:0000000000000360 .L0 
     /tmp/ccZQgnQf.s:696    .text:0000000000000360 .L0 
     /tmp/ccZQgnQf.s:699    .text:0000000000000368 .L0 
     /tmp/ccZQgnQf.s:704    .text:0000000000000370 .L0 
     /tmp/ccZQgnQf.s:705    .text:0000000000000374 .L0 
     /tmp/ccZQgnQf.s:706    .text:0000000000000374 .L0 
     /tmp/ccZQgnQf.s:708    .text:0000000000000378 .L0 
     /tmp/ccZQgnQf.s:709    .text:0000000000000378 .L0 
     /tmp/ccZQgnQf.s:711    .text:000000000000037c .L0 
     /tmp/ccZQgnQf.s:714    .text:0000000000000380 .L0 
     /tmp/ccZQgnQf.s:718    .text:0000000000000380 .L0 
     /tmp/ccZQgnQf.s:719    .text:0000000000000380 .L0 
     /tmp/ccZQgnQf.s:720    .text:0000000000000380 .L0 
     /tmp/ccZQgnQf.s:724    .text:0000000000000390 .L0 
     /tmp/ccZQgnQf.s:728    .text:0000000000000398 .L0 
     /tmp/ccZQgnQf.s:729    .text:0000000000000398 .L0 
     /tmp/ccZQgnQf.s:733    .text:00000000000003a8 .L0 
     /tmp/ccZQgnQf.s:735    .text:00000000000003ac .L0 
     /tmp/ccZQgnQf.s:736    .text:00000000000003ac .L0 
     /tmp/ccZQgnQf.s:743    .text:00000000000003c4 .L0 
     /tmp/ccZQgnQf.s:746    .text:00000000000003c8 .L0 
     /tmp/ccZQgnQf.s:747    .text:00000000000003c8 .L0 
     /tmp/ccZQgnQf.s:753    .text:00000000000003d4 .L0 
     /tmp/ccZQgnQf.s:754    .text:00000000000003d8 .L0 
     /tmp/ccZQgnQf.s:760    .text:00000000000003d8 _ZN5Riscv10popSppSpieEv
     /tmp/ccZQgnQf.s:763    .text:00000000000003d8 .L0 
     /tmp/ccZQgnQf.s:764    .text:00000000000003d8 .L0 
     /tmp/ccZQgnQf.s:765    .text:00000000000003dc .L0 
     /tmp/ccZQgnQf.s:767    .text:00000000000003e0 .L0 
     /tmp/ccZQgnQf.s:769    .text:00000000000003e4 .L0 
     /tmp/ccZQgnQf.s:774    .text:00000000000003e4 .L0 
     /tmp/ccZQgnQf.s:775    .text:00000000000003e4 .L0 
     /tmp/ccZQgnQf.s:776    .text:00000000000003e4 .L0 
     /tmp/ccZQgnQf.s:786    .text:00000000000003ec .L0 
       src/riscv.cpp:125    .text:00000000000003ec .L0 
     /tmp/ccZQgnQf.s:792    .text:00000000000003f0 .L0 
       src/riscv.cpp:126    .text:00000000000003f0 .L0 
     /tmp/ccZQgnQf.s:798    .text:00000000000003f4 .L0 
     /tmp/ccZQgnQf.s:799    .text:00000000000003f8 .L0 
     /tmp/ccZQgnQf.s:800    .text:00000000000003f8 .L0 
     /tmp/ccZQgnQf.s:802    .text:00000000000003fc .L0 
     /tmp/ccZQgnQf.s:804    .text:0000000000000400 .L0 
     /tmp/ccZQgnQf.s:810    .text:0000000000000400 _ZN5Riscv14handleReadTrapEv
     /tmp/ccZQgnQf.s:813    .text:0000000000000400 .L0 
     /tmp/ccZQgnQf.s:814    .text:0000000000000400 .L0 
     /tmp/ccZQgnQf.s:815    .text:0000000000000404 .L0 
     /tmp/ccZQgnQf.s:817    .text:0000000000000408 .L0 
     /tmp/ccZQgnQf.s:819    .text:000000000000040c .L0 
     /tmp/ccZQgnQf.s:821    .text:000000000000040c .L0 
     /tmp/ccZQgnQf.s:824    .text:0000000000000418 .L0 
     /tmp/ccZQgnQf.s:827    .text:0000000000000420 .L0 
     /tmp/ccZQgnQf.s:828    .text:0000000000000420 .L0 
     /tmp/ccZQgnQf.s:831    .text:0000000000000428 .L0 
GAS LISTING /tmp/ccZQgnQf.s 			page 31


     /tmp/ccZQgnQf.s:832    .text:000000000000042c .L0 
     /tmp/ccZQgnQf.s:833    .text:000000000000042c .L0 
     /tmp/ccZQgnQf.s:835    .text:0000000000000430 .L0 
     /tmp/ccZQgnQf.s:837    .text:0000000000000434 .L0 
     /tmp/ccZQgnQf.s:843    .text:0000000000000434 _ZN5Riscv15handleWriteTrapEv
     /tmp/ccZQgnQf.s:846    .text:0000000000000434 .L0 
     /tmp/ccZQgnQf.s:847    .text:0000000000000434 .L0 
     /tmp/ccZQgnQf.s:848    .text:0000000000000438 .L0 
     /tmp/ccZQgnQf.s:850    .text:000000000000043c .L0 
     /tmp/ccZQgnQf.s:852    .text:0000000000000440 .L0 
     /tmp/ccZQgnQf.s:854    .text:0000000000000440 .L0 
     /tmp/ccZQgnQf.s:857    .text:000000000000044c .L0 
     /tmp/ccZQgnQf.s:860    .text:0000000000000454 .L0 
     /tmp/ccZQgnQf.s:861    .text:0000000000000454 .L0 
     /tmp/ccZQgnQf.s:864    .text:000000000000045c .L0 
     /tmp/ccZQgnQf.s:865    .text:0000000000000460 .L0 
     /tmp/ccZQgnQf.s:866    .text:0000000000000460 .L0 
     /tmp/ccZQgnQf.s:868    .text:0000000000000464 .L0 
     /tmp/ccZQgnQf.s:870    .text:0000000000000468 .L0 
     /tmp/ccZQgnQf.s:879    .text:0000000000000468 .L0 
     /tmp/ccZQgnQf.s:170    .rodata:0000000000000000 .L9
     /tmp/ccZQgnQf.s:162    .text:0000000000000098 .L0 
     /tmp/ccZQgnQf.s:75     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccZQgnQf.s:243    .text:00000000000000b0 .L0 
     /tmp/ccZQgnQf.s:465    .text:0000000000000224 .L0 
     /tmp/ccZQgnQf.s:479    .text:000000000000023c .L0 
     /tmp/ccZQgnQf.s:490    .text:000000000000024c .L0 
     /tmp/ccZQgnQf.s:494    .text:000000000000025c .L0 
     /tmp/ccZQgnQf.s:525    .text:0000000000000284 .L0 
     /tmp/ccZQgnQf.s:531    .text:0000000000000298 .L0 
     /tmp/ccZQgnQf.s:622    .text:0000000000000300 .L0 
     /tmp/ccZQgnQf.s:633    .text:0000000000000310 .L0 
     /tmp/ccZQgnQf.s:644    .text:0000000000000320 .L0 
     /tmp/ccZQgnQf.s:656    .text:0000000000000330 .L0 
     /tmp/ccZQgnQf.s:720    .text:0000000000000380 .L0 
     /tmp/ccZQgnQf.s:729    .text:0000000000000398 .L0 
     /tmp/ccZQgnQf.s:738    .text:00000000000003b4 .L0 
     /tmp/ccZQgnQf.s:821    .text:000000000000040c .L0 
     /tmp/ccZQgnQf.s:854    .text:0000000000000440 .L0 
     /tmp/ccZQgnQf.s:240    .text:00000000000000b0 .L28
     /tmp/ccZQgnQf.s:391    .text:00000000000001c8 .L5
     /tmp/ccZQgnQf.s:156    .text:000000000000008c .L6
     /tmp/ccZQgnQf.s:502    .text:0000000000000270 .L30
     /tmp/ccZQgnQf.s:461    .text:0000000000000224 .L31
     /tmp/ccZQgnQf.s:573    .text:00000000000002c8 .L32
     /tmp/ccZQgnQf.s:613    .text:0000000000000300 .L35
     /tmp/ccZQgnQf.s:522    .text:0000000000000284 .L33
     /tmp/ccZQgnQf.s:557    .text:00000000000002bc .L37
     /tmp/ccZQgnQf.s:651    .text:0000000000000330 .L39
     /tmp/ccZQgnQf.s:545    .text:00000000000002ac .L29
     /tmp/ccZQgnQf.s:713    .text:0000000000000380 .L44
     /tmp/ccZQgnQf.s:744    .text:00000000000003c8 .L43
     /tmp/ccZQgnQf.s:701    .text:0000000000000370 .L41
     /tmp/ccZQgnQf.s:252    .text:00000000000000cc .L26
     /tmp/ccZQgnQf.s:261    .text:00000000000000dc .L25
     /tmp/ccZQgnQf.s:270    .text:00000000000000ec .L24
     /tmp/ccZQgnQf.s:282    .text:0000000000000108 .L23
GAS LISTING /tmp/ccZQgnQf.s 			page 32


     /tmp/ccZQgnQf.s:290    .text:0000000000000114 .L22
     /tmp/ccZQgnQf.s:298    .text:0000000000000120 .L21
     /tmp/ccZQgnQf.s:307    .text:0000000000000130 .L20
     /tmp/ccZQgnQf.s:317    .text:0000000000000144 .L19
     /tmp/ccZQgnQf.s:325    .text:0000000000000150 .L18
     /tmp/ccZQgnQf.s:334    .text:0000000000000160 .L17
     /tmp/ccZQgnQf.s:344    .text:0000000000000174 .L16
     /tmp/ccZQgnQf.s:353    .text:0000000000000184 .L15
     /tmp/ccZQgnQf.s:362    .text:0000000000000194 .L14
     /tmp/ccZQgnQf.s:371    .text:00000000000001a4 .L13
     /tmp/ccZQgnQf.s:383    .text:00000000000001bc .L12
     /tmp/ccZQgnQf.s:417    .text:00000000000001ec .L11
     /tmp/ccZQgnQf.s:425    .text:00000000000001f8 .L10
     /tmp/ccZQgnQf.s:433    .text:0000000000000204 .L8
     /tmp/ccZQgnQf.s:3593   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccZQgnQf.s:5428   .debug_str:0000000000000da9 .LASF293
     /tmp/ccZQgnQf.s:5514   .debug_str:0000000000001125 .LASF294
     /tmp/ccZQgnQf.s:5126   .debug_str:000000000000053d .LASF295
     /tmp/ccZQgnQf.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccZQgnQf.s:873    .text:0000000000000468 .Letext0
     /tmp/ccZQgnQf.s:4952   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccZQgnQf.s:5164   .debug_str:0000000000000675 .LASF0
     /tmp/ccZQgnQf.s:5214   .debug_str:00000000000007c5 .LASF1
     /tmp/ccZQgnQf.s:5348   .debug_str:0000000000000b79 .LASF2
     /tmp/ccZQgnQf.s:5360   .debug_str:0000000000000bd1 .LASF4
     /tmp/ccZQgnQf.s:5182   .debug_str:00000000000006f9 .LASF3
     /tmp/ccZQgnQf.s:4976   .debug_str:00000000000000b9 .LASF5
     /tmp/ccZQgnQf.s:5316   .debug_str:0000000000000aa1 .LASF6
     /tmp/ccZQgnQf.s:5302   .debug_str:0000000000000a39 .LASF7
     /tmp/ccZQgnQf.s:5200   .debug_str:0000000000000774 .LASF8
     /tmp/ccZQgnQf.s:5122   .debug_str:0000000000000508 .LASF9
     /tmp/ccZQgnQf.s:5136   .debug_str:00000000000005a6 .LASF10
     /tmp/ccZQgnQf.s:5026   .debug_str:0000000000000206 .LASF11
     /tmp/ccZQgnQf.s:5102   .debug_str:0000000000000463 .LASF12
     /tmp/ccZQgnQf.s:5046   .debug_str:0000000000000286 .LASF13
     /tmp/ccZQgnQf.s:5024   .debug_str:00000000000001f6 .LASF14
     /tmp/ccZQgnQf.s:5402   .debug_str:0000000000000d1e .LASF15
     /tmp/ccZQgnQf.s:5082   .debug_str:00000000000003c4 .LASF16
     /tmp/ccZQgnQf.s:5384   .debug_str:0000000000000c99 .LASF17
     /tmp/ccZQgnQf.s:4972   .debug_str:0000000000000092 .LASF145
     /tmp/ccZQgnQf.s:5556   .debug_str:00000000000012be .LASF18
     /tmp/ccZQgnQf.s:5112   .debug_str:00000000000004c0 .LASF19
     /tmp/ccZQgnQf.s:5382   .debug_str:0000000000000c8b .LASF20
     /tmp/ccZQgnQf.s:5320   .debug_str:0000000000000abb .LASF21
     /tmp/ccZQgnQf.s:5056   .debug_str:00000000000002f8 .LASF22
     /tmp/ccZQgnQf.s:5356   .debug_str:0000000000000bac .LASF23
     /tmp/ccZQgnQf.s:5420   .debug_str:0000000000000d76 .LASF24
     /tmp/ccZQgnQf.s:5134   .debug_str:000000000000059a .LASF25
     /tmp/ccZQgnQf.s:4970   .debug_str:0000000000000086 .LASF26
     /tmp/ccZQgnQf.s:5030   .debug_str:000000000000021a .LASF27
     /tmp/ccZQgnQf.s:5036   .debug_str:000000000000023a .LASF28
     /tmp/ccZQgnQf.s:5272   .debug_str:0000000000000973 .LASF29
     /tmp/ccZQgnQf.s:5414   .debug_str:0000000000000d4f .LASF30
     /tmp/ccZQgnQf.s:5468   .debug_str:0000000000000fa4 .LASF31
     /tmp/ccZQgnQf.s:5526   .debug_str:000000000000119b .LASF32
     /tmp/ccZQgnQf.s:4956   .debug_str:000000000000000b .LASF33
     /tmp/ccZQgnQf.s:5190   .debug_str:000000000000072d .LASF34
GAS LISTING /tmp/ccZQgnQf.s 			page 33


     /tmp/ccZQgnQf.s:5266   .debug_str:000000000000094c .LASF35
     /tmp/ccZQgnQf.s:5492   .debug_str:0000000000001090 .LASF36
     /tmp/ccZQgnQf.s:5220   .debug_str:00000000000007f2 .LASF44
     /tmp/ccZQgnQf.s:4966   .debug_str:000000000000004c .LASF46
     /tmp/ccZQgnQf.s:5422   .debug_str:0000000000000d87 .LASF37
     /tmp/ccZQgnQf.s:5242   .debug_str:0000000000000885 .LASF39
     /tmp/ccZQgnQf.s:5380   .debug_str:0000000000000c7a .LASF38
     /tmp/ccZQgnQf.s:5434   .debug_str:0000000000000e84 .LASF40
     /tmp/ccZQgnQf.s:5274   .debug_str:000000000000097c .LASF41
     /tmp/ccZQgnQf.s:5138   .debug_str:00000000000005b4 .LASF42
     /tmp/ccZQgnQf.s:5204   .debug_str:0000000000000790 .LASF43
     /tmp/ccZQgnQf.s:5000   .debug_str:0000000000000177 .LASF129
     /tmp/ccZQgnQf.s:5278   .debug_str:000000000000098e .LASF131
     /tmp/ccZQgnQf.s:5448   .debug_str:0000000000000f25 .LASF45
     /tmp/ccZQgnQf.s:5490   .debug_str:000000000000107e .LASF47
     /tmp/ccZQgnQf.s:5304   .debug_str:0000000000000a4c .LASF48
     /tmp/ccZQgnQf.s:5544   .debug_str:0000000000001236 .LASF49
     /tmp/ccZQgnQf.s:5234   .debug_str:000000000000085a .LASF50
     /tmp/ccZQgnQf.s:5052   .debug_str:00000000000002bb .LASF51
     /tmp/ccZQgnQf.s:5218   .debug_str:00000000000007ec .LASF52
     /tmp/ccZQgnQf.s:5436   .debug_str:0000000000000ea0 .LASF53
     /tmp/ccZQgnQf.s:5248   .debug_str:00000000000008c9 .LASF54
     /tmp/ccZQgnQf.s:5444   .debug_str:0000000000000eea .LASF55
     /tmp/ccZQgnQf.s:5498   .debug_str:00000000000010b2 .LASF56
     /tmp/ccZQgnQf.s:5062   .debug_str:0000000000000320 .LASF57
     /tmp/ccZQgnQf.s:5546   .debug_str:000000000000124e .LASF58
     /tmp/ccZQgnQf.s:5132   .debug_str:000000000000058e .LASF59
     /tmp/ccZQgnQf.s:4964   .debug_str:000000000000003c .LASF60
     /tmp/ccZQgnQf.s:5286   .debug_str:00000000000009cd .LASF61
     /tmp/ccZQgnQf.s:5008   .debug_str:00000000000001a2 .LASF62
     /tmp/ccZQgnQf.s:5114   .debug_str:00000000000004c9 .LASF63
     /tmp/ccZQgnQf.s:5542   .debug_str:0000000000001223 .LASF64
     /tmp/ccZQgnQf.s:5350   .debug_str:0000000000000b87 .LASF65
     /tmp/ccZQgnQf.s:5250   .debug_str:00000000000008d8 .LASF66
     /tmp/ccZQgnQf.s:5404   .debug_str:0000000000000d2a .LASF67
     /tmp/ccZQgnQf.s:5450   .debug_str:0000000000000f2b .LASF68
     /tmp/ccZQgnQf.s:5482   .debug_str:000000000000101c .LASF70
     /tmp/ccZQgnQf.s:5518   .debug_str:000000000000114d .LASF69
     /tmp/ccZQgnQf.s:4994   .debug_str:000000000000012d .LASF71
     /tmp/ccZQgnQf.s:5312   .debug_str:0000000000000a8a .LASF72
     /tmp/ccZQgnQf.s:5054   .debug_str:00000000000002e0 .LASF73
     /tmp/ccZQgnQf.s:5240   .debug_str:000000000000087b .LASF74
     /tmp/ccZQgnQf.s:5532   .debug_str:00000000000011bf .LASF75
     /tmp/ccZQgnQf.s:5294   .debug_str:00000000000009f7 .LASF76
     /tmp/ccZQgnQf.s:5268   .debug_str:0000000000000951 .LASF77
     /tmp/ccZQgnQf.s:5022   .debug_str:00000000000001e8 .LASF78
     /tmp/ccZQgnQf.s:5162   .debug_str:000000000000066f .LASF79
     /tmp/ccZQgnQf.s:4978   .debug_str:00000000000000c0 .LASF80
     /tmp/ccZQgnQf.s:4990   .debug_str:000000000000011b .LASF81
     /tmp/ccZQgnQf.s:5366   .debug_str:0000000000000bf2 .LASF82
     /tmp/ccZQgnQf.s:5284   .debug_str:00000000000009c6 .LASF83
     /tmp/ccZQgnQf.s:5016   .debug_str:00000000000001ca .LASF84
     /tmp/ccZQgnQf.s:5246   .debug_str:00000000000008c2 .LASF85
     /tmp/ccZQgnQf.s:5100   .debug_str:0000000000000452 .LASF86
     /tmp/ccZQgnQf.s:5398   .debug_str:0000000000000cfc .LASF87
     /tmp/ccZQgnQf.s:5174   .debug_str:000000000000069e .LASF88
     /tmp/ccZQgnQf.s:4986   .debug_str:0000000000000104 .LASF89
GAS LISTING /tmp/ccZQgnQf.s 			page 34


     /tmp/ccZQgnQf.s:5080   .debug_str:00000000000003ab .LASF90
     /tmp/ccZQgnQf.s:5140   .debug_str:00000000000005ce .LASF91
     /tmp/ccZQgnQf.s:4996   .debug_str:0000000000000144 .LASF92
     /tmp/ccZQgnQf.s:5438   .debug_str:0000000000000eb0 .LASF93
     /tmp/ccZQgnQf.s:5178   .debug_str:00000000000006c2 .LASF94
     /tmp/ccZQgnQf.s:5184   .debug_str:000000000000070b .LASF95
     /tmp/ccZQgnQf.s:5516   .debug_str:0000000000001133 .LASF96
     /tmp/ccZQgnQf.s:5108   .debug_str:00000000000004ad .LASF97
     /tmp/ccZQgnQf.s:5424   .debug_str:0000000000000d94 .LASF98
     /tmp/ccZQgnQf.s:5470   .debug_str:0000000000000fb0 .LASF99
     /tmp/ccZQgnQf.s:5152   .debug_str:0000000000000627 .LASF100
     /tmp/ccZQgnQf.s:5536   .debug_str:00000000000011e8 .LASF101
     /tmp/ccZQgnQf.s:5066   .debug_str:000000000000033f .LASF102
     /tmp/ccZQgnQf.s:5454   .debug_str:0000000000000f43 .LASF103
     /tmp/ccZQgnQf.s:5488   .debug_str:0000000000001077 .LASF104
     /tmp/ccZQgnQf.s:5336   .debug_str:0000000000000b29 .LASF105
     /tmp/ccZQgnQf.s:5456   .debug_str:0000000000000f4b .LASF106
     /tmp/ccZQgnQf.s:5224   .debug_str:0000000000000807 .LASF107
     /tmp/ccZQgnQf.s:5412   .debug_str:0000000000000d4a .LASF108
     /tmp/ccZQgnQf.s:5520   .debug_str:0000000000001158 .LASF109
     /tmp/ccZQgnQf.s:5480   .debug_str:0000000000001004 .LASF110
     /tmp/ccZQgnQf.s:5040   .debug_str:000000000000025e .LASF111
     /tmp/ccZQgnQf.s:5368   .debug_str:0000000000000c02 .LASF112
     /tmp/ccZQgnQf.s:5150   .debug_str:000000000000061d .LASF113
     /tmp/ccZQgnQf.s:5522   .debug_str:0000000000001162 .LASF114
     /tmp/ccZQgnQf.s:5392   .debug_str:0000000000000cd6 .LASF115
     /tmp/ccZQgnQf.s:5500   .debug_str:00000000000010bc .LASF116
     /tmp/ccZQgnQf.s:5292   .debug_str:00000000000009f1 .LASF117
     /tmp/ccZQgnQf.s:5288   .debug_str:00000000000009da .LASF118
     /tmp/ccZQgnQf.s:5010   .debug_str:00000000000001b2 .LASF119
     /tmp/ccZQgnQf.s:5004   .debug_str:000000000000018f .LASF120
     /tmp/ccZQgnQf.s:5014   .debug_str:00000000000001be .LASF141
     /tmp/ccZQgnQf.s:5028   .debug_str:0000000000000215 .LASF121
     /tmp/ccZQgnQf.s:5212   .debug_str:00000000000007c0 .LASF122
     /tmp/ccZQgnQf.s:4954   .debug_str:0000000000000000 .LASF123
     /tmp/ccZQgnQf.s:5180   .debug_str:00000000000006dd .LASF124
     /tmp/ccZQgnQf.s:5176   .debug_str:00000000000006b8 .LASF125
     /tmp/ccZQgnQf.s:5074   .debug_str:0000000000000371 .LASF126
     /tmp/ccZQgnQf.s:5376   .debug_str:0000000000000c5d .LASF127
     /tmp/ccZQgnQf.s:5462   .debug_str:0000000000000f81 .LASF128
     /tmp/ccZQgnQf.s:5198   .debug_str:000000000000076a .LASF130
     /tmp/ccZQgnQf.s:5038   .debug_str:0000000000000244 .LASF132
     /tmp/ccZQgnQf.s:5264   .debug_str:0000000000000943 .LASF133
     /tmp/ccZQgnQf.s:5554   .debug_str:00000000000012a5 .LASF134
     /tmp/ccZQgnQf.s:5418   .debug_str:0000000000000d6d .LASF135
     /tmp/ccZQgnQf.s:5358   .debug_str:0000000000000bb8 .LASF136
     /tmp/ccZQgnQf.s:4988   .debug_str:0000000000000112 .LASF137
     /tmp/ccZQgnQf.s:5474   .debug_str:0000000000000fbe .LASF138
     /tmp/ccZQgnQf.s:5550   .debug_str:0000000000001278 .LASF254
     /tmp/ccZQgnQf.s:5226   .debug_str:000000000000080e .LASF255
     /tmp/ccZQgnQf.s:5228   .debug_str:0000000000000838 .LASF164
     /tmp/ccZQgnQf.s:5252   .debug_str:00000000000008f7 .LASF273
     /tmp/ccZQgnQf.s:5334   .debug_str:0000000000000b24 .LASF139
     /tmp/ccZQgnQf.s:5194   .debug_str:0000000000000754 .LASF140
     /tmp/ccZQgnQf.s:5408   .debug_str:0000000000000d3d .LASF142
     /tmp/ccZQgnQf.s:5504   .debug_str:00000000000010f5 .LASF143
     /tmp/ccZQgnQf.s:5476   .debug_str:0000000000000feb .LASF144
GAS LISTING /tmp/ccZQgnQf.s 			page 35


     /tmp/ccZQgnQf.s:5530   .debug_str:00000000000011b8 .LASF146
     /tmp/ccZQgnQf.s:5202   .debug_str:0000000000000787 .LASF147
     /tmp/ccZQgnQf.s:5310   .debug_str:0000000000000a82 .LASF148
     /tmp/ccZQgnQf.s:5032   .debug_str:0000000000000223 .LASF149
     /tmp/ccZQgnQf.s:5432   .debug_str:0000000000000e7d .LASF150
     /tmp/ccZQgnQf.s:5006   .debug_str:0000000000000199 .LASF151
     /tmp/ccZQgnQf.s:4960   .debug_str:0000000000000020 .LASF152
     /tmp/ccZQgnQf.s:5324   .debug_str:0000000000000ace .LASF153
     /tmp/ccZQgnQf.s:5124   .debug_str:0000000000000518 .LASF154
     /tmp/ccZQgnQf.s:5106   .debug_str:0000000000000487 .LASF155
     /tmp/ccZQgnQf.s:5460   .debug_str:0000000000000f5d .LASF173
     /tmp/ccZQgnQf.s:5210   .debug_str:00000000000007bb .LASF156
     /tmp/ccZQgnQf.s:5244   .debug_str:000000000000089d .LASF157
     /tmp/ccZQgnQf.s:5338   .debug_str:0000000000000b34 .LASF158
     /tmp/ccZQgnQf.s:5538   .debug_str:00000000000011ee .LASF159
     /tmp/ccZQgnQf.s:5458   .debug_str:0000000000000f55 .LASF160
     /tmp/ccZQgnQf.s:5370   .debug_str:0000000000000c1a .LASF161
     /tmp/ccZQgnQf.s:5044   .debug_str:000000000000027f .LASF162
     /tmp/ccZQgnQf.s:5552   .debug_str:000000000000127e .LASF163
     /tmp/ccZQgnQf.s:5142   .debug_str:00000000000005de .LASF165
     /tmp/ccZQgnQf.s:5098   .debug_str:000000000000044c .LASF166
     /tmp/ccZQgnQf.s:5394   .debug_str:0000000000000ce2 .LASF167
     /tmp/ccZQgnQf.s:5276   .debug_str:0000000000000989 .LASF168
     /tmp/ccZQgnQf.s:4958   .debug_str:0000000000000017 .LASF169
     /tmp/ccZQgnQf.s:5104   .debug_str:0000000000000472 .LASF170
     /tmp/ccZQgnQf.s:5282   .debug_str:00000000000009a5 .LASF171
     /tmp/ccZQgnQf.s:5502   .debug_str:00000000000010d5 .LASF172
     /tmp/ccZQgnQf.s:5128   .debug_str:000000000000055b .LASF174
     /tmp/ccZQgnQf.s:5340   .debug_str:0000000000000b3d .LASF175
     /tmp/ccZQgnQf.s:5484   .debug_str:0000000000001034 .LASF176
     /tmp/ccZQgnQf.s:5116   .debug_str:00000000000004d5 .LASF177
     /tmp/ccZQgnQf.s:5524   .debug_str:0000000000001178 .LASF178
     /tmp/ccZQgnQf.s:5094   .debug_str:0000000000000430 .LASF179
     /tmp/ccZQgnQf.s:5330   .debug_str:0000000000000afa .LASF183
     /tmp/ccZQgnQf.s:5206   .debug_str:00000000000007ab .LASF180
     /tmp/ccZQgnQf.s:5078   .debug_str:00000000000003a2 .LASF181
     /tmp/ccZQgnQf.s:5506   .debug_str:00000000000010fd .LASF182
     /tmp/ccZQgnQf.s:5090   .debug_str:000000000000040c .LASF184
     /tmp/ccZQgnQf.s:5452   .debug_str:0000000000000f37 .LASF185
     /tmp/ccZQgnQf.s:5426   .debug_str:0000000000000d9c .LASF186
     /tmp/ccZQgnQf.s:5156   .debug_str:0000000000000644 .LASF187
     /tmp/ccZQgnQf.s:5306   .debug_str:0000000000000a59 .LASF188
     /tmp/ccZQgnQf.s:5192   .debug_str:0000000000000732 .LASF189
     /tmp/ccZQgnQf.s:5430   .debug_str:0000000000000e6d .LASF190
     /tmp/ccZQgnQf.s:5486   .debug_str:000000000000105a .LASF191
     /tmp/ccZQgnQf.s:5290   .debug_str:00000000000009e2 .LASF192
     /tmp/ccZQgnQf.s:5442   .debug_str:0000000000000ece .LASF193
     /tmp/ccZQgnQf.s:5510   .debug_str:000000000000110d .LASF194
     /tmp/ccZQgnQf.s:5548   .debug_str:000000000000125b .LASF195
     /tmp/ccZQgnQf.s:5148   .debug_str:0000000000000612 .LASF196
     /tmp/ccZQgnQf.s:5160   .debug_str:0000000000000657 .LASF197
     /tmp/ccZQgnQf.s:5528   .debug_str:00000000000011a6 .LASF198
     /tmp/ccZQgnQf.s:5332   .debug_str:0000000000000b05 .LASF199
     /tmp/ccZQgnQf.s:5166   .debug_str:0000000000000682 .LASF200
     /tmp/ccZQgnQf.s:4968   .debug_str:0000000000000075 .LASF201
     /tmp/ccZQgnQf.s:5196   .debug_str:000000000000075a .LASF296
     /tmp/ccZQgnQf.s:5472   .debug_str:0000000000000fb5 .LASF202
GAS LISTING /tmp/ccZQgnQf.s 			page 36


     /tmp/ccZQgnQf.s:5092   .debug_str:000000000000041b .LASF203
     /tmp/ccZQgnQf.s:5344   .debug_str:0000000000000b65 .LASF204
     /tmp/ccZQgnQf.s:4984   .debug_str:00000000000000ef .LASF205
     /tmp/ccZQgnQf.s:5322   .debug_str:0000000000000ac7 .LASF206
     /tmp/ccZQgnQf.s:5326   .debug_str:0000000000000ad3 .LASF207
     /tmp/ccZQgnQf.s:5280   .debug_str:000000000000099e .LASF208
     /tmp/ccZQgnQf.s:5352   .debug_str:0000000000000b94 .LASF209
     /tmp/ccZQgnQf.s:5512   .debug_str:000000000000111d .LASF210
     /tmp/ccZQgnQf.s:5400   .debug_str:0000000000000d0a .LASF211
     /tmp/ccZQgnQf.s:5018   .debug_str:00000000000001db .LASF212
     /tmp/ccZQgnQf.s:5372   .debug_str:0000000000000c42 .LASF213
     /tmp/ccZQgnQf.s:5262   .debug_str:000000000000093b .LASF214
     /tmp/ccZQgnQf.s:5328   .debug_str:0000000000000ae6 .LASF215
     /tmp/ccZQgnQf.s:5388   .debug_str:0000000000000cc7 .LASF216
     /tmp/ccZQgnQf.s:5478   .debug_str:0000000000000ff0 .LASF217
     /tmp/ccZQgnQf.s:5208   .debug_str:00000000000007b4 .LASF218
     /tmp/ccZQgnQf.s:5362   .debug_str:0000000000000bd8 .LASF219
     /tmp/ccZQgnQf.s:5364   .debug_str:0000000000000beb .LASF220
     /tmp/ccZQgnQf.s:5130   .debug_str:000000000000057b .LASF221
     /tmp/ccZQgnQf.s:5072   .debug_str:000000000000036b .LASF222
     /tmp/ccZQgnQf.s:4982   .debug_str:00000000000000dd .LASF223
     /tmp/ccZQgnQf.s:5172   .debug_str:0000000000000698 .LASF224
     /tmp/ccZQgnQf.s:5058   .debug_str:0000000000000308 .LASF225
     /tmp/ccZQgnQf.s:5540   .debug_str:0000000000001218 .LASF226
     /tmp/ccZQgnQf.s:5386   .debug_str:0000000000000caf .LASF227
     /tmp/ccZQgnQf.s:5346   .debug_str:0000000000000b6e .LASF228
     /tmp/ccZQgnQf.s:5070   .debug_str:0000000000000353 .LASF229
     /tmp/ccZQgnQf.s:5086   .debug_str:00000000000003f4 .LASF230
     /tmp/ccZQgnQf.s:5042   .debug_str:0000000000000269 .LASF231
     /tmp/ccZQgnQf.s:5494   .debug_str:0000000000001099 .LASF232
     /tmp/ccZQgnQf.s:5256   .debug_str:0000000000000918 .LASF233
     /tmp/ccZQgnQf.s:5314   .debug_str:0000000000000a96 .LASF234
     /tmp/ccZQgnQf.s:4998   .debug_str:000000000000015f .LASF235
     /tmp/ccZQgnQf.s:5410   .debug_str:0000000000000d45 .LASF236
     /tmp/ccZQgnQf.s:5232   .debug_str:0000000000000851 .LASF237
     /tmp/ccZQgnQf.s:5378   .debug_str:0000000000000c66 .LASF238
     /tmp/ccZQgnQf.s:5416   .debug_str:0000000000000d5a .LASF239
     /tmp/ccZQgnQf.s:5318   .debug_str:0000000000000aa8 .LASF240
     /tmp/ccZQgnQf.s:4974   .debug_str:00000000000000a0 .LASF241
     /tmp/ccZQgnQf.s:5374   .debug_str:0000000000000c56 .LASF242
     /tmp/ccZQgnQf.s:5064   .debug_str:0000000000000339 .LASF243
     /tmp/ccZQgnQf.s:5186   .debug_str:000000000000071a .LASF244
     /tmp/ccZQgnQf.s:5222   .debug_str:0000000000000801 .LASF245
     /tmp/ccZQgnQf.s:5440   .debug_str:0000000000000ebf .LASF246
     /tmp/ccZQgnQf.s:5060   .debug_str:000000000000031a .LASF247
     /tmp/ccZQgnQf.s:5496   .debug_str:00000000000010a3 .LASF248
     /tmp/ccZQgnQf.s:5260   .debug_str:0000000000000935 .LASF249
     /tmp/ccZQgnQf.s:5236   .debug_str:0000000000000869 .LASF250
     /tmp/ccZQgnQf.s:5508   .debug_str:0000000000001106 .LASF251
     /tmp/ccZQgnQf.s:5170   .debug_str:0000000000000693 .LASF252
     /tmp/ccZQgnQf.s:5216   .debug_str:00000000000007d8 .LASF253
     /tmp/ccZQgnQf.s:5296   .debug_str:0000000000000a03 .LASF256
     /tmp/ccZQgnQf.s:5048   .debug_str:0000000000000296 .LASF257
     /tmp/ccZQgnQf.s:5258   .debug_str:000000000000092e .LASF258
     /tmp/ccZQgnQf.s:5270   .debug_str:0000000000000969 .LASF259
     /tmp/ccZQgnQf.s:5158   .debug_str:0000000000000650 .LASF260
     /tmp/ccZQgnQf.s:5146   .debug_str:00000000000005f9 .LASF261
GAS LISTING /tmp/ccZQgnQf.s 			page 37


     /tmp/ccZQgnQf.s:4962   .debug_str:0000000000000035 .LASF262
     /tmp/ccZQgnQf.s:5308   .debug_str:0000000000000a6e .LASF263
     /tmp/ccZQgnQf.s:5342   .debug_str:0000000000000b5e .LASF264
     /tmp/ccZQgnQf.s:5254   .debug_str:0000000000000904 .LASF265
     /tmp/ccZQgnQf.s:5406   .debug_str:0000000000000d38 .LASF266
     /tmp/ccZQgnQf.s:5144   .debug_str:00000000000005e7 .LASF267
     /tmp/ccZQgnQf.s:5096   .debug_str:0000000000000436 .LASF268
     /tmp/ccZQgnQf.s:4992   .debug_str:0000000000000121 .LASF269
     /tmp/ccZQgnQf.s:5084   .debug_str:00000000000003da .LASF270
     /tmp/ccZQgnQf.s:5068   .debug_str:0000000000000346 .LASF271
     /tmp/ccZQgnQf.s:5446   .debug_str:0000000000000f06 .LASF272
     /tmp/ccZQgnQf.s:5120   .debug_str:00000000000004fe .LASF274
     /tmp/ccZQgnQf.s:5396   .debug_str:0000000000000ce7 .LASF275
     /tmp/ccZQgnQf.s:5154   .debug_str:000000000000062c .LASF297
     /tmp/ccZQgnQf.s:5534   .debug_str:00000000000011d4 .LASF298
     /tmp/ccZQgnQf.s:5298   .debug_str:0000000000000a18 .LASF276
     /tmp/ccZQgnQf.s:5076   .debug_str:000000000000038d .LASF277
     /tmp/ccZQgnQf.s:5002   .debug_str:000000000000017d .LASF278
     /tmp/ccZQgnQf.s:5088   .debug_str:00000000000003fe .LASF279
     /tmp/ccZQgnQf.s:5230   .debug_str:0000000000000844 .LASF280
     /tmp/ccZQgnQf.s:4980   .debug_str:00000000000000d0 .LASF281
     /tmp/ccZQgnQf.s:5110   .debug_str:00000000000004bb .LASF282
     /tmp/ccZQgnQf.s:844    .text:0000000000000434 .LFB56
     /tmp/ccZQgnQf.s:871    .text:0000000000000468 .LFE56
     /tmp/ccZQgnQf.s:811    .text:0000000000000400 .LFB55
     /tmp/ccZQgnQf.s:838    .text:0000000000000434 .LFE55
     /tmp/ccZQgnQf.s:761    .text:00000000000003d8 .LFB54
     /tmp/ccZQgnQf.s:805    .text:0000000000000400 .LFE54
     /tmp/ccZQgnQf.s:772    .text:00000000000003e4 .LBB75
     /tmp/ccZQgnQf.s:784    .text:00000000000003ec .LBE75
     /tmp/ccZQgnQf.s:4811   .debug_loc:0000000000000000 .LLST12
     /tmp/ccZQgnQf.s:682    .text:0000000000000350 .LFB53
     /tmp/ccZQgnQf.s:755    .text:00000000000003d8 .LFE53
     /tmp/ccZQgnQf.s:726    .text:0000000000000398 .LBB73
     /tmp/ccZQgnQf.s:741    .text:00000000000003c4 .LBE73
     /tmp/ccZQgnQf.s:740    .text:00000000000003c4 .LVL60
     /tmp/ccZQgnQf.s:697    .text:0000000000000368 .LVL59
     /tmp/ccZQgnQf.s:749    .text:00000000000003d4 .LVL61
     /tmp/ccZQgnQf.s:450    .text:0000000000000214 .LFB52
     /tmp/ccZQgnQf.s:676    .text:0000000000000350 .LFE52
     /tmp/ccZQgnQf.s:487    .text:000000000000024c .LBB49
     /tmp/ccZQgnQf.s:498    .text:000000000000026c .LBE49
     /tmp/ccZQgnQf.s:4820   .debug_loc:0000000000000026 .LLST5
     /tmp/ccZQgnQf.s:492    .text:000000000000025c .LVL36
     /tmp/ccZQgnQf.s:4942   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccZQgnQf.s:4827   .debug_loc:0000000000000049 .LLST8
     /tmp/ccZQgnQf.s:561    .text:00000000000002bc .LBB55
     /tmp/ccZQgnQf.s:568    .text:00000000000002c0 .LBE55
     /tmp/ccZQgnQf.s:4838   .debug_loc:000000000000007f .LLST9
     /tmp/ccZQgnQf.s:593    .text:00000000000002e8 .LBB57
     /tmp/ccZQgnQf.s:600    .text:00000000000002ec .LBE57
     /tmp/ccZQgnQf.s:4845   .debug_loc:00000000000000a2 .LLST10
     /tmp/ccZQgnQf.s:572    .text:00000000000002c8 .LVL44
     /tmp/ccZQgnQf.s:591    .text:00000000000002e8 .LVL47
     /tmp/ccZQgnQf.s:474    .text:000000000000023c .LBB46
     /tmp/ccZQgnQf.s:484    .text:0000000000000248 .LBE46
     /tmp/ccZQgnQf.s:475    .text:000000000000023c .LBB47
GAS LISTING /tmp/ccZQgnQf.s 			page 38


     /tmp/ccZQgnQf.s:483    .text:0000000000000248 .LBE47
     /tmp/ccZQgnQf.s:504    .text:0000000000000270 .LBB50
     /tmp/ccZQgnQf.s:516    .text:0000000000000278 .LBE50
     /tmp/ccZQgnQf.s:4852   .debug_loc:00000000000000c5 .LLST6
     /tmp/ccZQgnQf.s:534    .text:00000000000002a4 .LBB52
     /tmp/ccZQgnQf.s:542    .text:00000000000002a8 .LBE52
     /tmp/ccZQgnQf.s:4860   .debug_loc:00000000000000e9 .LLST7
     /tmp/ccZQgnQf.s:615    .text:0000000000000300 .LBB61
     /tmp/ccZQgnQf.s:653    .text:0000000000000330 .LBE61
     /tmp/ccZQgnQf.s:619    .text:0000000000000300 .LBB63
     /tmp/ccZQgnQf.s:626    .text:000000000000030c .LBE63
     /tmp/ccZQgnQf.s:630    .text:0000000000000310 .LBB65
     /tmp/ccZQgnQf.s:637    .text:000000000000031c .LBE65
     /tmp/ccZQgnQf.s:641    .text:0000000000000320 .LBB67
     /tmp/ccZQgnQf.s:648    .text:000000000000032c .LBE67
     /tmp/ccZQgnQf.s:660    .text:000000000000033c .LBB69
     /tmp/ccZQgnQf.s:668    .text:0000000000000344 .LBE69
     /tmp/ccZQgnQf.s:4867   .debug_loc:000000000000010c .LLST11
     /tmp/ccZQgnQf.s:520    .text:0000000000000280 .LVL39
     /tmp/ccZQgnQf.s:579    .text:00000000000002d0 .LVL45
     /tmp/ccZQgnQf.s:584    .text:00000000000002dc .LVL46
     /tmp/ccZQgnQf.s:672    .text:000000000000034c .LVL58
     /tmp/ccZQgnQf.s:82     .text:0000000000000040 .LFB51
     /tmp/ccZQgnQf.s:444    .text:0000000000000214 .LFE51
     /tmp/ccZQgnQf.s:5118   .debug_str:00000000000004f9 .LASF283
     /tmp/ccZQgnQf.s:4874   .debug_loc:000000000000012f .LLST0
     /tmp/ccZQgnQf.s:5020   .debug_str:00000000000001e3 .LASF284
     /tmp/ccZQgnQf.s:4885   .debug_loc:0000000000000165 .LLST1
     /tmp/ccZQgnQf.s:5188   .debug_str:0000000000000728 .LASF285
     /tmp/ccZQgnQf.s:4896   .debug_loc:000000000000019b .LLST2
     /tmp/ccZQgnQf.s:5464   .debug_str:0000000000000f9a .LASF286
     /tmp/ccZQgnQf.s:4907   .debug_loc:00000000000001d1 .LLST3
     /tmp/ccZQgnQf.s:5466   .debug_str:0000000000000f9f .LASF287
     /tmp/ccZQgnQf.s:4918   .debug_loc:0000000000000207 .LLST4
     /tmp/ccZQgnQf.s:137    .text:0000000000000078 .LBB44
     /tmp/ccZQgnQf.s:152    .text:0000000000000084 .LBE44
     /tmp/ccZQgnQf.s:245    .text:00000000000000c0 .LVL7
     /tmp/ccZQgnQf.s:249    .text:00000000000000c8 .LVL8
     /tmp/ccZQgnQf.s:258    .text:00000000000000d8 .LVL10
     /tmp/ccZQgnQf.s:267    .text:00000000000000e8 .LVL11
     /tmp/ccZQgnQf.s:279    .text:0000000000000104 .LVL12
     /tmp/ccZQgnQf.s:287    .text:0000000000000110 .LVL13
     /tmp/ccZQgnQf.s:295    .text:000000000000011c .LVL14
     /tmp/ccZQgnQf.s:304    .text:000000000000012c .LVL15
     /tmp/ccZQgnQf.s:314    .text:0000000000000140 .LVL16
     /tmp/ccZQgnQf.s:322    .text:000000000000014c .LVL17
     /tmp/ccZQgnQf.s:331    .text:000000000000015c .LVL18
     /tmp/ccZQgnQf.s:341    .text:0000000000000170 .LVL19
     /tmp/ccZQgnQf.s:350    .text:0000000000000180 .LVL20
     /tmp/ccZQgnQf.s:359    .text:0000000000000190 .LVL21
     /tmp/ccZQgnQf.s:368    .text:00000000000001a0 .LVL22
     /tmp/ccZQgnQf.s:377    .text:00000000000001b0 .LVL23
     /tmp/ccZQgnQf.s:382    .text:00000000000001bc .LVL24
     /tmp/ccZQgnQf.s:389    .text:00000000000001c8 .LVL25
     /tmp/ccZQgnQf.s:424    .text:00000000000001f8 .LVL31
     /tmp/ccZQgnQf.s:430    .text:0000000000000200 .LVL32
     /tmp/ccZQgnQf.s:439    .text:0000000000000210 .LVL33
GAS LISTING /tmp/ccZQgnQf.s 			page 39


     /tmp/ccZQgnQf.s:5050   .debug_str:00000000000002b3 .LASF299
     /tmp/ccZQgnQf.s:36     .text:000000000000001c .LFB50
     /tmp/ccZQgnQf.s:71     .text:0000000000000040 .LFE50
     /tmp/ccZQgnQf.s:46     .text:0000000000000028 .LBB42
     /tmp/ccZQgnQf.s:62     .text:0000000000000034 .LBE42
     /tmp/ccZQgnQf.s:5300   .debug_str:0000000000000a31 .LASF300
     /tmp/ccZQgnQf.s:10     .text:0000000000000000 .LFB49
     /tmp/ccZQgnQf.s:30     .text:000000000000001c .LFE49
     /tmp/ccZQgnQf.s:5354   .debug_str:0000000000000ba7 .LASF288
     /tmp/ccZQgnQf.s:5390   .debug_str:0000000000000ccf .LASF301
     /tmp/ccZQgnQf.s:5238   .debug_str:0000000000000870 .LASF289
     /tmp/ccZQgnQf.s:5034   .debug_str:000000000000022c .LASF290
     /tmp/ccZQgnQf.s:5168   .debug_str:0000000000000687 .LASF291
     /tmp/ccZQgnQf.s:5012   .debug_str:00000000000001b8 .LASF292
     /tmp/ccZQgnQf.s:771    .text:00000000000003e4 .LVL62
     /tmp/ccZQgnQf.s:781    .text:00000000000003ec .LVL63
     /tmp/ccZQgnQf.s:501    .text:0000000000000270 .LVL37
     /tmp/ccZQgnQf.s:556    .text:00000000000002bc .LVL42
     /tmp/ccZQgnQf.s:612    .text:0000000000000300 .LVL50
     /tmp/ccZQgnQf.s:566    .text:00000000000002c0 .LVL43
     /tmp/ccZQgnQf.s:598    .text:00000000000002ec .LVL48
     /tmp/ccZQgnQf.s:513    .text:0000000000000278 .LVL38
     /tmp/ccZQgnQf.s:533    .text:00000000000002a4 .LVL40
     /tmp/ccZQgnQf.s:540    .text:00000000000002a8 .LVL41
     /tmp/ccZQgnQf.s:659    .text:000000000000033c .LVL56
     /tmp/ccZQgnQf.s:666    .text:0000000000000344 .LVL57
     /tmp/ccZQgnQf.s:110    .text:0000000000000068 .LVL0
     /tmp/ccZQgnQf.s:161    .text:0000000000000098 .LVL5
     /tmp/ccZQgnQf.s:239    .text:00000000000000b0 .LVL6
     /tmp/ccZQgnQf.s:251    .text:00000000000000cc .LVL9
     /tmp/ccZQgnQf.s:116    .text:000000000000006c .LVL1
     /tmp/ccZQgnQf.s:403    .text:00000000000001d8 .LVL26
     /tmp/ccZQgnQf.s:416    .text:00000000000001ec .LVL30
     /tmp/ccZQgnQf.s:122    .text:0000000000000070 .LVL2
     /tmp/ccZQgnQf.s:406    .text:00000000000001dc .LVL27
     /tmp/ccZQgnQf.s:128    .text:0000000000000074 .LVL3
     /tmp/ccZQgnQf.s:409    .text:00000000000001e0 .LVL28
     /tmp/ccZQgnQf.s:134    .text:0000000000000078 .LVL4
     /tmp/ccZQgnQf.s:412    .text:00000000000001e4 .LVL29
     /tmp/ccZQgnQf.s:880    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccZQgnQf.s:559    .text:00000000000002bc .LBB54
     /tmp/ccZQgnQf.s:574    .text:00000000000002c8 .LBE54
     /tmp/ccZQgnQf.s:587    .text:00000000000002e0 .LBB59
     /tmp/ccZQgnQf.s:605    .text:00000000000002f4 .LBE59
     /tmp/ccZQgnQf.s:607    .text:00000000000002f4 .LBB60
     /tmp/ccZQgnQf.s:614    .text:0000000000000300 .LBE60

UNDEFINED SYMBOLS
_Z5printPKc
_ZN3TCB12_thread_exitEv
_ZN9Allocator10_mem_allocEm
_ZN9Allocator9_mem_freeEPKv
_ZN3TCB14_thread_createEPPS_PFvPvES2_S2_
_ZN3TCB16_thread_dispatchEv
_ZN3TCB12_thread_joinEPS_
_ZN3TCB12_thread_joinEPS_m
_ZN3TCB5_forkEv
GAS LISTING /tmp/ccZQgnQf.s 			page 40


_ZN3TCB5_killEPS_
_ZN3Sem9_sem_openEPPS_j
_ZN3Sem10_sem_closeEPS_
_ZN3Sem9_sem_waitEPS_
_ZN3Sem11_sem_signalEPS_
_ZN6Cradle11_time_sleepEm
_ZN6Cradle12_thread_wakeEP3TCB
_ZN2IO5_getcEv
_ZN2IO5_putcEc
CONSOLE_STATUS
_ZN2IO6OutputE
_ZN8IOBuffer3getEv
CONSOLE_TX_DATA
_ZN6Cradle6updateEv
_ZN3TCB13timer_counterE
_ZN3TCB7runningE
_ZN9Scheduler3putEP3TCB
_ZN6Cradle8is_emptyEv
_ZN6Cradle4peakEv
_ZN6Cradle6removeEv
_ZN9Scheduler13high_priorityE
_ZN9Scheduler12mid_priorityE
_ZN9Scheduler12low_priorityE
plic_claim
CONSOLE_RX_DATA
_ZN2IO5InputE
_ZN8IOBuffer3putEc
plic_complete
