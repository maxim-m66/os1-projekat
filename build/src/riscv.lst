GAS LISTING /tmp/ccSROz0M.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 0A496C6C 		.string	"\nIllegal Instruction\n"
   9      6567616C 
   9      20496E73 
   9      74727563 
   9      74696F6E 
  10              		.text
  11              		.align	2
  12              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  14              	_ZN5Riscv20handleSupervisorTrapEv:
  15              	.LFB45:
  16              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../lib/hw.h"
   2:src/riscv.cpp **** #include "../h/c_thread.hpp"
   3:src/riscv.cpp **** #include "../h/c_semaphore.hpp"
   4:src/riscv.cpp **** #include "../h/riscv.hpp"
   5:src/riscv.cpp **** #include "../h/c_console.hpp"
   6:src/riscv.cpp **** #include "../h/c_sleep.hpp"
   7:src/riscv.cpp **** #include "../h/scheduler.hpp"
   8:src/riscv.cpp **** 
   9:src/riscv.cpp **** __attribute__((unused))
  10:src/riscv.cpp **** void Riscv::handleSupervisorTrap() {
  17              		.loc 1 10 36
  18              		.cfi_startproc
  19 0000 130101F9 		addi	sp,sp,-112
  20              		.cfi_def_cfa_offset 112
  21 0004 23341106 		sd	ra,104(sp)
  22 0008 23308106 		sd	s0,96(sp)
  23 000c 233C9104 		sd	s1,88(sp)
  24 0010 23382105 		sd	s2,80(sp)
  25 0014 23343105 		sd	s3,72(sp)
  26 0018 23304105 		sd	s4,64(sp)
  27 001c 233C5103 		sd	s5,56(sp)
  28 0020 23386103 		sd	s6,48(sp)
  29 0024 23347103 		sd	s7,40(sp)
  30              		.cfi_offset 1, -8
  31              		.cfi_offset 8, -16
  32              		.cfi_offset 9, -24
  33              		.cfi_offset 18, -32
  34              		.cfi_offset 19, -40
  35              		.cfi_offset 20, -48
  36              		.cfi_offset 21, -56
  37              		.cfi_offset 22, -64
  38              		.cfi_offset 23, -72
  39 0028 13040107 		addi	s0,sp,112
  40              		.cfi_def_cfa 8, 0
  11:src/riscv.cpp ****     uint64 code, arg1, arg2, arg3, arg4, sstatus, sepc;
  41              		.loc 1 11 5
  12:src/riscv.cpp ****     __asm__ volatile("mv %[code], a0" : [code] "=r"(code));
  42              		.loc 1 12 5
GAS LISTING /tmp/ccSROz0M.s 			page 2


  43              		.loc 1 12 59 is_stmt 0
  44              	#APP
  45              	# 12 "src/riscv.cpp" 1
  13              	    __asm__ volatile("mv %[arg1], a1" : [arg1] "=r"(arg1));
  46              		mv s1, a0
  47              	# 0 "" 2
  48              	.LVL0:
  49              		.loc 1 13 5 is_stmt 1
  50              		.loc 1 13 59 is_stmt 0
  51              	# 13 "src/riscv.cpp" 1
  14              	    __asm__ volatile("mv %[arg2], a2" : [arg2] "=r"(arg2));
  52              		mv s4, a1
  53              	# 0 "" 2
  54              	.LVL1:
  55              		.loc 1 14 5 is_stmt 1
  56              		.loc 1 14 59 is_stmt 0
  57              	# 14 "src/riscv.cpp" 1
  15              	    __asm__ volatile("mv %[arg3], a3" : [arg3] "=r"(arg3));
  58              		mv s5, a2
  59              	# 0 "" 2
  60              	.LVL2:
  61              		.loc 1 15 5 is_stmt 1
  62              		.loc 1 15 59 is_stmt 0
  63              	# 15 "src/riscv.cpp" 1
  16              	    __asm__ volatile("mv %[arg4], a4" : [arg4] "=r"(arg4));
  64              		mv s6, a3
  65              	# 0 "" 2
  66              	.LVL3:
  67              		.loc 1 16 5 is_stmt 1
  68              		.loc 1 16 59 is_stmt 0
  69              	# 16 "src/riscv.cpp" 1
  17              	    sstatus = r_sstatus();
  70              		mv s7, a4
  71              	# 0 "" 2
  72              	.LVL4:
  73              		.loc 1 17 5 is_stmt 1
  74              	#NO_APP
  75              	.LBB48:
  76              	.LBB49:
  77              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_RISCV_HPP
   2:src/../h/riscv.hpp **** #define PROJECT_BASE_RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** extern "C" void supervisorTrap();
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** class Riscv {
   9:src/../h/riscv.hpp **** public:
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp ****     __attribute__((unused)) static void handleSupervisorTrap();
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp ****     static void handleTimerTrap();
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     static void handleReadTrap();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     static void handleWriteTrap();
GAS LISTING /tmp/ccSROz0M.s 			page 3


  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     static void popSppSpie();
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     static void handleConsoleTrap();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     static void push();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     static void pop();
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // read register scause
  28:src/../h/riscv.hpp ****     static uint64 r_scause();
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // write register scause
  31:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // read register sepc
  34:src/../h/riscv.hpp ****     static uint64 r_sepc();
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // write register sepc
  37:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     // read register stvec
  40:src/../h/riscv.hpp ****     static uint64 r_stvec();
  41:src/../h/riscv.hpp **** 
  42:src/../h/riscv.hpp ****     // write register stvec
  43:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // read register stval
  46:src/../h/riscv.hpp ****     static uint64 r_stval();
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // write register stval
  49:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     enum BitMaskSip {
  52:src/../h/riscv.hpp ****         SIP_SSIE = (1 << 1),
  53:src/../h/riscv.hpp ****         SIP_STIE = (1 << 5),
  54:src/../h/riscv.hpp ****         SIP_SEIE = (1 << 9),
  55:src/../h/riscv.hpp ****     };
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // mask set register sip
  58:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     // mask clear register sip
  61:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // read register sip
  64:src/../h/riscv.hpp ****     static uint64 r_sip();
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // write register sip
  67:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     enum BitMaskSstatus {
  70:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  71:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  72:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  73:src/../h/riscv.hpp ****     };
  74:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccSROz0M.s 			page 4


  75:src/../h/riscv.hpp ****     // mask set register sstatus
  76:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp ****     // mask clear register sstatus
  79:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp ****     // read register sstatus
  82:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     // write register sstatus
  85:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp ****     static uint64 r_sscratch();
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** private:
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp **** };
  92:src/../h/riscv.hpp **** 
  93:src/../h/riscv.hpp **** inline uint64 Riscv::r_sscratch() {
  94:src/../h/riscv.hpp ****     uint64 volatile sscratch;
  95:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(sscratch));
  96:src/../h/riscv.hpp ****     return sscratch;
  97:src/../h/riscv.hpp **** }
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
 100:src/../h/riscv.hpp ****     uint64 volatile scause;
 101:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 102:src/../h/riscv.hpp ****     return scause;
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 106:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 107:src/../h/riscv.hpp **** }
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
 110:src/../h/riscv.hpp ****     uint64 volatile sepc;
 111:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 112:src/../h/riscv.hpp ****     return sepc;
 113:src/../h/riscv.hpp **** }
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 116:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 117:src/../h/riscv.hpp **** }
 118:src/../h/riscv.hpp **** 
 119:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec() {
 120:src/../h/riscv.hpp ****     uint64 volatile stvec;
 121:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 122:src/../h/riscv.hpp ****     return stvec;
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 126:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval() {
 130:src/../h/riscv.hpp ****     uint64 volatile stval;
 131:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
GAS LISTING /tmp/ccSROz0M.s 			page 5


 132:src/../h/riscv.hpp ****     return stval;
 133:src/../h/riscv.hpp **** }
 134:src/../h/riscv.hpp **** 
 135:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 137:src/../h/riscv.hpp **** }
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 140:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 144:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip() {
 148:src/../h/riscv.hpp ****     uint64 volatile sip;
 149:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 150:src/../h/riscv.hpp ****     return sip;
 151:src/../h/riscv.hpp **** }
 152:src/../h/riscv.hpp **** 
 153:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 154:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 155:src/../h/riscv.hpp **** }
 156:src/../h/riscv.hpp **** 
 157:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 158:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 162:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 163:src/../h/riscv.hpp **** }
 164:src/../h/riscv.hpp **** 
 165:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 166:src/../h/riscv.hpp ****     uint64 volatile sstatus;
  78              		.loc 2 166 5
 167:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
  79              		.loc 2 167 5
  80              		.loc 2 167 76 is_stmt 0
  81              	#APP
  82              	# 167 "src/../h/riscv.hpp" 1
 168              	    return sstatus;
  83              		csrr a5, sstatus
  84              	# 0 "" 2
  85              	#NO_APP
  86 0044 2334F4FA 		sd	a5,-88(s0)
  87              		.loc 2 168 5 is_stmt 1
  88              		.loc 2 168 12 is_stmt 0
  89 0048 833984FA 		ld	s3,-88(s0)
  90              	.LVL5:
  91              	.LBE49:
  92              	.LBE48:
  18:src/riscv.cpp ****     sepc = r_sepc();
  93              		.loc 1 18 5 is_stmt 1
  94              	.LBB50:
  95              	.LBB51:
 110:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
GAS LISTING /tmp/ccSROz0M.s 			page 6


  96              		.loc 2 110 5
 111:src/../h/riscv.hpp ****     return sepc;
  97              		.loc 2 111 5
 111:src/../h/riscv.hpp ****     return sepc;
  98              		.loc 2 111 64 is_stmt 0
  99              	#APP
 100              	# 111 "src/../h/riscv.hpp" 1
 101              		csrr a5, sepc
 102              	# 0 "" 2
 103              	#NO_APP
 104 0050 2330F4FA 		sd	a5,-96(s0)
 112:src/../h/riscv.hpp **** }
 105              		.loc 2 112 5 is_stmt 1
 112:src/../h/riscv.hpp **** }
 106              		.loc 2 112 12 is_stmt 0
 107 0054 033904FA 		ld	s2,-96(s0)
 108              	.LVL6:
 109              	.LBE51:
 110              	.LBE50:
  19:src/riscv.cpp ****     if (r_scause() == 2) {
 111              		.loc 1 19 5 is_stmt 1
 112              	.LBB52:
 113              	.LBB53:
 100:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 114              		.loc 2 100 5
 101:src/../h/riscv.hpp ****     return scause;
 115              		.loc 2 101 5
 101:src/../h/riscv.hpp ****     return scause;
 116              		.loc 2 101 72 is_stmt 0
 117              	#APP
 118              	# 101 "src/../h/riscv.hpp" 1
 119              		csrr a5, scause
 120              	# 0 "" 2
 121              	#NO_APP
 122 005c 233CF4F8 		sd	a5,-104(s0)
 102:src/../h/riscv.hpp **** }
 123              		.loc 2 102 5 is_stmt 1
 102:src/../h/riscv.hpp **** }
 124              		.loc 2 102 12 is_stmt 0
 125 0060 033784F9 		ld	a4,-104(s0)
 126              	.LBE53:
 127              	.LBE52:
 128              		.loc 1 19 5
 129 0064 93072000 		li	a5,2
 130 0068 6304F702 		beq	a4,a5,.L24
 131              	.L2:
  20:src/riscv.cpp ****         print("\nIllegal Instruction\n");
  21:src/riscv.cpp ****         thread_exit();
  22:src/riscv.cpp ****     }
  23:src/riscv.cpp ****     switch (code) {
 132              		.loc 1 23 5 is_stmt 1
 133 006c 93072004 		li	a5,66
 134 0070 63E49704 		bgtu	s1,a5,.L3
 135 0074 93942400 		slli	s1,s1,2
 136              	.LVL7:
 137 0078 17070000 		lla	a4,.L5
 137      13070700 
GAS LISTING /tmp/ccSROz0M.s 			page 7


 138 0080 B384E400 		add	s1,s1,a4
 139 0084 83A70400 		lw	a5,0(s1)
 140 0088 B387E700 		add	a5,a5,a4
 141 008c 67800700 		jr	a5
 142              		.section	.rodata
 143              		.align	2
 144              		.align	2
 145              	.L5:
 146 0000 00000000 		.word	.L3-.L5
 147 0004 00000000 		.word	.L22-.L5
 148 0008 00000000 		.word	.L21-.L5
 149 000c 00000000 		.word	.L3-.L5
 150 0010 00000000 		.word	.L3-.L5
 151 0014 00000000 		.word	.L3-.L5
 152 0018 00000000 		.word	.L3-.L5
 153 001c 00000000 		.word	.L3-.L5
 154 0020 00000000 		.word	.L3-.L5
 155 0024 00000000 		.word	.L3-.L5
 156 0028 00000000 		.word	.L3-.L5
 157 002c 00000000 		.word	.L3-.L5
 158 0030 00000000 		.word	.L3-.L5
 159 0034 00000000 		.word	.L3-.L5
 160 0038 00000000 		.word	.L3-.L5
 161 003c 00000000 		.word	.L3-.L5
 162 0040 00000000 		.word	.L3-.L5
 163 0044 00000000 		.word	.L20-.L5
 164 0048 00000000 		.word	.L19-.L5
 165 004c 00000000 		.word	.L18-.L5
 166 0050 00000000 		.word	.L17-.L5
 167 0054 00000000 		.word	.L16-.L5
 168 0058 00000000 		.word	.L15-.L5
 169 005c 00000000 		.word	.L14-.L5
 170 0060 00000000 		.word	.L3-.L5
 171 0064 00000000 		.word	.L3-.L5
 172 0068 00000000 		.word	.L3-.L5
 173 006c 00000000 		.word	.L3-.L5
 174 0070 00000000 		.word	.L3-.L5
 175 0074 00000000 		.word	.L3-.L5
 176 0078 00000000 		.word	.L3-.L5
 177 007c 00000000 		.word	.L3-.L5
 178 0080 00000000 		.word	.L3-.L5
 179 0084 00000000 		.word	.L13-.L5
 180 0088 00000000 		.word	.L12-.L5
 181 008c 00000000 		.word	.L11-.L5
 182 0090 00000000 		.word	.L10-.L5
 183 0094 00000000 		.word	.L9-.L5
 184 0098 00000000 		.word	.L3-.L5
 185 009c 00000000 		.word	.L3-.L5
 186 00a0 00000000 		.word	.L3-.L5
 187 00a4 00000000 		.word	.L3-.L5
 188 00a8 00000000 		.word	.L3-.L5
 189 00ac 00000000 		.word	.L3-.L5
 190 00b0 00000000 		.word	.L3-.L5
 191 00b4 00000000 		.word	.L3-.L5
 192 00b8 00000000 		.word	.L3-.L5
 193 00bc 00000000 		.word	.L3-.L5
 194 00c0 00000000 		.word	.L3-.L5
GAS LISTING /tmp/ccSROz0M.s 			page 8


 195 00c4 00000000 		.word	.L8-.L5
 196 00c8 00000000 		.word	.L7-.L5
 197 00cc 00000000 		.word	.L3-.L5
 198 00d0 00000000 		.word	.L3-.L5
 199 00d4 00000000 		.word	.L3-.L5
 200 00d8 00000000 		.word	.L3-.L5
 201 00dc 00000000 		.word	.L3-.L5
 202 00e0 00000000 		.word	.L3-.L5
 203 00e4 00000000 		.word	.L3-.L5
 204 00e8 00000000 		.word	.L3-.L5
 205 00ec 00000000 		.word	.L3-.L5
 206 00f0 00000000 		.word	.L3-.L5
 207 00f4 00000000 		.word	.L3-.L5
 208 00f8 00000000 		.word	.L3-.L5
 209 00fc 00000000 		.word	.L3-.L5
 210 0100 00000000 		.word	.L3-.L5
 211 0104 00000000 		.word	.L6-.L5
 212 0108 00000000 		.word	.L4-.L5
 213              		.text
 214              	.LVL8:
 215              	.L24:
  20:src/riscv.cpp ****         print("\nIllegal Instruction\n");
 216              		.loc 1 20 9
  20:src/riscv.cpp ****         print("\nIllegal Instruction\n");
 217              		.loc 1 20 14 is_stmt 0
 218 0090 17050000 		lla	a0,.LC0
 218      13050500 
 219 0098 97000000 		call	_Z5printPKc@plt
 219      E7800000 
 220              	.LVL9:
  21:src/riscv.cpp ****     }
 221              		.loc 1 21 9 is_stmt 1
  21:src/riscv.cpp ****     }
 222              		.loc 1 21 20 is_stmt 0
 223 00a0 97000000 		call	_Z11thread_exitv@plt
 223      E7800000 
 224              	.LVL10:
 225 00a8 6FF05FFC 		j	.L2
 226              	.LVL11:
 227              	.L22:
  24:src/riscv.cpp ****         case MEM_ALLOC:
 228              		.loc 1 24 9 is_stmt 1
  25:src/riscv.cpp ****             Allocator::_mem_alloc((int) arg1);
 229              		.loc 1 25 13
 230              		.loc 1 25 34 is_stmt 0
 231 00ac 1B050A00 		sext.w	a0,s4
 232 00b0 97000000 		call	_ZN9Allocator10_mem_allocEm@plt
 232      E7800000 
 233              	.LVL12:
  26:src/riscv.cpp ****             break;
 234              		.loc 1 26 13 is_stmt 1
 235              	.L3:
  27:src/riscv.cpp ****         case MEM_FREE:
  28:src/riscv.cpp ****             Allocator::_mem_free((void *) arg1);
  29:src/riscv.cpp ****             break;
  30:src/riscv.cpp ****         case THREAD_CREATE:
  31:src/riscv.cpp ****             TCB::_thread_create((thread_t *) arg1, (run_t) arg2, (void *) arg3, (void *) arg4);
GAS LISTING /tmp/ccSROz0M.s 			page 9


  32:src/riscv.cpp ****             break;
  33:src/riscv.cpp ****         case THREAD_EXIT:
  34:src/riscv.cpp ****             TCB::_thread_exit();
  35:src/riscv.cpp ****             break;
  36:src/riscv.cpp ****         case THREAD_DISPATCH:
  37:src/riscv.cpp ****             TCB::_thread_dispatch();
  38:src/riscv.cpp ****             break;
  39:src/riscv.cpp ****         case THREAD_JOIN:
  40:src/riscv.cpp ****             TCB::_thread_join((thread_t) arg1);
  41:src/riscv.cpp ****             break;
  42:src/riscv.cpp ****         case THREAD_JOIN_TIME:
  43:src/riscv.cpp ****             TCB::_thread_join((thread_t) arg1, (time_t) arg2);
  44:src/riscv.cpp ****             break;
  45:src/riscv.cpp ****         case THREAD_FORK:
  46:src/riscv.cpp ****             TCB::_fork();
  47:src/riscv.cpp ****             break;
  48:src/riscv.cpp ****         case THREAD_KILL:
  49:src/riscv.cpp ****             TCB::_kill((thread_t) arg1);
  50:src/riscv.cpp ****             break;
  51:src/riscv.cpp ****         case SEM_OPEN:
  52:src/riscv.cpp ****             Sem::_sem_open((sem_t *) arg1, arg2);
  53:src/riscv.cpp ****             break;
  54:src/riscv.cpp ****         case SEM_CLOSE:
  55:src/riscv.cpp ****             Sem::_sem_close((sem_t) arg1);
  56:src/riscv.cpp ****             break;
  57:src/riscv.cpp ****         case SEM_WAIT:
  58:src/riscv.cpp ****             Sem::_sem_wait((sem_t) arg1);
  59:src/riscv.cpp ****             break;
  60:src/riscv.cpp ****         case SEM_SIGNAL:
  61:src/riscv.cpp ****             Sem::_sem_signal((sem_t) arg1);
  62:src/riscv.cpp ****             break;
  63:src/riscv.cpp ****         case SIGNAL_WAIT:
  64:src/riscv.cpp ****             Sem::_sem_signal((sem_t) arg1);
  65:src/riscv.cpp ****             Sem::_sem_wait((sem_t) arg2);
  66:src/riscv.cpp ****             break;
  67:src/riscv.cpp ****         case TIME_SLEEP:
  68:src/riscv.cpp ****             Cradle::_time_sleep((time_t) arg1);
  69:src/riscv.cpp ****             break;
  70:src/riscv.cpp ****         case THREAD_WAKE:
  71:src/riscv.cpp ****             Cradle::_thread_wake((thread_t) arg1);
  72:src/riscv.cpp ****             break;
  73:src/riscv.cpp ****         case GETC:
  74:src/riscv.cpp ****             IO::_getc();
  75:src/riscv.cpp ****             break;
  76:src/riscv.cpp ****         case PUTC:
  77:src/riscv.cpp ****             IO::_putc((char) arg1);
  78:src/riscv.cpp ****             break;
  79:src/riscv.cpp ****         default:
  80:src/riscv.cpp ****             break;
  81:src/riscv.cpp **** 
  82:src/riscv.cpp ****     }
  83:src/riscv.cpp ****     w_sepc(sepc + 4);
 236              		.loc 1 83 5
 237              		.loc 1 83 11 is_stmt 0
 238 00b8 13094900 		addi	s2,s2,4
 239              	.LVL13:
 240              	.LBB54:
GAS LISTING /tmp/ccSROz0M.s 			page 10


 241              	.LBB55:
 116:src/../h/riscv.hpp **** }
 242              		.loc 2 116 5 is_stmt 1
 116:src/../h/riscv.hpp **** }
 243              		.loc 2 116 65 is_stmt 0
 244              	#APP
 245              	# 116 "src/../h/riscv.hpp" 1
 246              		csrw sepc, s2
 247              	# 0 "" 2
 248              	.LVL14:
 249              	#NO_APP
 250              	.LBE55:
 251              	.LBE54:
  84:src/riscv.cpp ****     w_sstatus(sstatus);
 252              		.loc 1 84 5 is_stmt 1
 253              	.LBB56:
 254              	.LBB57:
 169:src/../h/riscv.hpp **** }
 170:src/../h/riscv.hpp **** 
 171:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 172:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 255              		.loc 2 172 5
 256              		.loc 2 172 77 is_stmt 0
 257              	#APP
 258              	# 172 "src/../h/riscv.hpp" 1
 173              	}
 259              		csrw sstatus, s3
 260              	# 0 "" 2
 261              	.LVL15:
 262              	#NO_APP
 263              	.LBE57:
 264              	.LBE56:
  85:src/riscv.cpp **** }
 265              		.loc 1 85 1
 266 00c4 83308106 		ld	ra,104(sp)
 267              		.cfi_remember_state
 268              		.cfi_restore 1
 269 00c8 03340106 		ld	s0,96(sp)
 270              		.cfi_restore 8
 271              		.cfi_def_cfa 2, 112
 272 00cc 83348105 		ld	s1,88(sp)
 273              		.cfi_restore 9
 274 00d0 03390105 		ld	s2,80(sp)
 275              		.cfi_restore 18
 276              	.LVL16:
 277 00d4 83398104 		ld	s3,72(sp)
 278              		.cfi_restore 19
 279              	.LVL17:
 280 00d8 033A0104 		ld	s4,64(sp)
 281              		.cfi_restore 20
 282              	.LVL18:
 283 00dc 833A8103 		ld	s5,56(sp)
 284              		.cfi_restore 21
 285              	.LVL19:
 286 00e0 033B0103 		ld	s6,48(sp)
 287              		.cfi_restore 22
 288              	.LVL20:
GAS LISTING /tmp/ccSROz0M.s 			page 11


 289 00e4 833B8102 		ld	s7,40(sp)
 290              		.cfi_restore 23
 291              	.LVL21:
 292 00e8 13010107 		addi	sp,sp,112
 293              		.cfi_def_cfa_offset 0
 294 00ec 67800000 		jr	ra
 295              	.LVL22:
 296              	.L21:
 297              		.cfi_restore_state
  27:src/riscv.cpp ****             Allocator::_mem_free((void *) arg1);
 298              		.loc 1 27 9 is_stmt 1
  28:src/riscv.cpp ****             break;
 299              		.loc 1 28 13
  28:src/riscv.cpp ****             break;
 300              		.loc 1 28 33 is_stmt 0
 301 00f0 13050A00 		mv	a0,s4
 302 00f4 97000000 		call	_ZN9Allocator9_mem_freeEPKv@plt
 302      E7800000 
 303              	.LVL23:
  29:src/riscv.cpp ****         case THREAD_CREATE:
 304              		.loc 1 29 13 is_stmt 1
 305 00fc 6FF0DFFB 		j	.L3
 306              	.L20:
  30:src/riscv.cpp ****             TCB::_thread_create((thread_t *) arg1, (run_t) arg2, (void *) arg3, (void *) arg4);
 307              		.loc 1 30 9
  31:src/riscv.cpp ****             break;
 308              		.loc 1 31 13
  31:src/riscv.cpp ****             break;
 309              		.loc 1 31 32 is_stmt 0
 310 0100 93860B00 		mv	a3,s7
 311 0104 13060B00 		mv	a2,s6
 312 0108 93850A00 		mv	a1,s5
 313 010c 13050A00 		mv	a0,s4
 314 0110 97000000 		call	_ZN3TCB14_thread_createEPPS_PFvPvES2_S2_@plt
 314      E7800000 
 315              	.LVL24:
  32:src/riscv.cpp ****         case THREAD_EXIT:
 316              		.loc 1 32 13 is_stmt 1
 317 0118 6FF01FFA 		j	.L3
 318              	.L19:
  33:src/riscv.cpp ****             TCB::_thread_exit();
 319              		.loc 1 33 9
  34:src/riscv.cpp ****             break;
 320              		.loc 1 34 13
  34:src/riscv.cpp ****             break;
 321              		.loc 1 34 30 is_stmt 0
 322 011c 97000000 		call	_ZN3TCB12_thread_exitEv@plt
 322      E7800000 
 323              	.LVL25:
  35:src/riscv.cpp ****         case THREAD_DISPATCH:
 324              		.loc 1 35 13 is_stmt 1
 325 0124 6FF05FF9 		j	.L3
 326              	.L18:
  36:src/riscv.cpp ****             TCB::_thread_dispatch();
 327              		.loc 1 36 9
  37:src/riscv.cpp ****             break;
 328              		.loc 1 37 13
GAS LISTING /tmp/ccSROz0M.s 			page 12


  37:src/riscv.cpp ****             break;
 329              		.loc 1 37 34 is_stmt 0
 330 0128 97000000 		call	_ZN3TCB16_thread_dispatchEv@plt
 330      E7800000 
 331              	.LVL26:
  38:src/riscv.cpp ****         case THREAD_JOIN:
 332              		.loc 1 38 13 is_stmt 1
 333 0130 6FF09FF8 		j	.L3
 334              	.L17:
  39:src/riscv.cpp ****             TCB::_thread_join((thread_t) arg1);
 335              		.loc 1 39 9
  40:src/riscv.cpp ****             break;
 336              		.loc 1 40 13
  40:src/riscv.cpp ****             break;
 337              		.loc 1 40 30 is_stmt 0
 338 0134 13050A00 		mv	a0,s4
 339 0138 97000000 		call	_ZN3TCB12_thread_joinEPS_@plt
 339      E7800000 
 340              	.LVL27:
  41:src/riscv.cpp ****         case THREAD_JOIN_TIME:
 341              		.loc 1 41 13 is_stmt 1
 342 0140 6FF09FF7 		j	.L3
 343              	.L16:
  42:src/riscv.cpp ****             TCB::_thread_join((thread_t) arg1, (time_t) arg2);
 344              		.loc 1 42 9
  43:src/riscv.cpp ****             break;
 345              		.loc 1 43 13
  43:src/riscv.cpp ****             break;
 346              		.loc 1 43 30 is_stmt 0
 347 0144 93850A00 		mv	a1,s5
 348 0148 13050A00 		mv	a0,s4
 349 014c 97000000 		call	_ZN3TCB12_thread_joinEPS_m@plt
 349      E7800000 
 350              	.LVL28:
  44:src/riscv.cpp ****         case THREAD_FORK:
 351              		.loc 1 44 13 is_stmt 1
 352 0154 6FF05FF6 		j	.L3
 353              	.L15:
  45:src/riscv.cpp ****             TCB::_fork();
 354              		.loc 1 45 9
  46:src/riscv.cpp ****             break;
 355              		.loc 1 46 13
  46:src/riscv.cpp ****             break;
 356              		.loc 1 46 23 is_stmt 0
 357 0158 97000000 		call	_ZN3TCB5_forkEv@plt
 357      E7800000 
 358              	.LVL29:
  47:src/riscv.cpp ****         case THREAD_KILL:
 359              		.loc 1 47 13 is_stmt 1
 360 0160 6FF09FF5 		j	.L3
 361              	.L14:
  48:src/riscv.cpp ****             TCB::_kill((thread_t) arg1);
 362              		.loc 1 48 9
  49:src/riscv.cpp ****             break;
 363              		.loc 1 49 13
  49:src/riscv.cpp ****             break;
 364              		.loc 1 49 23 is_stmt 0
GAS LISTING /tmp/ccSROz0M.s 			page 13


 365 0164 13050A00 		mv	a0,s4
 366 0168 97000000 		call	_ZN3TCB5_killEPS_@plt
 366      E7800000 
 367              	.LVL30:
  50:src/riscv.cpp ****         case SEM_OPEN:
 368              		.loc 1 50 13 is_stmt 1
 369 0170 6FF09FF4 		j	.L3
 370              	.L13:
  51:src/riscv.cpp ****             Sem::_sem_open((sem_t *) arg1, arg2);
 371              		.loc 1 51 9
  52:src/riscv.cpp ****             break;
 372              		.loc 1 52 13
  52:src/riscv.cpp ****             break;
 373              		.loc 1 52 27 is_stmt 0
 374 0174 9B850A00 		sext.w	a1,s5
 375 0178 13050A00 		mv	a0,s4
 376 017c 97000000 		call	_ZN3Sem9_sem_openEPPS_j@plt
 376      E7800000 
 377              	.LVL31:
  53:src/riscv.cpp ****         case SEM_CLOSE:
 378              		.loc 1 53 13 is_stmt 1
 379 0184 6FF05FF3 		j	.L3
 380              	.L12:
  54:src/riscv.cpp ****             Sem::_sem_close((sem_t) arg1);
 381              		.loc 1 54 9
  55:src/riscv.cpp ****             break;
 382              		.loc 1 55 13
  55:src/riscv.cpp ****             break;
 383              		.loc 1 55 28 is_stmt 0
 384 0188 13050A00 		mv	a0,s4
 385 018c 97000000 		call	_ZN3Sem10_sem_closeEPS_@plt
 385      E7800000 
 386              	.LVL32:
  56:src/riscv.cpp ****         case SEM_WAIT:
 387              		.loc 1 56 13 is_stmt 1
 388 0194 6FF05FF2 		j	.L3
 389              	.L11:
  57:src/riscv.cpp ****             Sem::_sem_wait((sem_t) arg1);
 390              		.loc 1 57 9
  58:src/riscv.cpp ****             break;
 391              		.loc 1 58 13
  58:src/riscv.cpp ****             break;
 392              		.loc 1 58 27 is_stmt 0
 393 0198 13050A00 		mv	a0,s4
 394 019c 97000000 		call	_ZN3Sem9_sem_waitEPS_@plt
 394      E7800000 
 395              	.LVL33:
  59:src/riscv.cpp ****         case SEM_SIGNAL:
 396              		.loc 1 59 13 is_stmt 1
 397 01a4 6FF05FF1 		j	.L3
 398              	.L10:
  60:src/riscv.cpp ****             Sem::_sem_signal((sem_t) arg1);
 399              		.loc 1 60 9
  61:src/riscv.cpp ****             break;
 400              		.loc 1 61 13
  61:src/riscv.cpp ****             break;
 401              		.loc 1 61 29 is_stmt 0
GAS LISTING /tmp/ccSROz0M.s 			page 14


 402 01a8 13050A00 		mv	a0,s4
 403 01ac 97000000 		call	_ZN3Sem11_sem_signalEPS_@plt
 403      E7800000 
 404              	.LVL34:
  62:src/riscv.cpp ****         case SIGNAL_WAIT:
 405              		.loc 1 62 13 is_stmt 1
 406 01b4 6FF05FF0 		j	.L3
 407              	.L9:
  63:src/riscv.cpp ****             Sem::_sem_signal((sem_t) arg1);
 408              		.loc 1 63 9
  64:src/riscv.cpp ****             Sem::_sem_wait((sem_t) arg2);
 409              		.loc 1 64 13
  64:src/riscv.cpp ****             Sem::_sem_wait((sem_t) arg2);
 410              		.loc 1 64 29 is_stmt 0
 411 01b8 13050A00 		mv	a0,s4
 412 01bc 97000000 		call	_ZN3Sem11_sem_signalEPS_@plt
 412      E7800000 
 413              	.LVL35:
  65:src/riscv.cpp ****             break;
 414              		.loc 1 65 13 is_stmt 1
  65:src/riscv.cpp ****             break;
 415              		.loc 1 65 27 is_stmt 0
 416 01c4 13850A00 		mv	a0,s5
 417 01c8 97000000 		call	_ZN3Sem9_sem_waitEPS_@plt
 417      E7800000 
 418              	.LVL36:
  66:src/riscv.cpp ****         case TIME_SLEEP:
 419              		.loc 1 66 13 is_stmt 1
 420 01d0 6FF09FEE 		j	.L3
 421              	.L8:
  67:src/riscv.cpp ****             Cradle::_time_sleep((time_t) arg1);
 422              		.loc 1 67 9
  68:src/riscv.cpp ****             break;
 423              		.loc 1 68 13
  68:src/riscv.cpp ****             break;
 424              		.loc 1 68 32 is_stmt 0
 425 01d4 13050A00 		mv	a0,s4
 426 01d8 97000000 		call	_ZN6Cradle11_time_sleepEm@plt
 426      E7800000 
 427              	.LVL37:
  69:src/riscv.cpp ****         case THREAD_WAKE:
 428              		.loc 1 69 13 is_stmt 1
 429 01e0 6FF09FED 		j	.L3
 430              	.L7:
  70:src/riscv.cpp ****             Cradle::_thread_wake((thread_t) arg1);
 431              		.loc 1 70 9
  71:src/riscv.cpp ****             break;
 432              		.loc 1 71 13
  71:src/riscv.cpp ****             break;
 433              		.loc 1 71 33 is_stmt 0
 434 01e4 13050A00 		mv	a0,s4
 435 01e8 97000000 		call	_ZN6Cradle12_thread_wakeEP3TCB@plt
 435      E7800000 
 436              	.LVL38:
  72:src/riscv.cpp ****         case GETC:
 437              		.loc 1 72 13 is_stmt 1
 438 01f0 6FF09FEC 		j	.L3
GAS LISTING /tmp/ccSROz0M.s 			page 15


 439              	.L6:
  73:src/riscv.cpp ****             IO::_getc();
 440              		.loc 1 73 9
  74:src/riscv.cpp ****             break;
 441              		.loc 1 74 13
  74:src/riscv.cpp ****             break;
 442              		.loc 1 74 22 is_stmt 0
 443 01f4 97000000 		call	_ZN2IO5_getcEv@plt
 443      E7800000 
 444              	.LVL39:
  75:src/riscv.cpp ****         case PUTC:
 445              		.loc 1 75 13 is_stmt 1
 446 01fc 6FF0DFEB 		j	.L3
 447              	.L4:
  76:src/riscv.cpp ****             IO::_putc((char) arg1);
 448              		.loc 1 76 9
  77:src/riscv.cpp ****             break;
 449              		.loc 1 77 13
  77:src/riscv.cpp ****             break;
 450              		.loc 1 77 22 is_stmt 0
 451 0200 1375FA0F 		andi	a0,s4,0xff
 452 0204 97000000 		call	_ZN2IO5_putcEc@plt
 452      E7800000 
 453              	.LVL40:
  78:src/riscv.cpp ****         default:
 454              		.loc 1 78 13 is_stmt 1
 455 020c 6FF0DFEA 		j	.L3
 456              		.cfi_endproc
 457              	.LFE45:
 459              		.align	2
 460              		.globl	_ZN5Riscv15handleTimerTrapEv
 462              	_ZN5Riscv15handleTimerTrapEv:
 463              	.LFB46:
  86:src/riscv.cpp **** 
  87:src/riscv.cpp **** 
  88:src/riscv.cpp **** __attribute__((unused))
  89:src/riscv.cpp **** void Riscv::handleTimerTrap() {
 464              		.loc 1 89 31
 465              		.cfi_startproc
 466 0210 130101FF 		addi	sp,sp,-16
 467              		.cfi_def_cfa_offset 16
 468 0214 23341100 		sd	ra,8(sp)
 469 0218 23308100 		sd	s0,0(sp)
 470              		.cfi_offset 1, -8
 471              		.cfi_offset 8, -16
 472 021c 13040101 		addi	s0,sp,16
 473              		.cfi_def_cfa 8, 0
 474              	.L27:
  90:src/riscv.cpp ****     while ((*((char *) CONSOLE_STATUS) & CONSOLE_TX_STATUS_BIT) && !IO::Output.is_empty()) {
 475              		.loc 1 90 5
 476              		.loc 1 90 65
 477              		.loc 1 90 13 is_stmt 0
 478 0220 97070000 		la	a5,CONSOLE_STATUS
 478      83B70700 
 479 0228 83B70700 		ld	a5,0(a5)
 480 022c 83C70700 		lbu	a5,0(a5)
 481              		.loc 1 90 65
GAS LISTING /tmp/ccSROz0M.s 			page 16


 482 0230 93F70702 		andi	a5,a5,32
 483 0234 638C0702 		beqz	a5,.L26
 484              	.LVL41:
 485              		.file 3 "src/../h/c_console.hpp"
   1:src/../h/c_console.hpp **** #ifndef PROJECT_BASE_C_CONSOLE_HPP
   2:src/../h/c_console.hpp **** #define PROJECT_BASE_C_CONSOLE_HPP
   3:src/../h/c_console.hpp **** 
   4:src/../h/c_console.hpp **** #include "circular_buffer.hpp"
   5:src/../h/c_console.hpp **** #include "riscv.hpp"
   6:src/../h/c_console.hpp **** 
   7:src/../h/c_console.hpp **** class Sem;
   8:src/../h/c_console.hpp **** 
   9:src/../h/c_console.hpp **** class IOBuffer final {
  10:src/../h/c_console.hpp **** public:
  11:src/../h/c_console.hpp ****     void init();
  12:src/../h/c_console.hpp **** 
  13:src/../h/c_console.hpp ****     void put(char c);
  14:src/../h/c_console.hpp **** 
  15:src/../h/c_console.hpp ****     char get();
  16:src/../h/c_console.hpp **** 
  17:src/../h/c_console.hpp ****     bool is_empty() const { return this->buffer.is_empty(); }
 486              		.loc 3 17 29 is_stmt 1
 487              	.LBB58:
 488              	.LBB59:
 489              	.LBB60:
 490              		.file 4 "src/../h/circular_buffer.hpp"
   1:src/../h/circular_buffer.hpp **** #ifndef PROJECT_BASE_CIRCULAR_BUFFER_HPP
   2:src/../h/circular_buffer.hpp **** #define PROJECT_BASE_CIRCULAR_BUFFER_HPP
   3:src/../h/circular_buffer.hpp **** 
   4:src/../h/circular_buffer.hpp **** #include "syscall_c.hpp"
   5:src/../h/circular_buffer.hpp **** #include "c_memory.hpp"
   6:src/../h/circular_buffer.hpp **** 
   7:src/../h/circular_buffer.hpp **** namespace stm {
   8:src/../h/circular_buffer.hpp ****     template<typename T>
   9:src/../h/circular_buffer.hpp ****     class CircularBuffer {
  10:src/../h/circular_buffer.hpp ****     public:
  11:src/../h/circular_buffer.hpp **** 
  12:src/../h/circular_buffer.hpp ****         void init();
  13:src/../h/circular_buffer.hpp **** 
  14:src/../h/circular_buffer.hpp ****         void put(T);
  15:src/../h/circular_buffer.hpp **** 
  16:src/../h/circular_buffer.hpp ****         T get();
  17:src/../h/circular_buffer.hpp **** 
  18:src/../h/circular_buffer.hpp ****         T &peek();
  19:src/../h/circular_buffer.hpp **** 
  20:src/../h/circular_buffer.hpp ****         inline bool is_empty() const { return this->size == 0; }
 491              		.loc 4 20 53 is_stmt 0
 492 0238 97070000 		la	a5,_ZN2IO6OutputE
 492      83B70700 
 493 0240 83A70701 		lw	a5,16(a5)
 494              	.LVL42:
 495              	.LBE60:
 496              	.LBE59:
 497              	.LBE58:
 498              		.loc 1 90 65
 499 0244 63840702 		beqz	a5,.L26
 500              	.LBB61:
GAS LISTING /tmp/ccSROz0M.s 			page 17


  91:src/riscv.cpp ****         char c = IO::Output.get();
 501              		.loc 1 91 9 is_stmt 1
 502              		.loc 1 91 32 is_stmt 0
 503 0248 17050000 		la	a0,_ZN2IO6OutputE
 503      03350500 
 504 0250 97000000 		call	_ZN8IOBuffer3getEv@plt
 504      E7800000 
 505              	.LVL43:
  92:src/riscv.cpp ****         *(volatile char *) CONSOLE_TX_DATA = c;
 506              		.loc 1 92 9 is_stmt 1
 507 0258 97070000 		la	a5,CONSOLE_TX_DATA
 507      83B70700 
 508 0260 83B70700 		ld	a5,0(a5)
 509              		.loc 1 92 44 is_stmt 0
 510 0264 2380A700 		sb	a0,0(a5)
 511              	.LBE61:
  90:src/riscv.cpp ****         char c = IO::Output.get();
 512              		.loc 1 90 5
 513 0268 6FF09FFB 		j	.L27
 514              	.LVL44:
 515              	.L26:
  93:src/riscv.cpp ****     }
  94:src/riscv.cpp ****     mc_sip(SIP_SSIE);
 516              		.loc 1 94 5 is_stmt 1 discriminator 4
 517              	.LBB62:
 518              	.LBB63:
 144:src/../h/riscv.hpp **** }
 519              		.loc 2 144 5 discriminator 4
 144:src/../h/riscv.hpp **** }
 520              		.loc 2 144 64 is_stmt 0 discriminator 4
 521 026c 93072000 		li	a5,2
 522              	#APP
 523              	# 144 "src/../h/riscv.hpp" 1
 524              		csrc sip, a5
 525              	# 0 "" 2
 526              	.LVL45:
 527              	#NO_APP
 528              	.LBE63:
 529              	.LBE62:
  95:src/riscv.cpp ****     Cradle::update();
 530              		.loc 1 95 5 is_stmt 1 discriminator 4
 531              		.loc 1 95 19 is_stmt 0 discriminator 4
 532 0274 97000000 		call	_ZN6Cradle6updateEv@plt
 532      E7800000 
 533              	.LVL46:
 534 027c 6F008004 		j	.L28
 535              	.L29:
  96:src/riscv.cpp ****     while (!Cradle::is_empty() && Cradle::peak() == 0) {
  97:src/riscv.cpp ****         thread_t next = Cradle::remove();
  98:src/riscv.cpp ****         if (next->is_joined() || next->is_sleeping()) {
  99:src/riscv.cpp ****             next->run();
 100:src/riscv.cpp ****             Scheduler::put(next);
 101:src/riscv.cpp ****         }
 102:src/riscv.cpp ****     }
 103:src/riscv.cpp ****     TCB::timer_counter++;
 536              		.loc 1 103 5 is_stmt 1 discriminator 4
 537              		.loc 1 103 23 is_stmt 0 discriminator 4
GAS LISTING /tmp/ccSROz0M.s 			page 18


 538 0280 17070000 		la	a4,_ZN3TCB13timer_counterE
 538      03370700 
 539 0288 83370700 		ld	a5,0(a4)
 540 028c 93871700 		addi	a5,a5,1
 541 0290 2330F700 		sd	a5,0(a4)
 104:src/riscv.cpp ****     if ((time_t) TCB::timer_counter >= TCB::running->get_time_slice() && !Scheduler::is_empty()) {
 542              		.loc 1 104 5 is_stmt 1 discriminator 4
 543              		.loc 1 104 68 is_stmt 0 discriminator 4
 544 0294 17070000 		la	a4,_ZN3TCB7runningE
 544      03370700 
 545 029c 03370700 		ld	a4,0(a4)
 546              	.LVL47:
 547              	.LBB64:
 548              	.LBB65:
 549              		.file 5 "src/../h/c_thread.hpp"
   1:src/../h/c_thread.hpp **** #ifndef PROJECT_BASE_C_THREAD_HPP
   2:src/../h/c_thread.hpp **** #define PROJECT_BASE_C_THREAD_HPP
   3:src/../h/c_thread.hpp **** 
   4:src/../h/c_thread.hpp **** #include "syscall_c.hpp"
   5:src/../h/c_thread.hpp **** #include "../lib/hw.h"
   6:src/../h/c_thread.hpp **** #include "circular_buffer.hpp"
   7:src/../h/c_thread.hpp **** 
   8:src/../h/c_thread.hpp **** using run_t = void (*)(void *);
   9:src/../h/c_thread.hpp **** 
  10:src/../h/c_thread.hpp **** struct Context {
  11:src/../h/c_thread.hpp ****     uint64 ra;
  12:src/../h/c_thread.hpp ****     uint64 sp;
  13:src/../h/c_thread.hpp ****     uint64 sstatus;
  14:src/../h/c_thread.hpp ****     uint64 sepc;
  15:src/../h/c_thread.hpp **** };
  16:src/../h/c_thread.hpp **** 
  17:src/../h/c_thread.hpp **** enum Status {
  18:src/../h/c_thread.hpp ****     RUNNABLE, BLOCKED, SLEEPING, JOINED, FINISHED
  19:src/../h/c_thread.hpp **** };
  20:src/../h/c_thread.hpp **** 
  21:src/../h/c_thread.hpp **** class TCB final {
  22:src/../h/c_thread.hpp **** public:
  23:src/../h/c_thread.hpp ****     static int _thread_create(thread_t *, void(*)(void *), void *, void *);
  24:src/../h/c_thread.hpp **** 
  25:src/../h/c_thread.hpp ****     static void _thread_exit();
  26:src/../h/c_thread.hpp **** 
  27:src/../h/c_thread.hpp ****     static void _thread_dispatch();
  28:src/../h/c_thread.hpp **** 
  29:src/../h/c_thread.hpp ****     static void _thread_join(thread_t);
  30:src/../h/c_thread.hpp **** 
  31:src/../h/c_thread.hpp ****     static void _thread_join(thread_t, time_t);
  32:src/../h/c_thread.hpp **** 
  33:src/../h/c_thread.hpp ****     static int _fork();
  34:src/../h/c_thread.hpp **** 
  35:src/../h/c_thread.hpp ****     static int _kill(TCB *);
  36:src/../h/c_thread.hpp **** 
  37:src/../h/c_thread.hpp ****     static void thread_start();
  38:src/../h/c_thread.hpp **** 
  39:src/../h/c_thread.hpp ****     static void context_switch(Context *, Context *);
  40:src/../h/c_thread.hpp **** 
  41:src/../h/c_thread.hpp ****     static void yield();
  42:src/../h/c_thread.hpp **** 
GAS LISTING /tmp/ccSROz0M.s 			page 19


  43:src/../h/c_thread.hpp ****     static TCB *destroy_thread(TCB *);
  44:src/../h/c_thread.hpp **** 
  45:src/../h/c_thread.hpp ****     static void duplicate(TCB *, TCB *);
  46:src/../h/c_thread.hpp **** 
  47:src/../h/c_thread.hpp ****     TCB(run_t, void *, void *, Context);
  48:src/../h/c_thread.hpp **** 
  49:src/../h/c_thread.hpp ****     TCB(TCB &);
  50:src/../h/c_thread.hpp **** 
  51:src/../h/c_thread.hpp ****     bool is_runnable() const { return this->status == RUNNABLE; }
  52:src/../h/c_thread.hpp **** 
  53:src/../h/c_thread.hpp ****     bool is_blocked() const { return this->status == BLOCKED; }
  54:src/../h/c_thread.hpp **** 
  55:src/../h/c_thread.hpp ****     bool is_sleeping() const { return this->status == SLEEPING; }
  56:src/../h/c_thread.hpp **** 
  57:src/../h/c_thread.hpp ****     bool is_joined() const { return this->status == JOINED; }
  58:src/../h/c_thread.hpp **** 
  59:src/../h/c_thread.hpp ****     bool is_finished() const { return this->status == FINISHED; }
  60:src/../h/c_thread.hpp **** 
  61:src/../h/c_thread.hpp ****     void run() { this->status = RUNNABLE; }
  62:src/../h/c_thread.hpp **** 
  63:src/../h/c_thread.hpp ****     void block() { this->status = BLOCKED; }
  64:src/../h/c_thread.hpp **** 
  65:src/../h/c_thread.hpp ****     void sleep() { this->status = SLEEPING; }
  66:src/../h/c_thread.hpp **** 
  67:src/../h/c_thread.hpp ****     void enjoin() { this->status = JOINED; }
  68:src/../h/c_thread.hpp **** 
  69:src/../h/c_thread.hpp ****     void finish() { this->status = FINISHED; }
  70:src/../h/c_thread.hpp **** 
  71:src/../h/c_thread.hpp ****     bool was_preempted() const { return this->preempted; }
  72:src/../h/c_thread.hpp **** 
  73:src/../h/c_thread.hpp ****     void set_preempted() { this->preempted = true; }
  74:src/../h/c_thread.hpp **** 
  75:src/../h/c_thread.hpp ****     void reset_preempted() { this->preempted = false; }
  76:src/../h/c_thread.hpp **** 
  77:src/../h/c_thread.hpp ****     time_t get_time_slice() const { return this->time_slice; }
 550              		.loc 5 77 37 is_stmt 1 discriminator 4
 551              		.loc 5 77 50 is_stmt 0 discriminator 4
 552 02a0 83360705 		ld	a3,80(a4)
 553              	.LVL48:
 554              	.LBE65:
 555              	.LBE64:
 556              		.loc 1 104 71 discriminator 4
 557 02a4 63FCD704 		bgeu	a5,a3,.L31
 558              	.L25:
 105:src/riscv.cpp ****         TCB::timer_counter = 0;
 106:src/riscv.cpp ****         TCB::running->set_preempted();
 107:src/riscv.cpp ****         TCB::_thread_dispatch();
 108:src/riscv.cpp ****     }
 109:src/riscv.cpp **** }
 559              		.loc 1 109 1
 560 02a8 83308100 		ld	ra,8(sp)
 561              		.cfi_remember_state
 562              		.cfi_restore 1
 563 02ac 03340100 		ld	s0,0(sp)
 564              		.cfi_restore 8
 565              		.cfi_def_cfa 2, 16
 566 02b0 13010101 		addi	sp,sp,16
GAS LISTING /tmp/ccSROz0M.s 			page 20


 567              		.cfi_def_cfa_offset 0
 568 02b4 67800000 		jr	ra
 569              	.LVL49:
 570              	.L33:
 571              		.cfi_restore_state
 572              	.LBB66:
  99:src/riscv.cpp ****             Scheduler::put(next);
 573              		.loc 1 99 13 is_stmt 1 discriminator 3
 574              	.LBB67:
 575              	.LBB68:
  61:src/../h/c_thread.hpp **** 
 576              		.loc 5 61 18 discriminator 3
  61:src/../h/c_thread.hpp **** 
 577              		.loc 5 61 31 is_stmt 0 discriminator 3
 578 02b8 23240504 		sw	zero,72(a0)
 579              	.LVL50:
 580              	.LBE68:
 581              	.LBE67:
 100:src/riscv.cpp ****         }
 582              		.loc 1 100 13 is_stmt 1 discriminator 3
 100:src/riscv.cpp ****         }
 583              		.loc 1 100 27 is_stmt 0 discriminator 3
 584 02bc 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 584      E7800000 
 585              	.LVL51:
 586              	.L28:
 587              	.LBE66:
  96:src/riscv.cpp ****         thread_t next = Cradle::remove();
 588              		.loc 1 96 5 is_stmt 1
  96:src/riscv.cpp ****         thread_t next = Cradle::remove();
 589              		.loc 1 96 32
  96:src/riscv.cpp ****         thread_t next = Cradle::remove();
 590              		.loc 1 96 29 is_stmt 0
 591 02c4 97000000 		call	_ZN6Cradle8is_emptyEv@plt
 591      E7800000 
 592              	.LVL52:
  96:src/riscv.cpp ****         thread_t next = Cradle::remove();
 593              		.loc 1 96 32
 594 02cc E31A05FA 		bnez	a0,.L29
  96:src/riscv.cpp ****         thread_t next = Cradle::remove();
 595              		.loc 1 96 47 discriminator 1
 596 02d0 97000000 		call	_ZN6Cradle4peakEv@plt
 596      E7800000 
 597              	.LVL53:
  96:src/riscv.cpp ****         thread_t next = Cradle::remove();
 598              		.loc 1 96 32 discriminator 1
 599 02d8 E31405FA 		bnez	a0,.L29
 600              	.LBB71:
  97:src/riscv.cpp ****         if (next->is_joined() || next->is_sleeping()) {
 601              		.loc 1 97 9 is_stmt 1
  97:src/riscv.cpp ****         if (next->is_joined() || next->is_sleeping()) {
 602              		.loc 1 97 39 is_stmt 0
 603 02dc 97000000 		call	_ZN6Cradle6removeEv@plt
 603      E7800000 
 604              	.LVL54:
  98:src/riscv.cpp ****             next->run();
 605              		.loc 1 98 9 is_stmt 1
GAS LISTING /tmp/ccSROz0M.s 			page 21


 606              	.LBB69:
 607              	.LBB70:
  57:src/../h/c_thread.hpp **** 
 608              		.loc 5 57 30
  57:src/../h/c_thread.hpp **** 
 609              		.loc 5 57 43 is_stmt 0
 610 02e4 83278504 		lw	a5,72(a0)
 611              	.LVL55:
 612              	.LBE70:
 613              	.LBE69:
  98:src/riscv.cpp ****             next->run();
 614              		.loc 1 98 31
 615 02e8 13073000 		li	a4,3
 616 02ec E386E7FC 		beq	a5,a4,.L33
 617              	.LVL56:
 618              	.LBE71:
  55:src/../h/c_thread.hpp **** 
 619              		.loc 5 55 32 is_stmt 1
 620              	.LBB72:
  98:src/riscv.cpp ****             next->run();
 621              		.loc 1 98 31 is_stmt 0
 622 02f0 13072000 		li	a4,2
 623 02f4 E398E7FC 		bne	a5,a4,.L28
 624 02f8 6FF01FFC 		j	.L33
 625              	.LVL57:
 626              	.L31:
 627              	.LBE72:
 628              	.LBB73:
 629              	.LBB74:
 630              		.file 6 "src/../h/scheduler.hpp"
   1:src/../h/scheduler.hpp **** #ifndef PROJECT_BASE_SCHEDULER_HPP
   2:src/../h/scheduler.hpp **** #define PROJECT_BASE_SCHEDULER_HPP
   3:src/../h/scheduler.hpp **** 
   4:src/../h/scheduler.hpp **** #include "circular_buffer.hpp"
   5:src/../h/scheduler.hpp **** #include "syscall_c.hpp"
   6:src/../h/scheduler.hpp **** 
   7:src/../h/scheduler.hpp **** class Scheduler final {
   8:src/../h/scheduler.hpp **** public:
   9:src/../h/scheduler.hpp **** 
  10:src/../h/scheduler.hpp ****     static void init() { high_priority.init(); mid_priority.init(); low_priority.init(); }
  11:src/../h/scheduler.hpp **** 
  12:src/../h/scheduler.hpp ****     static void put(TCB *thread);
  13:src/../h/scheduler.hpp **** 
  14:src/../h/scheduler.hpp ****     static TCB *get();
  15:src/../h/scheduler.hpp **** 
  16:src/../h/scheduler.hpp ****     static inline bool is_empty() {
  17:src/../h/scheduler.hpp ****         return high_priority.is_empty() && mid_priority.is_empty() && low_priority.is_empty();
 631              		.loc 6 17 9 is_stmt 1
 632              	.LBB75:
 633              	.LBB76:
 634              		.loc 4 20 53 is_stmt 0
 635 02fc 97070000 		la	a5,_ZN9Scheduler13high_priorityE
 635      83B70700 
 636 0304 83A70701 		lw	a5,16(a5)
 637              	.LVL58:
 638              	.LBE76:
 639              	.LBE75:
GAS LISTING /tmp/ccSROz0M.s 			page 22


 640              		.loc 6 17 68
 641 0308 63920702 		bnez	a5,.L35
 642              	.LVL59:
 643              	.LBB77:
 644              	.LBB78:
 645              		.loc 4 20 53
 646 030c 97070000 		la	a5,_ZN9Scheduler12mid_priorityE
 646      83B70700 
 647 0314 83A70701 		lw	a5,16(a5)
 648              	.LVL60:
 649              	.LBE78:
 650              	.LBE77:
 651              		.loc 6 17 41
 652 0318 639A0700 		bnez	a5,.L35
 653              	.LVL61:
 654              	.LBB79:
 655              	.LBB80:
 656              		.loc 4 20 53
 657 031c 97070000 		la	a5,_ZN9Scheduler12low_priorityE
 657      83B70700 
 658 0324 83A70701 		lw	a5,16(a5)
 659              	.LVL62:
 660              	.LBE80:
 661              	.LBE79:
 662              		.loc 6 17 68
 663 0328 E38007F8 		beqz	a5,.L25
 664              	.L35:
 665              	.LBE74:
 666              	.LBE73:
 105:src/riscv.cpp ****         TCB::running->set_preempted();
 667              		.loc 1 105 9 is_stmt 1
 105:src/riscv.cpp ****         TCB::running->set_preempted();
 668              		.loc 1 105 28 is_stmt 0
 669 032c 97070000 		la	a5,_ZN3TCB13timer_counterE
 669      83B70700 
 670 0334 23B00700 		sd	zero,0(a5)
 106:src/riscv.cpp ****         TCB::_thread_dispatch();
 671              		.loc 1 106 9 is_stmt 1
 672              	.LVL63:
 673              	.LBB81:
 674              	.LBB82:
  73:src/../h/c_thread.hpp **** 
 675              		.loc 5 73 28
  73:src/../h/c_thread.hpp **** 
 676              		.loc 5 73 44 is_stmt 0
 677 0338 93071000 		li	a5,1
 678 033c 230CF704 		sb	a5,88(a4)
 679              	.LVL64:
 680              	.LBE82:
 681              	.LBE81:
 107:src/riscv.cpp ****     }
 682              		.loc 1 107 9 is_stmt 1
 107:src/riscv.cpp ****     }
 683              		.loc 1 107 30 is_stmt 0
 684 0340 97000000 		call	_ZN3TCB16_thread_dispatchEv@plt
 684      E7800000 
 685              	.LVL65:
GAS LISTING /tmp/ccSROz0M.s 			page 23


 686              		.loc 1 109 1
 687 0348 6FF01FF6 		j	.L25
 688              		.cfi_endproc
 689              	.LFE46:
 691              		.align	2
 692              		.globl	_ZN5Riscv17handleConsoleTrapEv
 694              	_ZN5Riscv17handleConsoleTrapEv:
 695              	.LFB47:
 110:src/riscv.cpp **** 
 111:src/riscv.cpp **** __attribute__((unused))
 112:src/riscv.cpp **** void Riscv::handleConsoleTrap() {
 696              		.loc 1 112 33 is_stmt 1
 697              		.cfi_startproc
 698 034c 130101FE 		addi	sp,sp,-32
 699              		.cfi_def_cfa_offset 32
 700 0350 233C1100 		sd	ra,24(sp)
 701 0354 23388100 		sd	s0,16(sp)
 702              		.cfi_offset 1, -8
 703              		.cfi_offset 8, -16
 704 0358 13040102 		addi	s0,sp,32
 705              		.cfi_def_cfa 8, 0
 113:src/riscv.cpp ****     if (plic_claim() == CONSOLE_IRQ) {
 706              		.loc 1 113 5
 707              	.LBB83:
 708              		.loc 1 113 19 is_stmt 0
 709 035c 97000000 		call	plic_claim@plt
 709      E7800000 
 710              	.LVL66:
 711              		.loc 1 113 5
 712 0364 9307A000 		li	a5,10
 713 0368 630AF500 		beq	a0,a5,.L40
 714              	.L37:
 715              	.LBE83:
 114:src/riscv.cpp ****         while ((*((char *) CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)) {
 115:src/riscv.cpp ****             volatile char c = *(char *) CONSOLE_RX_DATA;
 116:src/riscv.cpp ****             IO::Input.put(c);
 117:src/riscv.cpp ****         }
 118:src/riscv.cpp ****         plic_complete(CONSOLE_IRQ);
 119:src/riscv.cpp ****     }
 120:src/riscv.cpp **** }
 716              		.loc 1 120 1
 717 036c 83308101 		ld	ra,24(sp)
 718              		.cfi_remember_state
 719              		.cfi_restore 1
 720 0370 03340101 		ld	s0,16(sp)
 721              		.cfi_restore 8
 722              		.cfi_def_cfa 2, 32
 723 0374 13010102 		addi	sp,sp,32
 724              		.cfi_def_cfa_offset 0
 725 0378 67800000 		jr	ra
 726              	.L40:
 727              		.cfi_restore_state
 728              	.LBB86:
 729              	.LBB84:
 114:src/riscv.cpp ****         while ((*((char *) CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)) {
 730              		.loc 1 114 9 is_stmt 1
 114:src/riscv.cpp ****         while ((*((char *) CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)) {
GAS LISTING /tmp/ccSROz0M.s 			page 24


 731              		.loc 1 114 67
 114:src/riscv.cpp ****         while ((*((char *) CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)) {
 732              		.loc 1 114 17 is_stmt 0
 733 037c 97070000 		la	a5,CONSOLE_STATUS
 733      83B70700 
 734 0384 83B70700 		ld	a5,0(a5)
 735 0388 83C70700 		lbu	a5,0(a5)
 114:src/riscv.cpp ****         while ((*((char *) CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)) {
 736              		.loc 1 114 67
 737 038c 93F71700 		andi	a5,a5,1
 738 0390 638A0702 		beqz	a5,.L39
 739              	.LBB85:
 115:src/riscv.cpp ****             IO::Input.put(c);
 740              		.loc 1 115 13 is_stmt 1
 115:src/riscv.cpp ****             IO::Input.put(c);
 741              		.loc 1 115 31 is_stmt 0
 742 0394 97070000 		la	a5,CONSOLE_RX_DATA
 742      83B70700 
 743 039c 83B70700 		ld	a5,0(a5)
 744 03a0 83C70700 		lbu	a5,0(a5)
 115:src/riscv.cpp ****             IO::Input.put(c);
 745              		.loc 1 115 27
 746 03a4 A307F4FE 		sb	a5,-17(s0)
 116:src/riscv.cpp ****         }
 747              		.loc 1 116 13 is_stmt 1
 116:src/riscv.cpp ****         }
 748              		.loc 1 116 26 is_stmt 0
 749 03a8 8345F4FE 		lbu	a1,-17(s0)
 750 03ac 93F5F50F 		andi	a1,a1,0xff
 751 03b0 17050000 		la	a0,_ZN2IO5InputE
 751      03350500 
 752 03b8 97000000 		call	_ZN8IOBuffer3putEc@plt
 752      E7800000 
 753              	.LVL67:
 754              	.LBE85:
 114:src/riscv.cpp ****         while ((*((char *) CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT)) {
 755              		.loc 1 114 9
 756 03c0 6FF0DFFB 		j	.L40
 757              	.L39:
 118:src/riscv.cpp ****     }
 758              		.loc 1 118 9 is_stmt 1
 118:src/riscv.cpp ****     }
 759              		.loc 1 118 22 is_stmt 0
 760 03c4 1305A000 		li	a0,10
 761 03c8 97000000 		call	plic_complete@plt
 761      E7800000 
 762              	.LVL68:
 763              	.LBE84:
 764              	.LBE86:
 765              		.loc 1 120 1
 766 03d0 6FF0DFF9 		j	.L37
 767              		.cfi_endproc
 768              	.LFE47:
 770              		.align	2
 771              		.globl	_ZN5Riscv10popSppSpieEv
 773              	_ZN5Riscv10popSppSpieEv:
 774              	.LFB48:
GAS LISTING /tmp/ccSROz0M.s 			page 25


 121:src/riscv.cpp **** 
 122:src/riscv.cpp **** void Riscv::popSppSpie() {
 775              		.loc 1 122 26 is_stmt 1
 776              		.cfi_startproc
 777 03d4 130101FF 		addi	sp,sp,-16
 778              		.cfi_def_cfa_offset 16
 779 03d8 23348100 		sd	s0,8(sp)
 780              		.cfi_offset 8, -8
 781 03dc 13040101 		addi	s0,sp,16
 782              		.cfi_def_cfa 8, 0
 123:src/riscv.cpp ****     Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 783              		.loc 1 123 5
 784              	.LVL69:
 785              	.LBB87:
 786              	.LBB88:
 162:src/../h/riscv.hpp **** }
 787              		.loc 2 162 5
 162:src/../h/riscv.hpp **** }
 788              		.loc 2 162 68 is_stmt 0
 789 03e0 93070010 		li	a5,256
 790              	#APP
 791              	# 162 "src/../h/riscv.hpp" 1
 792              		csrc sstatus, a5
 793              	# 0 "" 2
 794              	.LVL70:
 795              	#NO_APP
 796              	.LBE88:
 797              	.LBE87:
 124:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
 798              		.loc 1 124 5 is_stmt 1
 799              		.loc 1 124 38 is_stmt 0
 800              	#APP
 801              	# 124 "src/riscv.cpp" 1
 125              	    __asm__ volatile("sret");
 802              		csrw sepc, ra
 803              	# 0 "" 2
 804              		.loc 1 125 5 is_stmt 1
 805              		.loc 1 125 29 is_stmt 0
 806              	# 125 "src/riscv.cpp" 1
 126              	}
 807              		sret
 808              	# 0 "" 2
 809              		.loc 1 126 1
 810              	#NO_APP
 811 03f0 03348100 		ld	s0,8(sp)
 812              		.cfi_restore 8
 813              		.cfi_def_cfa 2, 16
 814 03f4 13010101 		addi	sp,sp,16
 815              		.cfi_def_cfa_offset 0
 816 03f8 67800000 		jr	ra
 817              		.cfi_endproc
 818              	.LFE48:
 820              		.align	2
 821              		.globl	_ZN5Riscv14handleReadTrapEv
 823              	_ZN5Riscv14handleReadTrapEv:
 824              	.LFB49:
 127:src/riscv.cpp **** 
GAS LISTING /tmp/ccSROz0M.s 			page 26


 128:src/riscv.cpp **** 
 129:src/riscv.cpp **** __attribute__((unused))
 130:src/riscv.cpp **** void Riscv::handleReadTrap() {
 825              		.loc 1 130 30 is_stmt 1
 826              		.cfi_startproc
 827 03fc 130101FF 		addi	sp,sp,-16
 828              		.cfi_def_cfa_offset 16
 829 0400 23348100 		sd	s0,8(sp)
 830              		.cfi_offset 8, -8
 831 0404 13040101 		addi	s0,sp,16
 832              		.cfi_def_cfa 8, 0
 131:src/riscv.cpp ****     *(volatile char *) CONSOLE_TX_DATA = '!';
 833              		.loc 1 131 5
 834 0408 97070000 		la	a5,CONSOLE_TX_DATA
 834      83B70700 
 835 0410 83B70700 		ld	a5,0(a5)
 836              		.loc 1 131 40 is_stmt 0
 837 0414 13071002 		li	a4,33
 838 0418 2380E700 		sb	a4,0(a5)
 132:src/riscv.cpp ****     *(volatile char *) CONSOLE_TX_DATA = 'r';
 839              		.loc 1 132 5 is_stmt 1
 840              		.loc 1 132 40 is_stmt 0
 841 041c 13072007 		li	a4,114
 842 0420 2380E700 		sb	a4,0(a5)
 133:src/riscv.cpp **** }
 843              		.loc 1 133 1
 844 0424 03348100 		ld	s0,8(sp)
 845              		.cfi_restore 8
 846              		.cfi_def_cfa 2, 16
 847 0428 13010101 		addi	sp,sp,16
 848              		.cfi_def_cfa_offset 0
 849 042c 67800000 		jr	ra
 850              		.cfi_endproc
 851              	.LFE49:
 853              		.align	2
 854              		.globl	_ZN5Riscv15handleWriteTrapEv
 856              	_ZN5Riscv15handleWriteTrapEv:
 857              	.LFB50:
 134:src/riscv.cpp **** 
 135:src/riscv.cpp **** 
 136:src/riscv.cpp **** __attribute__((unused))
 137:src/riscv.cpp **** void Riscv::handleWriteTrap() {
 858              		.loc 1 137 31 is_stmt 1
 859              		.cfi_startproc
 860 0430 130101FF 		addi	sp,sp,-16
 861              		.cfi_def_cfa_offset 16
 862 0434 23348100 		sd	s0,8(sp)
 863              		.cfi_offset 8, -8
 864 0438 13040101 		addi	s0,sp,16
 865              		.cfi_def_cfa 8, 0
 138:src/riscv.cpp ****     *(volatile char *) CONSOLE_TX_DATA = '!';
 866              		.loc 1 138 5
 867 043c 97070000 		la	a5,CONSOLE_TX_DATA
 867      83B70700 
 868 0444 83B70700 		ld	a5,0(a5)
 869              		.loc 1 138 40 is_stmt 0
 870 0448 13071002 		li	a4,33
GAS LISTING /tmp/ccSROz0M.s 			page 27


 871 044c 2380E700 		sb	a4,0(a5)
 139:src/riscv.cpp ****     *(volatile char *) CONSOLE_TX_DATA = 'w';
 872              		.loc 1 139 5 is_stmt 1
 873              		.loc 1 139 40 is_stmt 0
 874 0450 13077007 		li	a4,119
 875 0454 2380E700 		sb	a4,0(a5)
 140:src/riscv.cpp **** }...
 876              		.loc 1 140 1
 877 0458 03348100 		ld	s0,8(sp)
 878              		.cfi_restore 8
 879              		.cfi_def_cfa 2, 16
 880 045c 13010101 		addi	sp,sp,16
 881              		.cfi_def_cfa_offset 0
 882 0460 67800000 		jr	ra
 883              		.cfi_endproc
 884              	.LFE50:
 886              	.Letext0:
 887              		.file 7 "src/../lib/hw.h"
 888              		.file 8 "src/../h/syscall_c.hpp"
 889              		.file 9 "src/../h/c_semaphore.hpp"
 890              		.file 10 "src/../h/c_memory.hpp"
 891              		.file 11 "src/../h/c_sleep.hpp"
GAS LISTING /tmp/ccSROz0M.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccSROz0M.s:14     .text:0000000000000000 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccSROz0M.s:18     .text:0000000000000000 .L0 
     /tmp/ccSROz0M.s:19     .text:0000000000000000 .L0 
     /tmp/ccSROz0M.s:20     .text:0000000000000004 .L0 
     /tmp/ccSROz0M.s:30     .text:0000000000000028 .L0 
     /tmp/ccSROz0M.s:31     .text:0000000000000028 .L0 
     /tmp/ccSROz0M.s:32     .text:0000000000000028 .L0 
     /tmp/ccSROz0M.s:33     .text:0000000000000028 .L0 
     /tmp/ccSROz0M.s:34     .text:0000000000000028 .L0 
     /tmp/ccSROz0M.s:35     .text:0000000000000028 .L0 
     /tmp/ccSROz0M.s:36     .text:0000000000000028 .L0 
     /tmp/ccSROz0M.s:37     .text:0000000000000028 .L0 
     /tmp/ccSROz0M.s:38     .text:0000000000000028 .L0 
     /tmp/ccSROz0M.s:40     .text:000000000000002c .L0 
     /tmp/ccSROz0M.s:42     .text:000000000000002c .L0 
     /tmp/ccSROz0M.s:43     .text:000000000000002c .L0 
       src/riscv.cpp:12     .text:000000000000002c .L0 
     /tmp/ccSROz0M.s:50     .text:0000000000000030 .L0 
       src/riscv.cpp:13     .text:0000000000000030 .L0 
     /tmp/ccSROz0M.s:56     .text:0000000000000034 .L0 
       src/riscv.cpp:14     .text:0000000000000034 .L0 
     /tmp/ccSROz0M.s:62     .text:0000000000000038 .L0 
       src/riscv.cpp:15     .text:0000000000000038 .L0 
     /tmp/ccSROz0M.s:68     .text:000000000000003c .L0 
       src/riscv.cpp:16     .text:000000000000003c .L0 
     /tmp/ccSROz0M.s:78     .text:0000000000000040 .L0 
     /tmp/ccSROz0M.s:79     .text:0000000000000040 .L0 
     /tmp/ccSROz0M.s:80     .text:0000000000000040 .L0 
  src/../h/riscv.hpp:167    .text:0000000000000040 .L0 
     /tmp/ccSROz0M.s:88     .text:0000000000000048 .L0 
     /tmp/ccSROz0M.s:89     .text:0000000000000048 .L0 
     /tmp/ccSROz0M.s:96     .text:000000000000004c .L0 
     /tmp/ccSROz0M.s:97     .text:000000000000004c .L0 
     /tmp/ccSROz0M.s:98     .text:000000000000004c .L0 
  src/../h/riscv.hpp:111    .text:000000000000004c .L0 
     /tmp/ccSROz0M.s:106    .text:0000000000000054 .L0 
     /tmp/ccSROz0M.s:107    .text:0000000000000054 .L0 
     /tmp/ccSROz0M.s:114    .text:0000000000000058 .L0 
     /tmp/ccSROz0M.s:115    .text:0000000000000058 .L0 
     /tmp/ccSROz0M.s:116    .text:0000000000000058 .L0 
  src/../h/riscv.hpp:101    .text:0000000000000058 .L0 
     /tmp/ccSROz0M.s:124    .text:0000000000000060 .L0 
     /tmp/ccSROz0M.s:125    .text:0000000000000060 .L0 
     /tmp/ccSROz0M.s:129    .text:0000000000000064 .L0 
     /tmp/ccSROz0M.s:133    .text:000000000000006c .L0 
     /tmp/ccSROz0M.s:217    .text:0000000000000090 .L0 
     /tmp/ccSROz0M.s:218    .text:0000000000000090 .L0 
     /tmp/ccSROz0M.s:222    .text:00000000000000a0 .L0 
     /tmp/ccSROz0M.s:223    .text:00000000000000a0 .L0 
     /tmp/ccSROz0M.s:229    .text:00000000000000ac .L0 
     /tmp/ccSROz0M.s:230    .text:00000000000000ac .L0 
     /tmp/ccSROz0M.s:231    .text:00000000000000ac .L0 
     /tmp/ccSROz0M.s:236    .text:00000000000000b8 .L0 
     /tmp/ccSROz0M.s:237    .text:00000000000000b8 .L0 
     /tmp/ccSROz0M.s:238    .text:00000000000000b8 .L0 
GAS LISTING /tmp/ccSROz0M.s 			page 29


     /tmp/ccSROz0M.s:243    .text:00000000000000bc .L0 
  src/../h/riscv.hpp:116    .text:00000000000000bc .L0 
     /tmp/ccSROz0M.s:255    .text:00000000000000c0 .L0 
     /tmp/ccSROz0M.s:256    .text:00000000000000c0 .L0 
  src/../h/riscv.hpp:172    .text:00000000000000c0 .L0 
     /tmp/ccSROz0M.s:266    .text:00000000000000c4 .L0 
     /tmp/ccSROz0M.s:267    .text:00000000000000c8 .L0 
     /tmp/ccSROz0M.s:268    .text:00000000000000c8 .L0 
     /tmp/ccSROz0M.s:270    .text:00000000000000cc .L0 
     /tmp/ccSROz0M.s:271    .text:00000000000000cc .L0 
     /tmp/ccSROz0M.s:273    .text:00000000000000d0 .L0 
     /tmp/ccSROz0M.s:275    .text:00000000000000d4 .L0 
     /tmp/ccSROz0M.s:278    .text:00000000000000d8 .L0 
     /tmp/ccSROz0M.s:281    .text:00000000000000dc .L0 
     /tmp/ccSROz0M.s:284    .text:00000000000000e0 .L0 
     /tmp/ccSROz0M.s:287    .text:00000000000000e4 .L0 
     /tmp/ccSROz0M.s:290    .text:00000000000000e8 .L0 
     /tmp/ccSROz0M.s:293    .text:00000000000000ec .L0 
     /tmp/ccSROz0M.s:297    .text:00000000000000f0 .L0 
     /tmp/ccSROz0M.s:299    .text:00000000000000f0 .L0 
     /tmp/ccSROz0M.s:300    .text:00000000000000f0 .L0 
     /tmp/ccSROz0M.s:301    .text:00000000000000f0 .L0 
     /tmp/ccSROz0M.s:305    .text:00000000000000fc .L0 
     /tmp/ccSROz0M.s:308    .text:0000000000000100 .L0 
     /tmp/ccSROz0M.s:309    .text:0000000000000100 .L0 
     /tmp/ccSROz0M.s:310    .text:0000000000000100 .L0 
     /tmp/ccSROz0M.s:317    .text:0000000000000118 .L0 
     /tmp/ccSROz0M.s:320    .text:000000000000011c .L0 
     /tmp/ccSROz0M.s:321    .text:000000000000011c .L0 
     /tmp/ccSROz0M.s:322    .text:000000000000011c .L0 
     /tmp/ccSROz0M.s:325    .text:0000000000000124 .L0 
     /tmp/ccSROz0M.s:328    .text:0000000000000128 .L0 
     /tmp/ccSROz0M.s:329    .text:0000000000000128 .L0 
     /tmp/ccSROz0M.s:330    .text:0000000000000128 .L0 
     /tmp/ccSROz0M.s:333    .text:0000000000000130 .L0 
     /tmp/ccSROz0M.s:336    .text:0000000000000134 .L0 
     /tmp/ccSROz0M.s:337    .text:0000000000000134 .L0 
     /tmp/ccSROz0M.s:338    .text:0000000000000134 .L0 
     /tmp/ccSROz0M.s:342    .text:0000000000000140 .L0 
     /tmp/ccSROz0M.s:345    .text:0000000000000144 .L0 
     /tmp/ccSROz0M.s:346    .text:0000000000000144 .L0 
     /tmp/ccSROz0M.s:347    .text:0000000000000144 .L0 
     /tmp/ccSROz0M.s:352    .text:0000000000000154 .L0 
     /tmp/ccSROz0M.s:355    .text:0000000000000158 .L0 
     /tmp/ccSROz0M.s:356    .text:0000000000000158 .L0 
     /tmp/ccSROz0M.s:357    .text:0000000000000158 .L0 
     /tmp/ccSROz0M.s:360    .text:0000000000000160 .L0 
     /tmp/ccSROz0M.s:363    .text:0000000000000164 .L0 
     /tmp/ccSROz0M.s:364    .text:0000000000000164 .L0 
     /tmp/ccSROz0M.s:365    .text:0000000000000164 .L0 
     /tmp/ccSROz0M.s:369    .text:0000000000000170 .L0 
     /tmp/ccSROz0M.s:372    .text:0000000000000174 .L0 
     /tmp/ccSROz0M.s:373    .text:0000000000000174 .L0 
     /tmp/ccSROz0M.s:374    .text:0000000000000174 .L0 
     /tmp/ccSROz0M.s:379    .text:0000000000000184 .L0 
     /tmp/ccSROz0M.s:382    .text:0000000000000188 .L0 
     /tmp/ccSROz0M.s:383    .text:0000000000000188 .L0 
GAS LISTING /tmp/ccSROz0M.s 			page 30


     /tmp/ccSROz0M.s:384    .text:0000000000000188 .L0 
     /tmp/ccSROz0M.s:388    .text:0000000000000194 .L0 
     /tmp/ccSROz0M.s:391    .text:0000000000000198 .L0 
     /tmp/ccSROz0M.s:392    .text:0000000000000198 .L0 
     /tmp/ccSROz0M.s:393    .text:0000000000000198 .L0 
     /tmp/ccSROz0M.s:397    .text:00000000000001a4 .L0 
     /tmp/ccSROz0M.s:400    .text:00000000000001a8 .L0 
     /tmp/ccSROz0M.s:401    .text:00000000000001a8 .L0 
     /tmp/ccSROz0M.s:402    .text:00000000000001a8 .L0 
     /tmp/ccSROz0M.s:406    .text:00000000000001b4 .L0 
     /tmp/ccSROz0M.s:409    .text:00000000000001b8 .L0 
     /tmp/ccSROz0M.s:410    .text:00000000000001b8 .L0 
     /tmp/ccSROz0M.s:411    .text:00000000000001b8 .L0 
     /tmp/ccSROz0M.s:415    .text:00000000000001c4 .L0 
     /tmp/ccSROz0M.s:416    .text:00000000000001c4 .L0 
     /tmp/ccSROz0M.s:420    .text:00000000000001d0 .L0 
     /tmp/ccSROz0M.s:423    .text:00000000000001d4 .L0 
     /tmp/ccSROz0M.s:424    .text:00000000000001d4 .L0 
     /tmp/ccSROz0M.s:425    .text:00000000000001d4 .L0 
     /tmp/ccSROz0M.s:429    .text:00000000000001e0 .L0 
     /tmp/ccSROz0M.s:432    .text:00000000000001e4 .L0 
     /tmp/ccSROz0M.s:433    .text:00000000000001e4 .L0 
     /tmp/ccSROz0M.s:434    .text:00000000000001e4 .L0 
     /tmp/ccSROz0M.s:438    .text:00000000000001f0 .L0 
     /tmp/ccSROz0M.s:441    .text:00000000000001f4 .L0 
     /tmp/ccSROz0M.s:442    .text:00000000000001f4 .L0 
     /tmp/ccSROz0M.s:443    .text:00000000000001f4 .L0 
     /tmp/ccSROz0M.s:446    .text:00000000000001fc .L0 
     /tmp/ccSROz0M.s:449    .text:0000000000000200 .L0 
     /tmp/ccSROz0M.s:450    .text:0000000000000200 .L0 
     /tmp/ccSROz0M.s:451    .text:0000000000000200 .L0 
     /tmp/ccSROz0M.s:455    .text:000000000000020c .L0 
     /tmp/ccSROz0M.s:456    .text:0000000000000210 .L0 
     /tmp/ccSROz0M.s:462    .text:0000000000000210 _ZN5Riscv15handleTimerTrapEv
     /tmp/ccSROz0M.s:465    .text:0000000000000210 .L0 
     /tmp/ccSROz0M.s:466    .text:0000000000000210 .L0 
     /tmp/ccSROz0M.s:467    .text:0000000000000214 .L0 
     /tmp/ccSROz0M.s:470    .text:000000000000021c .L0 
     /tmp/ccSROz0M.s:471    .text:000000000000021c .L0 
     /tmp/ccSROz0M.s:473    .text:0000000000000220 .L0 
     /tmp/ccSROz0M.s:476    .text:0000000000000220 .L0 
     /tmp/ccSROz0M.s:477    .text:0000000000000220 .L0 
     /tmp/ccSROz0M.s:478    .text:0000000000000220 .L0 
     /tmp/ccSROz0M.s:482    .text:0000000000000230 .L0 
     /tmp/ccSROz0M.s:491    .text:0000000000000238 .L0 
     /tmp/ccSROz0M.s:492    .text:0000000000000238 .L0 
     /tmp/ccSROz0M.s:499    .text:0000000000000244 .L0 
     /tmp/ccSROz0M.s:502    .text:0000000000000248 .L0 
     /tmp/ccSROz0M.s:503    .text:0000000000000248 .L0 
     /tmp/ccSROz0M.s:507    .text:0000000000000258 .L0 
     /tmp/ccSROz0M.s:510    .text:0000000000000264 .L0 
     /tmp/ccSROz0M.s:513    .text:0000000000000268 .L0 
     /tmp/ccSROz0M.s:519    .text:000000000000026c .L0 
     /tmp/ccSROz0M.s:520    .text:000000000000026c .L0 
     /tmp/ccSROz0M.s:521    .text:000000000000026c .L0 
     /tmp/ccSROz0M.s:531    .text:0000000000000274 .L0 
     /tmp/ccSROz0M.s:532    .text:0000000000000274 .L0 
GAS LISTING /tmp/ccSROz0M.s 			page 31


     /tmp/ccSROz0M.s:537    .text:0000000000000280 .L0 
     /tmp/ccSROz0M.s:538    .text:0000000000000280 .L0 
     /tmp/ccSROz0M.s:543    .text:0000000000000294 .L0 
     /tmp/ccSROz0M.s:544    .text:0000000000000294 .L0 
     /tmp/ccSROz0M.s:551    .text:00000000000002a0 .L0 
     /tmp/ccSROz0M.s:552    .text:00000000000002a0 .L0 
     /tmp/ccSROz0M.s:557    .text:00000000000002a4 .L0 
     /tmp/ccSROz0M.s:560    .text:00000000000002a8 .L0 
     /tmp/ccSROz0M.s:561    .text:00000000000002ac .L0 
     /tmp/ccSROz0M.s:562    .text:00000000000002ac .L0 
     /tmp/ccSROz0M.s:564    .text:00000000000002b0 .L0 
     /tmp/ccSROz0M.s:565    .text:00000000000002b0 .L0 
     /tmp/ccSROz0M.s:567    .text:00000000000002b4 .L0 
     /tmp/ccSROz0M.s:571    .text:00000000000002b8 .L0 
     /tmp/ccSROz0M.s:576    .text:00000000000002b8 .L0 
     /tmp/ccSROz0M.s:577    .text:00000000000002b8 .L0 
     /tmp/ccSROz0M.s:578    .text:00000000000002b8 .L0 
     /tmp/ccSROz0M.s:583    .text:00000000000002bc .L0 
     /tmp/ccSROz0M.s:584    .text:00000000000002bc .L0 
     /tmp/ccSROz0M.s:589    .text:00000000000002c4 .L0 
     /tmp/ccSROz0M.s:590    .text:00000000000002c4 .L0 
     /tmp/ccSROz0M.s:591    .text:00000000000002c4 .L0 
     /tmp/ccSROz0M.s:594    .text:00000000000002cc .L0 
     /tmp/ccSROz0M.s:596    .text:00000000000002d0 .L0 
     /tmp/ccSROz0M.s:599    .text:00000000000002d8 .L0 
     /tmp/ccSROz0M.s:602    .text:00000000000002dc .L0 
     /tmp/ccSROz0M.s:603    .text:00000000000002dc .L0 
     /tmp/ccSROz0M.s:608    .text:00000000000002e4 .L0 
     /tmp/ccSROz0M.s:609    .text:00000000000002e4 .L0 
     /tmp/ccSROz0M.s:610    .text:00000000000002e4 .L0 
     /tmp/ccSROz0M.s:615    .text:00000000000002e8 .L0 
     /tmp/ccSROz0M.s:621    .text:00000000000002f0 .L0 
     /tmp/ccSROz0M.s:622    .text:00000000000002f0 .L0 
     /tmp/ccSROz0M.s:634    .text:00000000000002fc .L0 
     /tmp/ccSROz0M.s:635    .text:00000000000002fc .L0 
     /tmp/ccSROz0M.s:641    .text:0000000000000308 .L0 
     /tmp/ccSROz0M.s:646    .text:000000000000030c .L0 
     /tmp/ccSROz0M.s:652    .text:0000000000000318 .L0 
     /tmp/ccSROz0M.s:657    .text:000000000000031c .L0 
     /tmp/ccSROz0M.s:663    .text:0000000000000328 .L0 
     /tmp/ccSROz0M.s:668    .text:000000000000032c .L0 
     /tmp/ccSROz0M.s:669    .text:000000000000032c .L0 
     /tmp/ccSROz0M.s:675    .text:0000000000000338 .L0 
     /tmp/ccSROz0M.s:676    .text:0000000000000338 .L0 
     /tmp/ccSROz0M.s:677    .text:0000000000000338 .L0 
     /tmp/ccSROz0M.s:683    .text:0000000000000340 .L0 
     /tmp/ccSROz0M.s:684    .text:0000000000000340 .L0 
     /tmp/ccSROz0M.s:687    .text:0000000000000348 .L0 
     /tmp/ccSROz0M.s:688    .text:000000000000034c .L0 
     /tmp/ccSROz0M.s:694    .text:000000000000034c _ZN5Riscv17handleConsoleTrapEv
     /tmp/ccSROz0M.s:697    .text:000000000000034c .L0 
     /tmp/ccSROz0M.s:698    .text:000000000000034c .L0 
     /tmp/ccSROz0M.s:699    .text:0000000000000350 .L0 
     /tmp/ccSROz0M.s:702    .text:0000000000000358 .L0 
     /tmp/ccSROz0M.s:703    .text:0000000000000358 .L0 
     /tmp/ccSROz0M.s:705    .text:000000000000035c .L0 
     /tmp/ccSROz0M.s:708    .text:000000000000035c .L0 
GAS LISTING /tmp/ccSROz0M.s 			page 32


     /tmp/ccSROz0M.s:709    .text:000000000000035c .L0 
     /tmp/ccSROz0M.s:712    .text:0000000000000364 .L0 
     /tmp/ccSROz0M.s:717    .text:000000000000036c .L0 
     /tmp/ccSROz0M.s:718    .text:0000000000000370 .L0 
     /tmp/ccSROz0M.s:719    .text:0000000000000370 .L0 
     /tmp/ccSROz0M.s:721    .text:0000000000000374 .L0 
     /tmp/ccSROz0M.s:722    .text:0000000000000374 .L0 
     /tmp/ccSROz0M.s:724    .text:0000000000000378 .L0 
     /tmp/ccSROz0M.s:727    .text:000000000000037c .L0 
     /tmp/ccSROz0M.s:731    .text:000000000000037c .L0 
     /tmp/ccSROz0M.s:732    .text:000000000000037c .L0 
     /tmp/ccSROz0M.s:733    .text:000000000000037c .L0 
     /tmp/ccSROz0M.s:737    .text:000000000000038c .L0 
     /tmp/ccSROz0M.s:741    .text:0000000000000394 .L0 
     /tmp/ccSROz0M.s:742    .text:0000000000000394 .L0 
     /tmp/ccSROz0M.s:746    .text:00000000000003a4 .L0 
     /tmp/ccSROz0M.s:748    .text:00000000000003a8 .L0 
     /tmp/ccSROz0M.s:749    .text:00000000000003a8 .L0 
     /tmp/ccSROz0M.s:756    .text:00000000000003c0 .L0 
     /tmp/ccSROz0M.s:759    .text:00000000000003c4 .L0 
     /tmp/ccSROz0M.s:760    .text:00000000000003c4 .L0 
     /tmp/ccSROz0M.s:766    .text:00000000000003d0 .L0 
     /tmp/ccSROz0M.s:767    .text:00000000000003d4 .L0 
     /tmp/ccSROz0M.s:773    .text:00000000000003d4 _ZN5Riscv10popSppSpieEv
     /tmp/ccSROz0M.s:776    .text:00000000000003d4 .L0 
     /tmp/ccSROz0M.s:777    .text:00000000000003d4 .L0 
     /tmp/ccSROz0M.s:778    .text:00000000000003d8 .L0 
     /tmp/ccSROz0M.s:780    .text:00000000000003dc .L0 
     /tmp/ccSROz0M.s:782    .text:00000000000003e0 .L0 
     /tmp/ccSROz0M.s:787    .text:00000000000003e0 .L0 
     /tmp/ccSROz0M.s:788    .text:00000000000003e0 .L0 
     /tmp/ccSROz0M.s:789    .text:00000000000003e0 .L0 
     /tmp/ccSROz0M.s:799    .text:00000000000003e8 .L0 
       src/riscv.cpp:124    .text:00000000000003e8 .L0 
     /tmp/ccSROz0M.s:805    .text:00000000000003ec .L0 
       src/riscv.cpp:125    .text:00000000000003ec .L0 
     /tmp/ccSROz0M.s:811    .text:00000000000003f0 .L0 
     /tmp/ccSROz0M.s:812    .text:00000000000003f4 .L0 
     /tmp/ccSROz0M.s:813    .text:00000000000003f4 .L0 
     /tmp/ccSROz0M.s:815    .text:00000000000003f8 .L0 
     /tmp/ccSROz0M.s:817    .text:00000000000003fc .L0 
     /tmp/ccSROz0M.s:823    .text:00000000000003fc _ZN5Riscv14handleReadTrapEv
     /tmp/ccSROz0M.s:826    .text:00000000000003fc .L0 
     /tmp/ccSROz0M.s:827    .text:00000000000003fc .L0 
     /tmp/ccSROz0M.s:828    .text:0000000000000400 .L0 
     /tmp/ccSROz0M.s:830    .text:0000000000000404 .L0 
     /tmp/ccSROz0M.s:832    .text:0000000000000408 .L0 
     /tmp/ccSROz0M.s:834    .text:0000000000000408 .L0 
     /tmp/ccSROz0M.s:837    .text:0000000000000414 .L0 
     /tmp/ccSROz0M.s:840    .text:000000000000041c .L0 
     /tmp/ccSROz0M.s:841    .text:000000000000041c .L0 
     /tmp/ccSROz0M.s:844    .text:0000000000000424 .L0 
     /tmp/ccSROz0M.s:845    .text:0000000000000428 .L0 
     /tmp/ccSROz0M.s:846    .text:0000000000000428 .L0 
     /tmp/ccSROz0M.s:848    .text:000000000000042c .L0 
     /tmp/ccSROz0M.s:850    .text:0000000000000430 .L0 
     /tmp/ccSROz0M.s:856    .text:0000000000000430 _ZN5Riscv15handleWriteTrapEv
GAS LISTING /tmp/ccSROz0M.s 			page 33


     /tmp/ccSROz0M.s:859    .text:0000000000000430 .L0 
     /tmp/ccSROz0M.s:860    .text:0000000000000430 .L0 
     /tmp/ccSROz0M.s:861    .text:0000000000000434 .L0 
     /tmp/ccSROz0M.s:863    .text:0000000000000438 .L0 
     /tmp/ccSROz0M.s:865    .text:000000000000043c .L0 
     /tmp/ccSROz0M.s:867    .text:000000000000043c .L0 
     /tmp/ccSROz0M.s:870    .text:0000000000000448 .L0 
     /tmp/ccSROz0M.s:873    .text:0000000000000450 .L0 
     /tmp/ccSROz0M.s:874    .text:0000000000000450 .L0 
     /tmp/ccSROz0M.s:877    .text:0000000000000458 .L0 
     /tmp/ccSROz0M.s:878    .text:000000000000045c .L0 
     /tmp/ccSROz0M.s:879    .text:000000000000045c .L0 
     /tmp/ccSROz0M.s:881    .text:0000000000000460 .L0 
     /tmp/ccSROz0M.s:883    .text:0000000000000464 .L0 
     /tmp/ccSROz0M.s:892    .text:0000000000000464 .L0 
     /tmp/ccSROz0M.s:145    .rodata:0000000000000000 .L5
     /tmp/ccSROz0M.s:137    .text:0000000000000078 .L0 
     /tmp/ccSROz0M.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccSROz0M.s:218    .text:0000000000000090 .L0 
     /tmp/ccSROz0M.s:478    .text:0000000000000220 .L0 
     /tmp/ccSROz0M.s:492    .text:0000000000000238 .L0 
     /tmp/ccSROz0M.s:503    .text:0000000000000248 .L0 
     /tmp/ccSROz0M.s:507    .text:0000000000000258 .L0 
     /tmp/ccSROz0M.s:538    .text:0000000000000280 .L0 
     /tmp/ccSROz0M.s:544    .text:0000000000000294 .L0 
     /tmp/ccSROz0M.s:635    .text:00000000000002fc .L0 
     /tmp/ccSROz0M.s:646    .text:000000000000030c .L0 
     /tmp/ccSROz0M.s:657    .text:000000000000031c .L0 
     /tmp/ccSROz0M.s:669    .text:000000000000032c .L0 
     /tmp/ccSROz0M.s:733    .text:000000000000037c .L0 
     /tmp/ccSROz0M.s:742    .text:0000000000000394 .L0 
     /tmp/ccSROz0M.s:751    .text:00000000000003b0 .L0 
     /tmp/ccSROz0M.s:834    .text:0000000000000408 .L0 
     /tmp/ccSROz0M.s:867    .text:000000000000043c .L0 
     /tmp/ccSROz0M.s:215    .text:0000000000000090 .L24
     /tmp/ccSROz0M.s:235    .text:00000000000000b8 .L3
     /tmp/ccSROz0M.s:131    .text:000000000000006c .L2
     /tmp/ccSROz0M.s:515    .text:000000000000026c .L26
     /tmp/ccSROz0M.s:474    .text:0000000000000220 .L27
     /tmp/ccSROz0M.s:586    .text:00000000000002c4 .L28
     /tmp/ccSROz0M.s:626    .text:00000000000002fc .L31
     /tmp/ccSROz0M.s:535    .text:0000000000000280 .L29
     /tmp/ccSROz0M.s:570    .text:00000000000002b8 .L33
     /tmp/ccSROz0M.s:664    .text:000000000000032c .L35
     /tmp/ccSROz0M.s:558    .text:00000000000002a8 .L25
     /tmp/ccSROz0M.s:726    .text:000000000000037c .L40
     /tmp/ccSROz0M.s:757    .text:00000000000003c4 .L39
     /tmp/ccSROz0M.s:714    .text:000000000000036c .L37
     /tmp/ccSROz0M.s:227    .text:00000000000000ac .L22
     /tmp/ccSROz0M.s:296    .text:00000000000000f0 .L21
     /tmp/ccSROz0M.s:306    .text:0000000000000100 .L20
     /tmp/ccSROz0M.s:318    .text:000000000000011c .L19
     /tmp/ccSROz0M.s:326    .text:0000000000000128 .L18
     /tmp/ccSROz0M.s:334    .text:0000000000000134 .L17
     /tmp/ccSROz0M.s:343    .text:0000000000000144 .L16
     /tmp/ccSROz0M.s:353    .text:0000000000000158 .L15
     /tmp/ccSROz0M.s:361    .text:0000000000000164 .L14
GAS LISTING /tmp/ccSROz0M.s 			page 34


     /tmp/ccSROz0M.s:370    .text:0000000000000174 .L13
     /tmp/ccSROz0M.s:380    .text:0000000000000188 .L12
     /tmp/ccSROz0M.s:389    .text:0000000000000198 .L11
     /tmp/ccSROz0M.s:398    .text:00000000000001a8 .L10
     /tmp/ccSROz0M.s:407    .text:00000000000001b8 .L9
     /tmp/ccSROz0M.s:421    .text:00000000000001d4 .L8
     /tmp/ccSROz0M.s:430    .text:00000000000001e4 .L7
     /tmp/ccSROz0M.s:439    .text:00000000000001f4 .L6
     /tmp/ccSROz0M.s:447    .text:0000000000000200 .L4
     /tmp/ccSROz0M.s:3647   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccSROz0M.s:5454   .debug_str:0000000000000d6d .LASF290
     /tmp/ccSROz0M.s:5544   .debug_str:0000000000001124 .LASF291
     /tmp/ccSROz0M.s:5150   .debug_str:00000000000004c3 .LASF292
     /tmp/ccSROz0M.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccSROz0M.s:886    .text:0000000000000464 .Letext0
     /tmp/ccSROz0M.s:4992   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccSROz0M.s:5188   .debug_str:0000000000000638 .LASF0
     /tmp/ccSROz0M.s:5240   .debug_str:0000000000000791 .LASF1
     /tmp/ccSROz0M.s:5376   .debug_str:0000000000000b32 .LASF2
     /tmp/ccSROz0M.s:5386   .debug_str:0000000000000b7d .LASF4
     /tmp/ccSROz0M.s:5208   .debug_str:00000000000006c8 .LASF3
     /tmp/ccSROz0M.s:5014   .debug_str:00000000000000a0 .LASF5
     /tmp/ccSROz0M.s:5338   .debug_str:0000000000000a2f .LASF6
     /tmp/ccSROz0M.s:5326   .debug_str:00000000000009d2 .LASF7
     /tmp/ccSROz0M.s:5226   .debug_str:0000000000000740 .LASF8
     /tmp/ccSROz0M.s:5148   .debug_str:00000000000004b3 .LASF9
     /tmp/ccSROz0M.s:5160   .debug_str:0000000000000540 .LASF10
     /tmp/ccSROz0M.s:5060   .debug_str:00000000000001fd .LASF11
     /tmp/ccSROz0M.s:5136   .debug_str:0000000000000469 .LASF12
     /tmp/ccSROz0M.s:5082   .debug_str:00000000000002a4 .LASF13
     /tmp/ccSROz0M.s:5058   .debug_str:00000000000001ed .LASF14
     /tmp/ccSROz0M.s:5428   .debug_str:0000000000000cc5 .LASF15
     /tmp/ccSROz0M.s:5116   .debug_str:00000000000003bb .LASF16
     /tmp/ccSROz0M.s:5410   .debug_str:0000000000000c40 .LASF17
     /tmp/ccSROz0M.s:5012   .debug_str:0000000000000092 .LASF137
     /tmp/ccSROz0M.s:5584   .debug_str:0000000000001284 .LASF18
     /tmp/ccSROz0M.s:5144   .debug_str:00000000000004a0 .LASF19
     /tmp/ccSROz0M.s:5408   .debug_str:0000000000000c32 .LASF20
     /tmp/ccSROz0M.s:5342   .debug_str:0000000000000a49 .LASF21
     /tmp/ccSROz0M.s:5090   .debug_str:00000000000002f6 .LASF22
     /tmp/ccSROz0M.s:5382   .debug_str:0000000000000b58 .LASF23
     /tmp/ccSROz0M.s:5446   .debug_str:0000000000000d3a .LASF24
     /tmp/ccSROz0M.s:5158   .debug_str:0000000000000534 .LASF25
     /tmp/ccSROz0M.s:5010   .debug_str:0000000000000086 .LASF26
     /tmp/ccSROz0M.s:5064   .debug_str:0000000000000211 .LASF27
     /tmp/ccSROz0M.s:5072   .debug_str:0000000000000258 .LASF28
     /tmp/ccSROz0M.s:5298   .debug_str:000000000000091e .LASF29
     /tmp/ccSROz0M.s:5440   .debug_str:0000000000000d13 .LASF30
     /tmp/ccSROz0M.s:5496   .debug_str:0000000000000f92 .LASF31
     /tmp/ccSROz0M.s:5556   .debug_str:0000000000001185 .LASF32
     /tmp/ccSROz0M.s:4996   .debug_str:000000000000000b .LASF33
     /tmp/ccSROz0M.s:5216   .debug_str:00000000000006fc .LASF34
     /tmp/ccSROz0M.s:5292   .debug_str:00000000000008f7 .LASF35
     /tmp/ccSROz0M.s:5522   .debug_str:0000000000001089 .LASF36
     /tmp/ccSROz0M.s:5246   .debug_str:00000000000007be .LASF44
     /tmp/ccSROz0M.s:5006   .debug_str:000000000000004c .LASF46
     /tmp/ccSROz0M.s:5448   .debug_str:0000000000000d4b .LASF37
GAS LISTING /tmp/ccSROz0M.s 			page 35


     /tmp/ccSROz0M.s:5268   .debug_str:0000000000000851 .LASF39
     /tmp/ccSROz0M.s:5406   .debug_str:0000000000000c21 .LASF38
     /tmp/ccSROz0M.s:5460   .debug_str:0000000000000e48 .LASF40
     /tmp/ccSROz0M.s:5300   .debug_str:0000000000000927 .LASF41
     /tmp/ccSROz0M.s:5162   .debug_str:000000000000054e .LASF42
     /tmp/ccSROz0M.s:5230   .debug_str:000000000000075c .LASF43
     /tmp/ccSROz0M.s:5040   .debug_str:000000000000018b .LASF121
     /tmp/ccSROz0M.s:5304   .debug_str:0000000000000939 .LASF123
     /tmp/ccSROz0M.s:5476   .debug_str:0000000000000f0f .LASF45
     /tmp/ccSROz0M.s:5520   .debug_str:0000000000001077 .LASF47
     /tmp/ccSROz0M.s:5328   .debug_str:00000000000009e5 .LASF48
     /tmp/ccSROz0M.s:5574   .debug_str:0000000000001223 .LASF49
     /tmp/ccSROz0M.s:5260   .debug_str:0000000000000826 .LASF50
     /tmp/ccSROz0M.s:5086   .debug_str:00000000000002b9 .LASF51
     /tmp/ccSROz0M.s:5244   .debug_str:00000000000007b8 .LASF52
     /tmp/ccSROz0M.s:5462   .debug_str:0000000000000e64 .LASF53
     /tmp/ccSROz0M.s:5272   .debug_str:0000000000000870 .LASF54
     /tmp/ccSROz0M.s:5470   .debug_str:0000000000000eae .LASF55
     /tmp/ccSROz0M.s:5528   .debug_str:00000000000010c3 .LASF56
     /tmp/ccSROz0M.s:5096   .debug_str:000000000000031e .LASF57
     /tmp/ccSROz0M.s:5274   .debug_str:000000000000087f .LASF58
     /tmp/ccSROz0M.s:5430   .debug_str:0000000000000cd1 .LASF59
     /tmp/ccSROz0M.s:5478   .debug_str:0000000000000f15 .LASF60
     /tmp/ccSROz0M.s:5512   .debug_str:0000000000001022 .LASF62
     /tmp/ccSROz0M.s:5550   .debug_str:000000000000115a .LASF61
     /tmp/ccSROz0M.s:5032   .debug_str:0000000000000114 .LASF63
     /tmp/ccSROz0M.s:5336   .debug_str:0000000000000a23 .LASF64
     /tmp/ccSROz0M.s:5088   .debug_str:00000000000002de .LASF65
     /tmp/ccSROz0M.s:5266   .debug_str:0000000000000847 .LASF66
     /tmp/ccSROz0M.s:5562   .debug_str:00000000000011bd .LASF67
     /tmp/ccSROz0M.s:5320   .debug_str:0000000000000998 .LASF68
     /tmp/ccSROz0M.s:5294   .debug_str:00000000000008fc .LASF69
     /tmp/ccSROz0M.s:5056   .debug_str:00000000000001df .LASF70
     /tmp/ccSROz0M.s:5186   .debug_str:0000000000000632 .LASF71
     /tmp/ccSROz0M.s:5016   .debug_str:00000000000000a7 .LASF72
     /tmp/ccSROz0M.s:5028   .debug_str:0000000000000102 .LASF73
     /tmp/ccSROz0M.s:5392   .debug_str:0000000000000b9e .LASF74
     /tmp/ccSROz0M.s:5310   .debug_str:000000000000095b .LASF75
     /tmp/ccSROz0M.s:5054   .debug_str:00000000000001ce .LASF76
     /tmp/ccSROz0M.s:5270   .debug_str:0000000000000869 .LASF77
     /tmp/ccSROz0M.s:5134   .debug_str:0000000000000458 .LASF78
     /tmp/ccSROz0M.s:5424   .debug_str:0000000000000ca3 .LASF79
     /tmp/ccSROz0M.s:5198   .debug_str:0000000000000661 .LASF80
     /tmp/ccSROz0M.s:5024   .debug_str:00000000000000eb .LASF81
     /tmp/ccSROz0M.s:5112   .debug_str:0000000000000391 .LASF82
     /tmp/ccSROz0M.s:5164   .debug_str:0000000000000568 .LASF83
     /tmp/ccSROz0M.s:5034   .debug_str:000000000000012b .LASF84
     /tmp/ccSROz0M.s:5464   .debug_str:0000000000000e74 .LASF85
     /tmp/ccSROz0M.s:5202   .debug_str:0000000000000685 .LASF86
     /tmp/ccSROz0M.s:5210   .debug_str:00000000000006da .LASF87
     /tmp/ccSROz0M.s:5548   .debug_str:0000000000001140 .LASF88
     /tmp/ccSROz0M.s:5140   .debug_str:000000000000048d .LASF89
     /tmp/ccSROz0M.s:5450   .debug_str:0000000000000d58 .LASF90
     /tmp/ccSROz0M.s:5498   .debug_str:0000000000000f9e .LASF91
     /tmp/ccSROz0M.s:5174   .debug_str:00000000000005a8 .LASF92
     /tmp/ccSROz0M.s:5566   .debug_str:00000000000011e6 .LASF93
     /tmp/ccSROz0M.s:5100   .debug_str:000000000000033d .LASF94
GAS LISTING /tmp/ccSROz0M.s 			page 36


     /tmp/ccSROz0M.s:5482   .debug_str:0000000000000f2d .LASF95
     /tmp/ccSROz0M.s:5518   .debug_str:0000000000001070 .LASF96
     /tmp/ccSROz0M.s:5362   .debug_str:0000000000000ad2 .LASF97
     /tmp/ccSROz0M.s:5484   .debug_str:0000000000000f35 .LASF98
     /tmp/ccSROz0M.s:5250   .debug_str:00000000000007d3 .LASF99
     /tmp/ccSROz0M.s:5438   .debug_str:0000000000000d0e .LASF100
     /tmp/ccSROz0M.s:5552   .debug_str:0000000000001165 .LASF101
     /tmp/ccSROz0M.s:5510   .debug_str:000000000000100a .LASF102
     /tmp/ccSROz0M.s:5076   .debug_str:000000000000027c .LASF103
     /tmp/ccSROz0M.s:5396   .debug_str:0000000000000bd3 .LASF104
     /tmp/ccSROz0M.s:5172   .debug_str:000000000000059e .LASF105
     /tmp/ccSROz0M.s:5554   .debug_str:000000000000116f .LASF106
     /tmp/ccSROz0M.s:5418   .debug_str:0000000000000c7d .LASF107
     /tmp/ccSROz0M.s:5156   .debug_str:000000000000051b .LASF108
     /tmp/ccSROz0M.s:5318   .debug_str:0000000000000992 .LASF109
     /tmp/ccSROz0M.s:5314   .debug_str:000000000000097b .LASF110
     /tmp/ccSROz0M.s:5048   .debug_str:00000000000001b6 .LASF111
     /tmp/ccSROz0M.s:5044   .debug_str:00000000000001a3 .LASF112
     /tmp/ccSROz0M.s:5052   .debug_str:00000000000001c2 .LASF133
     /tmp/ccSROz0M.s:5062   .debug_str:000000000000020c .LASF113
     /tmp/ccSROz0M.s:5238   .debug_str:000000000000078c .LASF114
     /tmp/ccSROz0M.s:4994   .debug_str:0000000000000000 .LASF115
     /tmp/ccSROz0M.s:5206   .debug_str:00000000000006ac .LASF116
     /tmp/ccSROz0M.s:5200   .debug_str:000000000000067b .LASF117
     /tmp/ccSROz0M.s:5106   .debug_str:0000000000000357 .LASF118
     /tmp/ccSROz0M.s:5402   .debug_str:0000000000000c04 .LASF119
     /tmp/ccSROz0M.s:5490   .debug_str:0000000000000f4c .LASF120
     /tmp/ccSROz0M.s:5224   .debug_str:0000000000000736 .LASF122
     /tmp/ccSROz0M.s:5074   .debug_str:0000000000000262 .LASF124
     /tmp/ccSROz0M.s:5288   .debug_str:00000000000008e0 .LASF125
     /tmp/ccSROz0M.s:5582   .debug_str:000000000000126b .LASF126
     /tmp/ccSROz0M.s:5444   .debug_str:0000000000000d31 .LASF127
     /tmp/ccSROz0M.s:5384   .debug_str:0000000000000b64 .LASF128
     /tmp/ccSROz0M.s:5026   .debug_str:00000000000000f9 .LASF129
     /tmp/ccSROz0M.s:5502   .debug_str:0000000000000fac .LASF130
     /tmp/ccSROz0M.s:5580   .debug_str:0000000000001265 .LASF247
     /tmp/ccSROz0M.s:5252   .debug_str:00000000000007da .LASF249
     /tmp/ccSROz0M.s:5254   .debug_str:0000000000000804 .LASF156
     /tmp/ccSROz0M.s:5276   .debug_str:000000000000089e .LASF267
     /tmp/ccSROz0M.s:5360   .debug_str:0000000000000acd .LASF131
     /tmp/ccSROz0M.s:5220   .debug_str:0000000000000728 .LASF132
     /tmp/ccSROz0M.s:5432   .debug_str:0000000000000cdf .LASF134
     /tmp/ccSROz0M.s:5534   .debug_str:00000000000010f4 .LASF135
     /tmp/ccSROz0M.s:5506   .debug_str:0000000000000ff1 .LASF136
     /tmp/ccSROz0M.s:5560   .debug_str:00000000000011b6 .LASF138
     /tmp/ccSROz0M.s:5228   .debug_str:0000000000000753 .LASF139
     /tmp/ccSROz0M.s:5334   .debug_str:0000000000000a1b .LASF140
     /tmp/ccSROz0M.s:5068   .debug_str:0000000000000224 .LASF141
     /tmp/ccSROz0M.s:5458   .debug_str:0000000000000e41 .LASF142
     /tmp/ccSROz0M.s:5046   .debug_str:00000000000001ad .LASF143
     /tmp/ccSROz0M.s:5000   .debug_str:0000000000000020 .LASF144
     /tmp/ccSROz0M.s:5346   .debug_str:0000000000000a5c .LASF145
     /tmp/ccSROz0M.s:5558   .debug_str:0000000000001190 .LASF146
     /tmp/ccSROz0M.s:5218   .debug_str:0000000000000701 .LASF147
     /tmp/ccSROz0M.s:5180   .debug_str:00000000000005ee .LASF165
     /tmp/ccSROz0M.s:5236   .debug_str:0000000000000787 .LASF148
     /tmp/ccSROz0M.s:5472   .debug_str:0000000000000eca .LASF149
GAS LISTING /tmp/ccSROz0M.s 			page 37


     /tmp/ccSROz0M.s:5364   .debug_str:0000000000000add .LASF150
     /tmp/ccSROz0M.s:5070   .debug_str:000000000000022d .LASF151
     /tmp/ccSROz0M.s:5486   .debug_str:0000000000000f3f .LASF152
     /tmp/ccSROz0M.s:5176   .debug_str:00000000000005ad .LASF153
     /tmp/ccSROz0M.s:5080   .debug_str:000000000000029d .LASF154
     /tmp/ccSROz0M.s:5492   .debug_str:0000000000000f65 .LASF155
     /tmp/ccSROz0M.s:5166   .debug_str:0000000000000578 .LASF157
     /tmp/ccSROz0M.s:5132   .debug_str:0000000000000452 .LASF158
     /tmp/ccSROz0M.s:5420   .debug_str:0000000000000c89 .LASF159
     /tmp/ccSROz0M.s:5302   .debug_str:0000000000000934 .LASF160
     /tmp/ccSROz0M.s:4998   .debug_str:0000000000000017 .LASF161
     /tmp/ccSROz0M.s:5138   .debug_str:0000000000000478 .LASF162
     /tmp/ccSROz0M.s:5524   .debug_str:0000000000001092 .LASF163
     /tmp/ccSROz0M.s:5366   .debug_str:0000000000000ae6 .LASF164
     /tmp/ccSROz0M.s:5036   .debug_str:0000000000000146 .LASF166
     /tmp/ccSROz0M.s:5434   .debug_str:0000000000000ce7 .LASF167
     /tmp/ccSROz0M.s:5152   .debug_str:00000000000004e1 .LASF168
     /tmp/ccSROz0M.s:5394   .debug_str:0000000000000bae .LASF169
     /tmp/ccSROz0M.s:5038   .debug_str:0000000000000167 .LASF170
     /tmp/ccSROz0M.s:5128   .debug_str:0000000000000436 .LASF171
     /tmp/ccSROz0M.s:5354   .debug_str:0000000000000a8d .LASF175
     /tmp/ccSROz0M.s:5232   .debug_str:0000000000000777 .LASF172
     /tmp/ccSROz0M.s:5110   .debug_str:0000000000000388 .LASF173
     /tmp/ccSROz0M.s:5536   .debug_str:00000000000010fc .LASF174
     /tmp/ccSROz0M.s:5124   .debug_str:0000000000000412 .LASF176
     /tmp/ccSROz0M.s:5480   .debug_str:0000000000000f21 .LASF177
     /tmp/ccSROz0M.s:5452   .debug_str:0000000000000d60 .LASF178
     /tmp/ccSROz0M.s:5280   .debug_str:00000000000008bf .LASF179
     /tmp/ccSROz0M.s:5330   .debug_str:00000000000009f2 .LASF180
     /tmp/ccSROz0M.s:5122   .debug_str:00000000000003f0 .LASF181
     /tmp/ccSROz0M.s:5456   .debug_str:0000000000000e31 .LASF182
     /tmp/ccSROz0M.s:5516   .debug_str:0000000000001053 .LASF183
     /tmp/ccSROz0M.s:5316   .debug_str:0000000000000983 .LASF184
     /tmp/ccSROz0M.s:5468   .debug_str:0000000000000e92 .LASF185
     /tmp/ccSROz0M.s:5540   .debug_str:000000000000110c .LASF186
     /tmp/ccSROz0M.s:5578   .debug_str:0000000000001248 .LASF187
     /tmp/ccSROz0M.s:5170   .debug_str:0000000000000593 .LASF188
     /tmp/ccSROz0M.s:5184   .debug_str:000000000000061a .LASF189
     /tmp/ccSROz0M.s:5398   .debug_str:0000000000000beb .LASF190
     /tmp/ccSROz0M.s:5356   .debug_str:0000000000000a98 .LASF191
     /tmp/ccSROz0M.s:5190   .debug_str:0000000000000645 .LASF192
     /tmp/ccSROz0M.s:5008   .debug_str:0000000000000075 .LASF193
     /tmp/ccSROz0M.s:5368   .debug_str:0000000000000b07 .LASF293
     /tmp/ccSROz0M.s:5500   .debug_str:0000000000000fa3 .LASF194
     /tmp/ccSROz0M.s:5126   .debug_str:0000000000000421 .LASF195
     /tmp/ccSROz0M.s:5372   .debug_str:0000000000000b1e .LASF196
     /tmp/ccSROz0M.s:5022   .debug_str:00000000000000d6 .LASF197
     /tmp/ccSROz0M.s:5344   .debug_str:0000000000000a55 .LASF198
     /tmp/ccSROz0M.s:5350   .debug_str:0000000000000a66 .LASF199
     /tmp/ccSROz0M.s:5306   .debug_str:0000000000000949 .LASF200
     /tmp/ccSROz0M.s:5378   .debug_str:0000000000000b40 .LASF201
     /tmp/ccSROz0M.s:5542   .debug_str:000000000000111c .LASF202
     /tmp/ccSROz0M.s:5426   .debug_str:0000000000000cb1 .LASF203
     /tmp/ccSROz0M.s:5222   .debug_str:000000000000072e .LASF204
     /tmp/ccSROz0M.s:5568   .debug_str:00000000000011ec .LASF205
     /tmp/ccSROz0M.s:5286   .debug_str:00000000000008d8 .LASF206
     /tmp/ccSROz0M.s:5352   .debug_str:0000000000000a79 .LASF207
GAS LISTING /tmp/ccSROz0M.s 			page 38


     /tmp/ccSROz0M.s:5414   .debug_str:0000000000000c6e .LASF208
     /tmp/ccSROz0M.s:5508   .debug_str:0000000000000ff6 .LASF209
     /tmp/ccSROz0M.s:5234   .debug_str:0000000000000780 .LASF210
     /tmp/ccSROz0M.s:5388   .debug_str:0000000000000b84 .LASF211
     /tmp/ccSROz0M.s:5390   .debug_str:0000000000000b97 .LASF212
     /tmp/ccSROz0M.s:5154   .debug_str:0000000000000508 .LASF213
     /tmp/ccSROz0M.s:5104   .debug_str:0000000000000351 .LASF214
     /tmp/ccSROz0M.s:5020   .debug_str:00000000000000c4 .LASF215
     /tmp/ccSROz0M.s:5196   .debug_str:000000000000065b .LASF216
     /tmp/ccSROz0M.s:5092   .debug_str:0000000000000306 .LASF217
     /tmp/ccSROz0M.s:5570   .debug_str:0000000000001200 .LASF218
     /tmp/ccSROz0M.s:5412   .debug_str:0000000000000c56 .LASF219
     /tmp/ccSROz0M.s:5374   .debug_str:0000000000000b27 .LASF220
     /tmp/ccSROz0M.s:5572   .debug_str:000000000000120b .LASF221
     /tmp/ccSROz0M.s:5532   .debug_str:00000000000010ea .LASF222
     /tmp/ccSROz0M.s:5078   .debug_str:0000000000000287 .LASF223
     /tmp/ccSROz0M.s:5066   .debug_str:000000000000021a .LASF224
     /tmp/ccSROz0M.s:5358   .debug_str:0000000000000ab7 .LASF225
     /tmp/ccSROz0M.s:5308   .debug_str:0000000000000950 .LASF226
     /tmp/ccSROz0M.s:5504   .debug_str:0000000000000fd9 .LASF227
     /tmp/ccSROz0M.s:5436   .debug_str:0000000000000d09 .LASF228
     /tmp/ccSROz0M.s:5258   .debug_str:000000000000081d .LASF229
     /tmp/ccSROz0M.s:5404   .debug_str:0000000000000c0d .LASF230
     /tmp/ccSROz0M.s:5442   .debug_str:0000000000000d1e .LASF231
     /tmp/ccSROz0M.s:5340   .debug_str:0000000000000a36 .LASF232
     /tmp/ccSROz0M.s:5312   .debug_str:0000000000000962 .LASF233
     /tmp/ccSROz0M.s:5400   .debug_str:0000000000000bfd .LASF234
     /tmp/ccSROz0M.s:5098   .debug_str:0000000000000337 .LASF235
     /tmp/ccSROz0M.s:5212   .debug_str:00000000000006e9 .LASF236
     /tmp/ccSROz0M.s:5248   .debug_str:00000000000007cd .LASF237
     /tmp/ccSROz0M.s:5466   .debug_str:0000000000000e83 .LASF238
     /tmp/ccSROz0M.s:5094   .debug_str:0000000000000318 .LASF239
     /tmp/ccSROz0M.s:5526   .debug_str:00000000000010b4 .LASF240
     /tmp/ccSROz0M.s:5284   .debug_str:00000000000008d2 .LASF241
     /tmp/ccSROz0M.s:5262   .debug_str:0000000000000835 .LASF242
     /tmp/ccSROz0M.s:5538   .debug_str:0000000000001105 .LASF243
     /tmp/ccSROz0M.s:5194   .debug_str:0000000000000656 .LASF244
     /tmp/ccSROz0M.s:5576   .debug_str:000000000000123b .LASF245
     /tmp/ccSROz0M.s:5242   .debug_str:00000000000007a4 .LASF246
     /tmp/ccSROz0M.s:5004   .debug_str:000000000000003c .LASF248
     /tmp/ccSROz0M.s:5322   .debug_str:00000000000009a4 .LASF250
     /tmp/ccSROz0M.s:5530   .debug_str:00000000000010cd .LASF251
     /tmp/ccSROz0M.s:5282   .debug_str:00000000000008cb .LASF252
     /tmp/ccSROz0M.s:5296   .debug_str:0000000000000914 .LASF253
     /tmp/ccSROz0M.s:5182   .debug_str:0000000000000613 .LASF254
     /tmp/ccSROz0M.s:5514   .debug_str:000000000000103a .LASF255
     /tmp/ccSROz0M.s:5002   .debug_str:0000000000000035 .LASF256
     /tmp/ccSROz0M.s:5332   .debug_str:0000000000000a07 .LASF257
     /tmp/ccSROz0M.s:5370   .debug_str:0000000000000b17 .LASF258
     /tmp/ccSROz0M.s:5278   .debug_str:00000000000008ab .LASF259
     /tmp/ccSROz0M.s:5084   .debug_str:00000000000002b4 .LASF260
     /tmp/ccSROz0M.s:5168   .debug_str:0000000000000581 .LASF261
     /tmp/ccSROz0M.s:5130   .debug_str:000000000000043c .LASF262
     /tmp/ccSROz0M.s:5030   .debug_str:0000000000000108 .LASF263
     /tmp/ccSROz0M.s:5118   .debug_str:00000000000003d1 .LASF264
     /tmp/ccSROz0M.s:5102   .debug_str:0000000000000344 .LASF265
     /tmp/ccSROz0M.s:5474   .debug_str:0000000000000ef0 .LASF266
GAS LISTING /tmp/ccSROz0M.s 			page 39


     /tmp/ccSROz0M.s:5146   .debug_str:00000000000004a9 .LASF268
     /tmp/ccSROz0M.s:5422   .debug_str:0000000000000c8e .LASF269
     /tmp/ccSROz0M.s:5178   .debug_str:00000000000005d6 .LASF294
     /tmp/ccSROz0M.s:5564   .debug_str:00000000000011d2 .LASF295
     /tmp/ccSROz0M.s:5324   .debug_str:00000000000009b9 .LASF270
     /tmp/ccSROz0M.s:5108   .debug_str:0000000000000373 .LASF271
     /tmp/ccSROz0M.s:5042   .debug_str:0000000000000191 .LASF272
     /tmp/ccSROz0M.s:5546   .debug_str:0000000000001132 .LASF273
     /tmp/ccSROz0M.s:5256   .debug_str:0000000000000810 .LASF274
     /tmp/ccSROz0M.s:5018   .debug_str:00000000000000b7 .LASF275
     /tmp/ccSROz0M.s:5142   .debug_str:000000000000049b .LASF276
     /tmp/ccSROz0M.s:857    .text:0000000000000430 .LFB50
     /tmp/ccSROz0M.s:884    .text:0000000000000464 .LFE50
     /tmp/ccSROz0M.s:824    .text:00000000000003fc .LFB49
     /tmp/ccSROz0M.s:851    .text:0000000000000430 .LFE49
     /tmp/ccSROz0M.s:774    .text:00000000000003d4 .LFB48
     /tmp/ccSROz0M.s:818    .text:00000000000003fc .LFE48
     /tmp/ccSROz0M.s:785    .text:00000000000003e0 .LBB87
     /tmp/ccSROz0M.s:797    .text:00000000000003e8 .LBE87
     /tmp/ccSROz0M.s:4809   .debug_loc:0000000000000000 .LLST16
     /tmp/ccSROz0M.s:695    .text:000000000000034c .LFB47
     /tmp/ccSROz0M.s:768    .text:00000000000003d4 .LFE47
     /tmp/ccSROz0M.s:739    .text:0000000000000394 .LBB85
     /tmp/ccSROz0M.s:754    .text:00000000000003c0 .LBE85
     /tmp/ccSROz0M.s:753    .text:00000000000003c0 .LVL67
     /tmp/ccSROz0M.s:710    .text:0000000000000364 .LVL66
     /tmp/ccSROz0M.s:762    .text:00000000000003d0 .LVL68
     /tmp/ccSROz0M.s:463    .text:0000000000000210 .LFB46
     /tmp/ccSROz0M.s:689    .text:000000000000034c .LFE46
     /tmp/ccSROz0M.s:500    .text:0000000000000248 .LBB61
     /tmp/ccSROz0M.s:511    .text:0000000000000268 .LBE61
     /tmp/ccSROz0M.s:4818   .debug_loc:0000000000000026 .LLST9
     /tmp/ccSROz0M.s:505    .text:0000000000000258 .LVL43
     /tmp/ccSROz0M.s:4982   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccSROz0M.s:4825   .debug_loc:0000000000000049 .LLST12
     /tmp/ccSROz0M.s:574    .text:00000000000002b8 .LBB67
     /tmp/ccSROz0M.s:581    .text:00000000000002bc .LBE67
     /tmp/ccSROz0M.s:4836   .debug_loc:000000000000007f .LLST13
     /tmp/ccSROz0M.s:606    .text:00000000000002e4 .LBB69
     /tmp/ccSROz0M.s:613    .text:00000000000002e8 .LBE69
     /tmp/ccSROz0M.s:4843   .debug_loc:00000000000000a2 .LLST14
     /tmp/ccSROz0M.s:585    .text:00000000000002c4 .LVL51
     /tmp/ccSROz0M.s:604    .text:00000000000002e4 .LVL54
     /tmp/ccSROz0M.s:487    .text:0000000000000238 .LBB58
     /tmp/ccSROz0M.s:497    .text:0000000000000244 .LBE58
     /tmp/ccSROz0M.s:488    .text:0000000000000238 .LBB59
     /tmp/ccSROz0M.s:496    .text:0000000000000244 .LBE59
     /tmp/ccSROz0M.s:517    .text:000000000000026c .LBB62
     /tmp/ccSROz0M.s:529    .text:0000000000000274 .LBE62
     /tmp/ccSROz0M.s:4850   .debug_loc:00000000000000c5 .LLST10
     /tmp/ccSROz0M.s:547    .text:00000000000002a0 .LBB64
     /tmp/ccSROz0M.s:555    .text:00000000000002a4 .LBE64
     /tmp/ccSROz0M.s:4858   .debug_loc:00000000000000e9 .LLST11
     /tmp/ccSROz0M.s:628    .text:00000000000002fc .LBB73
     /tmp/ccSROz0M.s:666    .text:000000000000032c .LBE73
     /tmp/ccSROz0M.s:632    .text:00000000000002fc .LBB75
     /tmp/ccSROz0M.s:639    .text:0000000000000308 .LBE75
GAS LISTING /tmp/ccSROz0M.s 			page 40


     /tmp/ccSROz0M.s:643    .text:000000000000030c .LBB77
     /tmp/ccSROz0M.s:650    .text:0000000000000318 .LBE77
     /tmp/ccSROz0M.s:654    .text:000000000000031c .LBB79
     /tmp/ccSROz0M.s:661    .text:0000000000000328 .LBE79
     /tmp/ccSROz0M.s:673    .text:0000000000000338 .LBB81
     /tmp/ccSROz0M.s:681    .text:0000000000000340 .LBE81
     /tmp/ccSROz0M.s:4865   .debug_loc:000000000000010c .LLST15
     /tmp/ccSROz0M.s:533    .text:000000000000027c .LVL46
     /tmp/ccSROz0M.s:592    .text:00000000000002cc .LVL52
     /tmp/ccSROz0M.s:597    .text:00000000000002d8 .LVL53
     /tmp/ccSROz0M.s:685    .text:0000000000000348 .LVL65
     /tmp/ccSROz0M.s:15     .text:0000000000000000 .LFB45
     /tmp/ccSROz0M.s:457    .text:0000000000000210 .LFE45
     /tmp/ccSROz0M.s:5120   .debug_str:00000000000003eb .LASF277
     /tmp/ccSROz0M.s:4872   .debug_loc:000000000000012f .LLST0
     /tmp/ccSROz0M.s:5488   .debug_str:0000000000000f47 .LASF278
     /tmp/ccSROz0M.s:4883   .debug_loc:0000000000000165 .LLST1
     /tmp/ccSROz0M.s:5214   .debug_str:00000000000006f7 .LASF279
     /tmp/ccSROz0M.s:4894   .debug_loc:000000000000019b .LLST2
     /tmp/ccSROz0M.s:5348   .debug_str:0000000000000a61 .LASF280
     /tmp/ccSROz0M.s:4905   .debug_loc:00000000000001d1 .LLST3
     /tmp/ccSROz0M.s:5494   .debug_str:0000000000000f8d .LASF281
     /tmp/ccSROz0M.s:4916   .debug_loc:0000000000000207 .LLST4
     /tmp/ccSROz0M.s:4927   .debug_loc:000000000000023d .LLST5
     /tmp/ccSROz0M.s:4938   .debug_loc:0000000000000273 .LLST6
     /tmp/ccSROz0M.s:75     .text:0000000000000040 .LBB48
     /tmp/ccSROz0M.s:92     .text:000000000000004c .LBE48
     /tmp/ccSROz0M.s:94     .text:000000000000004c .LBB50
     /tmp/ccSROz0M.s:110    .text:0000000000000058 .LBE50
     /tmp/ccSROz0M.s:112    .text:0000000000000058 .LBB52
     /tmp/ccSROz0M.s:127    .text:0000000000000064 .LBE52
     /tmp/ccSROz0M.s:240    .text:00000000000000bc .LBB54
     /tmp/ccSROz0M.s:251    .text:00000000000000c0 .LBE54
     /tmp/ccSROz0M.s:4955   .debug_loc:00000000000002be .LLST7
     /tmp/ccSROz0M.s:253    .text:00000000000000c0 .LBB56
     /tmp/ccSROz0M.s:264    .text:00000000000000c4 .LBE56
     /tmp/ccSROz0M.s:4962   .debug_loc:00000000000002e1 .LLST8
     /tmp/ccSROz0M.s:220    .text:00000000000000a0 .LVL9
     /tmp/ccSROz0M.s:224    .text:00000000000000a8 .LVL10
     /tmp/ccSROz0M.s:233    .text:00000000000000b8 .LVL12
     /tmp/ccSROz0M.s:303    .text:00000000000000fc .LVL23
     /tmp/ccSROz0M.s:315    .text:0000000000000118 .LVL24
     /tmp/ccSROz0M.s:323    .text:0000000000000124 .LVL25
     /tmp/ccSROz0M.s:331    .text:0000000000000130 .LVL26
     /tmp/ccSROz0M.s:340    .text:0000000000000140 .LVL27
     /tmp/ccSROz0M.s:350    .text:0000000000000154 .LVL28
     /tmp/ccSROz0M.s:358    .text:0000000000000160 .LVL29
     /tmp/ccSROz0M.s:367    .text:0000000000000170 .LVL30
     /tmp/ccSROz0M.s:377    .text:0000000000000184 .LVL31
     /tmp/ccSROz0M.s:386    .text:0000000000000194 .LVL32
     /tmp/ccSROz0M.s:395    .text:00000000000001a4 .LVL33
     /tmp/ccSROz0M.s:404    .text:00000000000001b4 .LVL34
     /tmp/ccSROz0M.s:413    .text:00000000000001c4 .LVL35
     /tmp/ccSROz0M.s:418    .text:00000000000001d0 .LVL36
     /tmp/ccSROz0M.s:427    .text:00000000000001e0 .LVL37
     /tmp/ccSROz0M.s:436    .text:00000000000001f0 .LVL38
     /tmp/ccSROz0M.s:444    .text:00000000000001fc .LVL39
GAS LISTING /tmp/ccSROz0M.s 			page 41


     /tmp/ccSROz0M.s:453    .text:000000000000020c .LVL40
     /tmp/ccSROz0M.s:5380   .debug_str:0000000000000b53 .LASF282
     /tmp/ccSROz0M.s:5416   .debug_str:0000000000000c76 .LASF283
     /tmp/ccSROz0M.s:5264   .debug_str:000000000000083c .LASF284
     /tmp/ccSROz0M.s:5290   .debug_str:00000000000008e9 .LASF285
     /tmp/ccSROz0M.s:5192   .debug_str:000000000000064a .LASF286
     /tmp/ccSROz0M.s:5050   .debug_str:00000000000001bc .LASF287
     /tmp/ccSROz0M.s:5114   .debug_str:00000000000003aa .LASF288
     /tmp/ccSROz0M.s:5204   .debug_str:00000000000006a0 .LASF289
     /tmp/ccSROz0M.s:784    .text:00000000000003e0 .LVL69
     /tmp/ccSROz0M.s:794    .text:00000000000003e8 .LVL70
     /tmp/ccSROz0M.s:514    .text:000000000000026c .LVL44
     /tmp/ccSROz0M.s:569    .text:00000000000002b8 .LVL49
     /tmp/ccSROz0M.s:625    .text:00000000000002fc .LVL57
     /tmp/ccSROz0M.s:579    .text:00000000000002bc .LVL50
     /tmp/ccSROz0M.s:611    .text:00000000000002e8 .LVL55
     /tmp/ccSROz0M.s:526    .text:0000000000000274 .LVL45
     /tmp/ccSROz0M.s:546    .text:00000000000002a0 .LVL47
     /tmp/ccSROz0M.s:553    .text:00000000000002a4 .LVL48
     /tmp/ccSROz0M.s:672    .text:0000000000000338 .LVL63
     /tmp/ccSROz0M.s:679    .text:0000000000000340 .LVL64
     /tmp/ccSROz0M.s:48     .text:0000000000000030 .LVL0
     /tmp/ccSROz0M.s:136    .text:0000000000000078 .LVL7
     /tmp/ccSROz0M.s:214    .text:0000000000000090 .LVL8
     /tmp/ccSROz0M.s:226    .text:00000000000000ac .LVL11
     /tmp/ccSROz0M.s:54     .text:0000000000000034 .LVL1
     /tmp/ccSROz0M.s:282    .text:00000000000000dc .LVL18
     /tmp/ccSROz0M.s:295    .text:00000000000000f0 .LVL22
     /tmp/ccSROz0M.s:60     .text:0000000000000038 .LVL2
     /tmp/ccSROz0M.s:285    .text:00000000000000e0 .LVL19
     /tmp/ccSROz0M.s:66     .text:000000000000003c .LVL3
     /tmp/ccSROz0M.s:288    .text:00000000000000e4 .LVL20
     /tmp/ccSROz0M.s:72     .text:0000000000000040 .LVL4
     /tmp/ccSROz0M.s:291    .text:00000000000000e8 .LVL21
     /tmp/ccSROz0M.s:90     .text:000000000000004c .LVL5
     /tmp/ccSROz0M.s:279    .text:00000000000000d8 .LVL17
     /tmp/ccSROz0M.s:108    .text:0000000000000058 .LVL6
     /tmp/ccSROz0M.s:239    .text:00000000000000bc .LVL13
     /tmp/ccSROz0M.s:276    .text:00000000000000d4 .LVL16
     /tmp/ccSROz0M.s:248    .text:00000000000000c0 .LVL14
     /tmp/ccSROz0M.s:261    .text:00000000000000c4 .LVL15
     /tmp/ccSROz0M.s:893    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccSROz0M.s:572    .text:00000000000002b8 .LBB66
     /tmp/ccSROz0M.s:587    .text:00000000000002c4 .LBE66
     /tmp/ccSROz0M.s:600    .text:00000000000002dc .LBB71
     /tmp/ccSROz0M.s:618    .text:00000000000002f0 .LBE71
     /tmp/ccSROz0M.s:620    .text:00000000000002f0 .LBB72
     /tmp/ccSROz0M.s:627    .text:00000000000002fc .LBE72

UNDEFINED SYMBOLS
_Z5printPKc
_Z11thread_exitv
_ZN9Allocator10_mem_allocEm
_ZN9Allocator9_mem_freeEPKv
_ZN3TCB14_thread_createEPPS_PFvPvES2_S2_
_ZN3TCB12_thread_exitEv
_ZN3TCB16_thread_dispatchEv
GAS LISTING /tmp/ccSROz0M.s 			page 42


_ZN3TCB12_thread_joinEPS_
_ZN3TCB12_thread_joinEPS_m
_ZN3TCB5_forkEv
_ZN3TCB5_killEPS_
_ZN3Sem9_sem_openEPPS_j
_ZN3Sem10_sem_closeEPS_
_ZN3Sem9_sem_waitEPS_
_ZN3Sem11_sem_signalEPS_
_ZN6Cradle11_time_sleepEm
_ZN6Cradle12_thread_wakeEP3TCB
_ZN2IO5_getcEv
_ZN2IO5_putcEc
CONSOLE_STATUS
_ZN2IO6OutputE
_ZN8IOBuffer3getEv
CONSOLE_TX_DATA
_ZN6Cradle6updateEv
_ZN3TCB13timer_counterE
_ZN3TCB7runningE
_ZN9Scheduler3putEP3TCB
_ZN6Cradle8is_emptyEv
_ZN6Cradle4peakEv
_ZN6Cradle6removeEv
_ZN9Scheduler13high_priorityE
_ZN9Scheduler12mid_priorityE
_ZN9Scheduler12low_priorityE
plic_claim
CONSOLE_RX_DATA
_ZN2IO5InputE
_ZN8IOBuffer3putEc
plic_complete
